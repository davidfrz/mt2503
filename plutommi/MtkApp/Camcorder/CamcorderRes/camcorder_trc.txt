[APP NAME] = Camcorder
[MODULE] = MOD_MMI_MEDIA_APP
[SCOPE] = PLUTO

#start trace
TRC_MSG(MMI_TRC_CAMCO_ENTER_STATE, "[CAMCO]mmi_camco_enter_state from %Mmmi_camco_state_enum to %Mmmi_camco_state_enum")
TRC_MSG(MMI_TRC_CAMCO_EXIT_CURRENT_STATE, "[CAMCO]mmi_camco_exit_current_state %Mmmi_camco_state_enum")  
TRC_MSG(MMI_TRC_CAMCO_CAMERA_INTERNAL, "[CAMCO]mmi_camco_cam_entry_app_screen_internal")      
TRC_MSG(MMI_TRC_CAMCO_RECORDER_INTERNAL, "[CAMCO]mmi_camco_rec_entry_app_screen_internal")
TRC_MSG(MMI_TRC_CAMCO_TIMEOUT, "[CAMCO]mmi_camco_preview_terminate_hdlr")     
TRC_MSG(MMI_TRC_CAMCO_ERROR_MSG, "[CAMCO]mmi_camco_show_error_msg, current state = %Mmmi_camco_state_enum result = %d") 
TRC_MSG(MMI_TRC_CAMCO_ERROR_HDLR, "[CAMCO]mmi_camco_error_hdlr, current state = %Mmmi_camco_state_enum, enter the next state failed")     
TRC_MSG(MMI_TRC_CAMCO_CAMERA_EXIT, "[CAMCO]mmi_camco_cam_exit_app_screen")      
TRC_MSG(MMI_TRC_CAMCO_RECORDER_EXIT, "[CAMCO]mmi_camco_rec_exit_app_screen")
TRC_MSG(MMI_TRC_CAMCO_FILE_NAME_WRITE_MID, "[CAMCO]write nvram, mid = %d")
TRC_MSG(MMI_TRC_CAMCO_FILE_NAME_WRITE_RIGHT, "[CAMCO]write nvram, right = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_AF_RESULT, "[CAMCO]mmi_camco_cam_autofocus_result_hdlr, result = %d")   
TRC_MSG(MMI_TRC_CAMCO_CAM_BURSTSHOT_RESULT, "[CAMCO]mmi_camco_cam_burstshot_result_hdlr, result = %d captured_count = %d")   
TRC_MSG(MMI_TRC_CAMCO_CAM_XENON_FLASH_RESULT, "[CAMCO]mmi_camco_xenon_flash_callback, result = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_XENON_FLASH_TIMING, "[CAMCO]preview_start ticks = %d, xenon_flash_callback ticks = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_XENON_FLASH_DRAW, "[CAMCO]mmi_camco_osd_draw_xenon_flash, xenon state = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_BOTTON_PRESS, "[CAMCO]mmi_camco_cam_capture_botton_pressed ticks = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_FD_CYCLIC, "[CAMCO]mmi_camco_face_detect_result_cyclic")
TRC_MSG(MMI_TRC_CAMCO_CAM_FD_RESULT, "[CAMCO]mdi_camera_get_fd_result, fd_info.fd_result = %d, fd_info.fd_searched_num = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_CHECK_FILENAME, "[CAMCO]mmi_camco_cam_check_filename, duration = %d.%d")
TRC_MSG(MMI_TRC_CAMCO_CAM_GET_NEXT_FILENAME, "[CAMCO]mmi_camco_cam_get_next_filename, filename_seq_no = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_FILE_EXIT, "[CAMCO]mmi_camco_cam_get_next_filename, file exist")
TRC_MSG(MMI_TRC_CAMCO_CAM_FILE_NOT_EXIT, "[CAMCO]mmi_camco_cam_get_next_filename, file not exist")
TRC_MSG(MMI_TRC_CAMCO_CAM_IS_BINARY_SEARCH, "[CAMCO]mmi_camco_cam_get_next_filename, is_binary_search = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_BINARY_SEARCH_INFO, "[CAMCO]mmi_camco_cam_get_next_filename, binary_search left = %d, right = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_STITCH_RESULT, "[CAMCO]mmi_camco_cam_panorama_stitch_result_hdlr, state = %d")
TRC_MSG(MMI_TRC_CAMCO_SET_ACTIVE_CAM, "[CAMCO]mmi_camco_setting_set_active_cam, cam_id = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_AF_RESULT, "[CAMCO]mmi_camco_rec_autofocus_result_hdlr, result = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_RECORD_RESULT_CB, "[CAMCO]mmi_camco_rec_record_result_hdlr_callback, result = %d")    
TRC_MSG(MMI_TRC_CAMCO_REC_SAVE_RESULT_CB, "[CAMCO]mmi_camco_rec_save_result_hdlr_callback, result = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_OPEN_FILE_CB, "[CAMCO]mmi_camco_rec_open_done_hdlr, result = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_RECORDING_CYCLIC, "[CAMCO]mmi_camco_rec_record_timer_cyclic, rec_progress_ratio = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_EXT_SIZE_TIME, "[CAMCO]mmi_camco_rec_entry_for_external_request max_size = %d max_time_sec = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_EXT_SIZE, "[CAMCO]mmi_camco_rec_p->external_request.req_size = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_SWITCH, "[CAMCO]Switch")
TRC_MSG(MMI_TRC_CAMCO_REC_CHECK_FILENAME, "[CAMCO]mmi_camco_rec_check_filename, duration = %d.%d")
TRC_MSG(MMI_TRC_CAMCO_REC_GET_NEXT_FILENAME, "[CAMCO]mmi_camco_rec_get_next_filename, filename_seq_no = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_FILE_EXIT, "[CAMCO]mmi_camco_rec_get_next_filename, file exist")
TRC_MSG(MMI_TRC_CAMCO_REC_FILE_NOT_EXIT, "[CAMCO]mmi_camco_rec_get_next_filename, file not exist")
TRC_MSG(MMI_TRC_CAMCO_REC_IS_BINARY_SEARCH, "[CAMCO]mmi_camco_rec_get_next_filename, is_binary_search = %d")
TRC_MSG(MMI_TRC_CAMCO_REC_BINARY_SEARCH_INFO, "[CAMCO]mmi_camco_rec_get_next_filename, binary_search left = %d, right = %d")
TRC_MSG(MMI_TRC_CAMCO_UPDATE_ZOOM_FACTOR, "[CAMCO]mmi_camco_update_zoom_factor, zoom_value = %d")
TRC_MSG(MMI_TRC_CAMCO_UPDATE_ZOOM_STEP, "[CAMCO]mmi_camco_update_zoom_step, zoom_step = %d")
TRC_MSG(MMI_TRC_CAMCO_GET_STORAGE_FAILED, "[CAMCO]camcorder storage error in mmi_camco_get_storage_disk_path\n")
TRC_MSG(MMI_TRC_CAMCO_DEL_CB, "[CAMCO]mmi_camco_del_scr_callback, app_state = %Mmmi_camco_state_enum")
TRC_MSG(MMI_TRC_CAMCO_CURRENT_STATE, "[CAMCO]g_mmi_camco_cntx.app_state = %Mmmi_camco_state_enum")
TRC_MSG(MMI_TRC_CAMCO_RECOVER_STATE, "[CAMCO]mmi_camco_recover_state, recover state = %Mmmi_camco_state_enum")
TRC_MSG(MMI_TRC_CAMCO_CAM_PRE_DUR, "[CAPTURE][CAMCO] PRE duration = %d")
TRC_MSG(MMI_TRC_CAMCO_CAM_DEC_DUR, "[CAPTURE][CAMCO] DEC duration = %d")
TRC_MSG(MMI_TRC_CAMCO_CAMERA_ENTRY_FAIL, "[CAMCO]mmi_camco_cam_entry_app_screen [fail cause: %d]") 
TRC_MSG(MMI_TRC_CAMCO_CAMERA_CAM_PREVIEW_START, "[CAMCO]mmi_camco_cam_preview_start, ret = %d")
TRC_MSG(MMI_TRC_CAMCO_CAMERA_REC_PREVIEW_START, "[CAMCO]mmi_camco_rec_preview_start, ret = %d")