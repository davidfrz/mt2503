[APP NAME] = SNS Service
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_INET_APP

#start trace
TRC_MSG(SRV_SNS_DS_INIT_CALLBACK,               "[SRV_SNS][MMI] sns_ds_init_callback: result:%d")
TRC_MSG(SRV_SNS_DEINIT,                         "[SRV_SNS][MMI] sns_deinit: reason:%d, callback:%x")
TRC_MSG(SRV_SNS_ENTER_APP,                      "[SRV_SNS][MMI] srv_sns_enter_app: g_sns_instances:%d")
TRC_MSG(SRV_SNS_EXIT_APP,                       "[SRV_SNS][MMI] srv_sns_exit_app: g_sns_instances:%d")
TRC_MSG(SRV_SNS_FREE_LIBRARIES,                 "[SRV_SNS][MMI] srv_sns_free_libraries: g_sns_instances:%d")
TRC_MSG(SRV_SNS_VM_LOAD_LIBRARY,                "[SRV_SNS][MMI] vm_native_load_library: provider:%x, so_handle:%x")
TRC_MSG(SRV_SNS_VM_FREE_LIBRARY,                "[SRV_SNS][MMI] vm_native_free_library: provider:%x, so_handle:%x")
TRC_MSG(SRV_SNS_PLUGIN_LOAD_LIBRARY,            "[SRV_SNS][MMI] sns_plugin_load_library: provider:%x, is_preloaded:%d")
TRC_MSG(SRV_SNS_PLUGIN_GET_MEM_SIZE,            "[SRV_SNS][MMI] sns_plugin_get_mem_size: provider:%x, size:%d, get_tag:%d")
TRC_MSG(SRV_SNS_PLUGIN_ADD_REQ,                 "[SRV_SNS][MMI] sns_plugin_add_request: req:%d, provider:%x, process:%d, op:%d, priority:%d")
TRC_MSG(SRV_SNS_PLUGIN_REMOVE_REQ,              "[SRV_SNS][MMI] sns_plugin_remove_req: req:%d, provider:%x, process:%d, priority:%d, state:%d")
TRC_MSG(SRV_SNS_PLUGIN_CANCEL_REQ,              "[SRV_SNS][MMI] sns_plugin_cancel_req: req:%d, provider:%x, process:%d, priority:%d, state:%d")
TRC_MSG(SRV_SNS_PLUGIN_DISPATCH,                "[SRV_SNS][MMI] sns_plugin_dispatch: req:%d, provider:%x, process:%d, op:%d")
TRC_MSG(SRV_SNS_PLUGIN_DATA_CALLBACK,           "[SRV_SNS][MMI] sns_plugin_data_callback: req:%d, provider:%x, process:%d, priority:%d, state:%d, result:%d, count:%d, data:%x, paging:%d")
TRC_MSG(SRV_SNS_PLUGIN_UPGRADE,                 "[SRV_SNS][MMI] sns_plugin_upgrade: provider:%x, fs_ret:%d")
TRC_MSG(SRV_SNS_ADD_PROCESS,                    "[SRV_SNS][MMI] sns_add_process: process:%d, op:%d, args:%d")
TRC_MSG(SRV_SNS_REMOVE_PROCESS,                 "[SRV_SNS][MMI] sns_remove_process: process:%d, op:%d")
TRC_MSG(SRV_SNS_GENERIC_FETCHER,                "[SRV_SNS][MMI] sns_generic_fetcher: process:%d, op:%d, msg:%d, arg:%x")
TRC_MSG(SRV_SNS_LIST_CREATE,                    "[SRV_SNS][MMI] sns_list_create: list:%d, type:%d")
TRC_MSG(SRV_SNS_LOAD_LIST,                      "[SRV_SNS][MMI] srv_sns_load_list: list:%d, type:%d, process:%d, total:%d, more:%d, index:%d")
TRC_MSG(SRV_SNS_RELEASE_LIST,                   "[SRV_SNS][MMI] srv_sns_release_list: list:%d, type:%d, is_loading:%d, result:%d")
TRC_MSG(SRV_SNS_ACCESS_GLOBAL_SETTING,          "[SRV_SNS][MMI] sns_access_global_setting: setting:%d, value:%d, is_write:%d")
TRC_MSG(SRV_SNS_CANCEL,                         "[SRV_SNS][MMI] srv_sns_cancel: process:%d, op:%d")
TRC_MSG(SRV_SNS_STOP,                           "[SRV_SNS][MMI] srv_sns_stop: process:%d, op:%d")
TRC_MSG(SRV_SNS_UTIL_LOGOUT,                    "[SRV_SNS][MMI] sns_util_logout: provider:%x")
TRC_MSG(SRV_SNS_GET_LIST_OF_FRIENDS,            "[SRV_SNS][MMI] srv_sns_get_list_of_friends: provider:%x, group:%d, contact:%d, name:%x")
TRC_MSG(SRV_SNS_LIST_DS_CALLBACK,               "[SRV_SNS][MMI] sns_list_ds_callback: list:%d, result:%d, count:%d, total:%d, data:%x")
TRC_MSG(SRV_SNS_MMI_EVENT_HDLR,                 "[SRV_SNS][MMI] srv_sns_mmi_event_hdlr: %d")
TRC_MSG(SRV_SNS_CHECK_UPDATE,                   "[SRV_SNS][MMI] srv_sns_check_update: is_callback:%d, some_failed:%d, some_downloaded:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_READY,              "[SRV_SNS][MMI] sns_post_cb_evt_ready: g_sns_ready:%d, result:%d")
TRC_MSG(SRV_SNS_POST_CB_LIST_UPDATED,           "[SRV_SNS][MMI] sns_post_evt_list_updated: list:%d, type:%d, total:%d, start_index:%d, end_index:%d, more:%d, result:%d")
TRC_MSG(SRV_SNS_POST_CB_LIST_INVALIDATED,       "[SRV_SNS][MMI] sns_post_evt_list_invalidated: list:%d, reason:%d, provider:%x")
TRC_MSG(SRV_SNS_POST_CB_ITEM_UPDATED,           "[SRV_SNS][MMI] sns_post_evt_item_updated: list:%d, index:%d, pic_type:%d, pic_state:%d, evt.path:%x, result:%d")
TRC_MSG(SRV_SNS_POST_CB_ITEM_EXT_UPDATED,       "[SRV_SNS][MMI] sns_post_evt_item_ext_updated: list:%d, index:%d, type:%d, result:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_COUNTS_UPDATED,     "[SRV_SNS][MMI] sns_post_cb_evt_counts_updated: messages:%d, notifications:%d, requests:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_RESULT,             "[SRV_SNS][MMI] sns_post_evt_result: process:%d, op:%d, result:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_PROCESS_START,      "[SRV_SNS][MMI] sns_post_cb_evt_process_start: process:%d, op:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_PROCESS_COMPLETE,   "[SRV_SNS][MMI] sns_post_cb_evt_process_complete: process:%d, op:%d, success:%d, failure:%d")
TRC_MSG(SRV_SNS_POST_CB_NET_FETCH_LIST,         "[SRV_SNS][MMI] sns_post_cb_evt_list_net_fetch: is_end:%d, list:%d, type:%d")
TRC_MSG(SRV_SNS_POST_CB_EVT_ACCOUNT_LOGGED_OUT, "[SRV_SNS][MMI] sns_post_cb_evt_account_logged_out: provider:%x")
TRC_MSG(SRV_SNS_BOOTUP_INIT_COMPLETED_HDLR,     "[SRV_SNS][MMI] srv_sns_bootup_init_completed_hdlr")

TRC_MSG(SRV_SNS_DS_INIT, "[SRV_SNS][MMI] Init data storage service, storage: %d")
TRC_MSG(SRV_SNS_DS_DEINIT, "[SRV_SNS][MMI] Deinit data storage service, hdlr: %d")
TRC_MSG(SRV_SNS_DS_OPEN, "[SRV_SNS][MMI] Open data storage service, hdlr: %d, open flag: %d")
TRC_MSG(SRV_SNS_DS_CLOSE, "[SRV_SNS][MMI] Close data storage service, hdlr: %d")
TRC_MSG(SRV_SNS_DS_INSERT, "[SRV_SNS][MMI] Insert data, hdlr: %d, processing: %d, provider: %d, table: %d, count: %d, data: %d, state: %d")
TRC_MSG(SRV_SNS_DS_UPDATE, "[SRV_SNS][MMI] Update data, hdlr: %d, processing: %d, provider: %d, table: %d")
TRC_MSG(SRV_SNS_DS_DELETE, "[SRV_SNS][MMI] Delete data, hdlr: %d, processing: %d, provider: %d, table: %d")
TRC_MSG(SRV_SNS_DS_ABORT, "[SRV_SNS][MMI] Abort request, hdlr: %d, processing: %d")
TRC_MSG(SRV_SNS_DS_QUERY, "[SRV_SNS][MMI] Query data, hdlr: %d, processing: %d, provider: %d, table: %d")
TRC_MSG(SRV_SNS_DS_LOGIN, "[SRV_SNS][MMI] Login account, hdlr: %d, processing: %d, provider: %d")
TRC_MSG(SRV_SNS_DS_LOGOUT, "[SRV_SNS][MMI] Logout account, hdlr: %d, processing: %d, provider: %d")
TRC_MSG(SRV_SNS_DS_UPDATE_EVENT, "[SRV_SNS][MMI] Update event, hdlr: %d, processing: %d, provider: %d")
TRC_MSG(SRV_SNS_DS_QUERY_EVENT, "[SRV_SNS][MMI] Query event, hdlr: %d, processing: %d, provider: %d, type: %d, contact id: %d")	
TRC_MSG(SRV_SNS_DS_IS_CONTACT_LINKED, "[SRV_SNS][MMI] Is contact linked, hdlr: %d, processing: %d, provider: %d, contact id: %d")	
TRC_MSG(SRV_SNS_DS_OPEN_RSP, "[SRV_SNS][MMI] Open result: %d")
TRC_MSG(SRV_SNS_DS_CLOSE_RSP, "[SRV_SNS][MMI] Close result: %d")
TRC_MSG(SRV_SNS_DS_UPDATE_RSP, "[SRV_SNS][MMI] Update result: %d, abort: %d")
TRC_MSG(SRV_SNS_DS_INSERT_RSP, "[SRV_SNS][MMI] Insert result: %d, abort: %d")
TRC_MSG(SRV_SNS_DS_QUERY_RSP, "[SRV_SNS][MMI] Query result: %d, abort: %d")
TRC_MSG(SRV_SNS_DS_DELETE_RSP, "[SRV_SNS][MMI] Delete result: %d, abort: %d")
TRC_MSG(SRV_SNS_DS_LOGOUT_RSP, "[SRV_SNS][MMI] Delete result: %d, abort: %d")
TRC_MSG(SNST_DS_FS_FAILED, "[SNST_DS][SNS] FS error: %d, line: %d")
TRC_MSG(SNST_DS_MEM_FULL, "[SNST_DS][SNS] Failed to allocate memory, size: %d, line: %d")
TRC_MSG(SNST_DS_OP_FAILED, "[SNST_DS][SNS] Data storage service operation failed, index: %d, line: %d")
TRC_MSG(SNST_DS_WARNING, "[SNST_DS][SNS] Might cause failure latter, line: %d")