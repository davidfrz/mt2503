[APP NAME] = VAPP_VIDEO_PLAYER_CP
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(TRC_VAPP_VIDEOCP_BASE_ON_PLAY_FINISHED, "[VideoCP][Base] onPlayFinished, %d")
TRC_MSG(TRC_VAPP_VIDEOCP_BASE_QUERY_SUBTITLE_TRACK_COUNT, "[VideoCP][Base] querySubtitleTrackCount, count[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_BASE_FIX_AND_CHECK_SUBTITLE_INFO_INDEX, "[VideoCP][Base] checkAndFixToValidSubtitleInfoIndex, infoIndex[%d], valid track")
TRC_MSG(TRC_VAPP_VIDEOCP_BASE_FIX_AND_CHECK_SUBTITLE_INFO_INDEX_ERR, "[VideoCP][Base] checkAndFixToValidSubtitleInfoIndex, infoIndex[%d], count <= 0, err!")
TRC_MSG(TRC_VAPP_VIDEOCP_BASE_FIX_AND_CHECK_SUBTITLE_INFO_INDEX_FIX, "[VideoCP][Base] checkAndFixToValidSubtitleInfoIndex, infoIndex[%d], isValid[0], usePhoneLCC[%d], fixed track info index[%d]")


TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_NON_BLOCK_SEEK_DURING_OPEN_FAILED, "[VideoCP][Video] handleVideoOpenResult(), non_block_seek ret = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_ON_NON_BLOCK_SEEK_DURING_OPEN, "[VideoCP][Video] onNonBlockSeekingFinishedDuringOpen(), ret = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_ON_SEEK_FINISHED_RET_D, "[VideoCP][Video] onSeekFinished ret %d")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_CHANGE_SCREEN_MODE, "[VideoCP][Video] changeVideoScreenMode")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_SWITCH_2D_3D_TRACK, "[VideoCP][Video] switchTo3DTrack, to3D = %d, index =%d")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_PLAY, "[VideoCP][Video] play, res = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_CLOSE, "[VideoCP][Video] destroy with close func 0x%x")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_CLOSE_WITHOUT_MPL_CLOSE, "[VideoCP][Adp] destroy without close")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_3D_VIDEO_IN_WP_SCENRAIO, "[VideoCP] 3D track only video in wallpaper scenario, force use 3D mode")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_BLOCKING_GET_FRAME, "[VideoCP][Video] blockingGetFrame, hVideo[%d], hSubtitle[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_SWITCH_SUBTITLE, "[VideoCP][Video] switchSubtitleTrack, valid infoIndex[%d | %d], trackIndex[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_SWITCH_SUBTITLE_FAILED, "[VideoCP][Video] switchSubtitleTrack, failed!")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_SEEK_EX_WAIT_RENDER, "[VideoCP][video] _seekEx, wait RenderingComplet")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_GET_FRAME_EX_WAIT_RENDER, "[VideoCP][video] _getFrameEx, wait RenderingComplet")


TRC_MSG(TRC_VAPP_VIDEOCP_PDL_OPEN, "[VideoCP][PDL] mdi_video_progressive_open_file, res[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_OPEN_RESULT, "[VideoCP][PDL]handleVideoOpenResult callback, ret[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_GET_BUF_PERCENTAGE, "[VideoCP][PDL] mdi_video_progressive_get_buf_percentage, res[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_ON_BUF_TIMER_GET_BUF_PERCENTAGE_DETAIL, "[VideoCP][PDL] onBufferTimer, mdi_video_progressive_get_buf_percentage, res[%d], per[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_ON_BUF_TIMER, "[VideoCP][PDL] onBufferTimer")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_ON_BUF_TIMER_WITH_BUF_DATA,  "[VideoCP][PDL] onBufferTimer with m_bufferOpenData")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_HANDLE_PLAY_GET_BUF_PERCENTAGE_DETAIL, "[VideoCP][PDL] play, mdi_video_progressive_get_buf_percentage, res[%d], per[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_GET_SEEK_REGION, "[VideoCP][PDL] getSeekableRegion")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_CREATE_MDI_PLAYER, "[VideoCP][PDL] create m_mdiPlayer")
TRC_MSG(TRC_VAPP_VIDEOCP_PDL_FILE_NOT_ENOUGH, "[VideoCP][PDL] MDI_RES_VDOPLY_PROGRESSIVE_FILE_NOT_ENOUGH")


TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_OPEN, "[VideoCP][Streaming] open")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_INIT_FAIL_D, "[VideoCP][Streaming] init fail %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_ON_STREAM_CONNECTED_RET_D, "[VideoCP][Streaming] onStreamConnected ret %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_ON_STREAM_BUFFERED_RET_D, "[VideoCP][Streaming] onStreamBuffered ret %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAM_PLAYER_ON_BUFFERING_TICK_PERCENT_D, "[VideoCP][Streaming] onBufferingTick percent %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_PLAY, "[VideoCP][Streaming] play")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_USE_DATA_ACCOUNT_ID_X, "[VideoCP][Streaming] use data account id %x")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_PLAY_FAILED_BECAUSE_NOT_BUFFERED_HINT_TIME_D_TOTAL_DURATION_D, "[VideoCP][Streaming] play failed because not buffered, hint time = %d, total_duration = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_GET_CURRENT_PLAY_TIME_STATE_D, "[VideoCP][Streaming] getCurrentPlayTime, state = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_GET_CURRENT_PLAY_TIME_D_D_LINE_D, "[VideoCP][Streaming] getCurrentPlayTime = %d,%d, line:%d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_STOP_WHEN_PLAYING, "[VideoCP][Streaming] stop() when playing")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_STOP_WHEN_BUFFER, "[VideoCP][Streaming] stop() when buffer")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_STOP_WHEN_CONNECTING, "[VideoCP][Streaming] stop() when connecting")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_STOP_IN_INCORRECT_STATE_D, "[VideoCP][Streaming] stop() in incorrect state %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK_TIME_X_D_STATE_D, "[VideoCP][Streaming] seek, time: %x%d, state=%d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK_STATE_BUFFERED, "[VideoCP][Streaming] seek, state=buffered")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK_PLAY_FINISHED, "[VideoCP][Streaming] seek, play finished.")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK_STATE_INITED, "[VideoCP][Streaming] seek, state=inited")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SUCCEED_TO_SEEK_LINE_D, "[VideoCP][Streaming] succeed to seek, line:%d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_FAIL_TO_SEEK_LINE_D, "[VideoCP][Streaming] fail to seek, line:%d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK_WRONG_STATE_D, "[VideoCP][Streaming] seek wrong state %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_CHANGE_SCREEN_MODE, "[VideoCP][Streaming] changeVideoScreenMode")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_DISCONNECT, "[VideoCP][Streaming] disconnect, state = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_HANDLE_PLAY_FINISHED, "[VideoCP][Streaming] handlePlayFinished, ret[%d], state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_HANDLE_PLAY_FINISHED_SKIP_ERROR, "[VideoCP][Streaming] handlePlayFinished, ret[%d], state[%d], play continuously")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SEEK, "[VideoCP][Steaming] Seek, res[%d], line[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_CONNECT_HAD_RELEASE, "[VideoCP][Streaming] connect, had release[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_CONNECT, "[VideoCP][Streaming] connect, bearer state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_CREATE_STREAMING_CONNECTION, "[VideoCP][Streaming] createStreamingConnection, res[%d], old state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_ON_DELAY_CONNECT_AFTER_BEARER_RELEASED, "[VideoCP][Streaming] onDelayConnectAfterBearerReleased")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_HANDLE_DELAY_CONNECT_AFTER_BEARER_RELEASED, "[VideoCP][Streaming] handleDelayConnectAfterBearerReleased, bear info type[%d], needDelayConnect[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_RELEASE_BEARER, "[VideoCP][Streaming] releaseBearer, res[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_SET_IS_DELAY_CONNECT_AFTER_BEARER_RELEASED, "[VideoCP][Streaming] setIsDelayConnectAfterBearerReleased[%d]")


TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_PREPARE_DISPLAY, "[VideoCP][Display] prepareDisplay, has video[%d], has subtitle[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_PREPARE_VIDEO, "[VideoCP][Display] prepare video display frame")
TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_PREPARE_SUBTITLE, "[VideoCP][Display] prepare subtitle display frame, err[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_UNPREPARE_VIDEO, "[VideoCP][Display] unprepare video display frame")
TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_UNPREPARE_SUBTITLE, "[VideoCP][Display] unprepare subtitle display frame")
TRC_MSG(TRC_VAPP_VIDEOCP_DISPLAY_VIDEO_PREPARED_EMIT, "[VideoCP][Display] onVideoFramePrepared, m_signalPlayReady.emit")
TRC_MSG(TRC_VAPP_VIDEOCP_SUBTITLE_VIDEO_PREPARED_EMIT, "[VideoCP][Display] onSubtileFramePrepared, m_signalPlayReady.emit")


TRC_MSG(TRC_VAPP_VIDEOCP_CBM_BEARER_EVENT_DISCONNECT, "[VideoCP] cbm_bearer_event_disconnect, state = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_CBM_BEARER_EVENT_SWITCH, "[VideoCP] cbm_bearer_event_switch, state = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_ERROR, "[VideoCP] prepareAndShowVideo error %d")
TRC_MSG(TRC_VAPP_VIDEOCP_BLOCKING_SEEK_AND_GET_FRAME, "[VideoCP] blockingSeekAndGetFrame, res = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_SEEK, "[VideoCP] seek, res = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_SHOW_AUDIO_ONLY_ICON, "[VideoCP] showAudioOnlyIcon, show[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_OPEN_FILE, "[VideoCP] openFile")
TRC_MSG(TRC_VAPP_VIDEOCP_DISABLE_NEXT_DRMCONSUMPTION, "[VideoCP] disableNextDRMConsumption")
TRC_MSG(TRC_VAPP_VIDEOCP_CLOSE_FILE, "[VideoCP] closeFile")
TRC_MSG(TRC_VAPP_VIDEOCP_PLAY_WITH_SPEED, "[VideoCP] playWithSpeed")
TRC_MSG(TRC_VAPP_VIDEOCP_CANNOT_PLAY_WITH_SPEED_DURING_CALL, "[VideoCP] cannot playWithSpeed during call")
TRC_MSG(TRC_VAPP_VIDEOCP_PLAY_WITH_SPEED_WHILE_VIDEO_FRAME_NOT_READY, "[VideoCP][VideoPlayer] playWithSpeed while video frame not ready")
TRC_MSG(TRC_VAPP_VIDEOCP_PLAY_WITH_SPEED_WRONG_STATE, "[VideoCP] playWithSpeed wrong state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_MDI_AUDIO_SUSPEND_BACKGROUND_PLAY_BY_APP, "[VideoCP] mdi_audio_suspend_background_play_by_app ret[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PLAY_AND_CHANGE_STATE_WRONG_STATE, "[VideoCP] playAndChangeState wrong state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PLAY,  "[VideoCP] play, call m_mdiPlayer->play, ret = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_PAUSE, "[VideoCP] pause, call m_mdiPlayer->stop ret = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_STOP,  "[VideoCP] stop, call m_mdiPlayer->stop ret = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_VIDEO_ASPECT_RATIO_CALLED_WHEN_NOT_READY, "[VideoCP] getVideoAspectRatio called when not ready")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_VIDEO_ASPECT_VIDEO_SIZE, "[Vdieocp] video size[%d, %d]")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_VIDEO_ASPECT_INVALID_SIZE, "[Vdieocp] invalid size[%d, %d], fix to [%d, %d]")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_VIDEO_ASPECT_RETURN_SIZE, "[Vdieocp] getVideoAspectRatio return size [%d, %d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO, "[VideoCP] prepareAndShowVideo")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_INVALID_WIDTH, "[VideoCP] invalid width, change %d to %d")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_INVALID_HEIGHT, "[VideoCP] invalid height, change %d to %d")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_IS_READY, "[VideoCP] prepareAndShowVideo, isReady[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_GET_FRAME, "[VideoCP] prepareAndShowVideo, get frame")
TRC_MSG(TRC_VAPP_VIDEOCP_PREPARE_AND_SHOW_VIDEO_SET_M_VIDEO_FRAME_NOT_READY_TRUE, "[VideoCP] prepareAndShowVideo, set m_videoFrameNotReady true")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_SUBTITLE, "[VideoCP] switchSubtitle[%d], state[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_SUBTITLE_2, "[VideoCP] switchSubtitle, __set subtitle index = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_SET_SCREEN_MODE_ERR, "[VideoCP] setVideoScreenMode, mode %d is unsupported")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_SET_SCREEN_MODE_ERR_2, "[VideoCP] m_mdiPlayer not exist")
TRC_MSG(TRC_VAPP_VIDEOCP_STREAMING_OPENING_ERROR, "[VideoCP] Streaming opening error %d")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_VIDEO_OPEN_RESULT, "[VideoCP] handleVideoOpenResult, ret[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_VIDEO_OPEN_RESULT_AUDIO_ONLY, "[VideoCP] handleVideoOpenResult, audio only, line[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_VIDEO_OPEN_RESULT_PREPARE_DISPLAY, "[VideoCP] handleVideoOpenResult, prepare display, line[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_VIDEO_OPEN_RESULT_SUBTITLE_COUNT, "[VideoCP] handleVideoOpenResult, adaptor_subtitle[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_VIDEO_OPEN_RESULT_SUBTITLE_RES, "[VideoCP][Video] handleVideoOpenResult, subtitleRes = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_ASYNC_SEEK_RESULT,       "[VideoCP] handleAsyncSeekResult, ret[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_ASYNC_SEEK_RESULT_ERROR, "[VideoCP] handleAsyncSeekResult, error[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_ASYNC_SEEK_RESULT_SHOULD_SHOW_AUDIO_ONLY_ICON, "[VideoCP] handleAsyncSeekResult, show audio only icon")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_SEEK_DONE_AFTER_OPEN, "[VideoCP][VideoPlayer] onSeekDoneAfterOpen, res[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_FRAME_PREPARE_AFTER_OPEN, "[VideoCP] onVideoFramePreparedAfterOpen, res[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_PLAY_FINISHED, "[VideoCP] handlePlayFinished, ret[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_VIDEO_INFO_TOTAL_DURATION_D, "[VideoCP] video_info, total_duration = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_VIDEO_FRAME_PREPARED_SET_M_VIDEO_FRAME_NOT_READY_FALSE, "[VideoCP] onVideoFramePrepared, m_videoFrameNotReady false")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_VIDEO_FRAME_PREPARED_RESUME, "[VideoCP] onVideoFramePrepared__, resume[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_VIDEO_FRAME_PREPARED_AFTER_SEEK_SET_M_VIDEO_FRAME_NOT_READY_FALSE, "[VideoCP] onVideoFramePreparedAfterSeek, set m_videoFrameNotReady false")
TRC_MSG(TRC_VAPP_VIDEOCP_CREATE_A2_DPCONNECTION, "[VideoCP] createA2DPConnection, playAfterBTReady[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_VIDEO_FRAME_PREPARED_AFTER_OPEN_SET_M_VIDEO_FRAME_NOT_READY_FALSE, "[VideoCP] onVideoFramePreparedAfterOpen, set m_videoFrameNotReady false")
TRC_MSG(TRC_VAPP_VIDEOCP_HANDLE_BTOPEN_CALLBACK, "[VideoCP] handleBTOpenCallback [%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_BTOPEN_CALLBACK, "[VideoCP] onBTOpenCallback [%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_ON_BTDEVICE_ARRIVAL_EVT, "[VideoCP] onBTDeviceArrival evt=[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_CHANGE_ROTATION, "[VideoCP][Player] changeRotation")
TRC_MSG(TRC_VAPP_VIDEOCP_ENABLE_SWITCH_3D_ANAGLYGH, "[Vdieocp][Player] enableSwitchTo3DAnaglyph, target = %d, shouldPopupNotSupport = %d, canSwitch = %d")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_3D_ANAGLYGH, "[Vdieocp][Player] switchTo3DAnaglyph, state=%d time=%x,%d")
TRC_MSG(TRC_VAPP_VIDEOCP_SWITCH_3D_ANAGLYGH_IN_WRONG_STATE, "[Vdieocp][Player] switchTo3DAnaglyph in worng state, state=%d")
TRC_MSG(TRC_VAPP_VIDEOCP_IS_SEEKABLE, "[VideoCP] isSwitching, seekable[%d]")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_TOTAL_DURATION, "[VideoCP] isSwitching, getTotalDuration")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_CUR_TIME, "[VideoCP] isSwitching, getCurrentTime")
TRC_MSG(TRC_VAPP_VIDEOCP_GET_SEEKABLE_REGION, "[VideoCP] getSeekableRegion ret=%d, time=%x%d")
TRC_MSG(TRC_VAPP_VIDEOCP_POPUP_ERR_MSG, "[VideoCP] popupMDIErrorMessage[%d]")
