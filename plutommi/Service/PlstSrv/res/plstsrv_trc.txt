[APP NAME] = Play List Service
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#start trace

/* General */

TRC_MSG(MMI_PLS_PLS_ERROR_HAPPEN,"[PLST SRV][MMI] error happened at line = [%d]")
TRC_MSG(MMI_PLS_PLST_WAIT_EVENT,"[PLST SRV][EVENT] pls_wait_event: evt = [%d] line = [%d]")
TRC_MSG(MMI_PLS_PLST_SET_EVENT,"[PLST SRV][EVENT] pls_set_event: evt = [%d] line = [%d]")
TRC_MSG(MMI_PLS_PLST_START_MEASURE,"[PLST SRV][MMI][SWLA]start at line [%d]")
TRC_MSG(MMI_PLS_PLST_STOP_MEASURE,"[PLST SRV][MMI][SWLA]start at line [%d]")

/* PlstSrv.c */

TRC_MSG(MMI_PLS_MMI_DEFAULT_PLST_CONFIGRE,"[PLST SRV][MMI]srv_plst_default_playlist_configure default_type = %d") 
TRC_MSG(MMI_PLS_MMI_DEFAULT_PLST_GET_TYPE,"[PLST SRV][MMI]srv_plst_default_playlist_get_type srv_hdr = %d, index = %d") 
TRC_MSG(MMI_PLS_MMI_DEFAULT_PLST_GET_TYPE_RET,"[PLST SRV][MMI]srv_plst_default_playlist_get_type return ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_OPEN,"[PLST SRV][MMI]srv_plst_library_open srv_hdr = %d, open_flag = %d")
TRC_MSG(MMI_PLS_MMI_LIB_STOP_OPEN,"[PLST SRV][MMI]srv_plst_library_stop_open value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_CLOSE,"[PLST SRV][MMI]srv_plst_library_close value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_UPDATE,"[PLST SRV][MMI]srv_plst_library_update value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_STOP_UPDATE,"[PLST SRV][MMI]srv_plst_library_stop_update value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_ADD,"[PLST SRV][MMI]srv_plst_library_add value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_STOP_ADD,"[PLST SRV][MMI]srv_plst_library_stop_add value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_PAUSE_UPDATE,"[PLST SRV][MMI]srv_plst_library_pause_update value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_RESUME_UPDATE,"[PLST SRV][MMI]srv_plst_library_resume_update value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_RESET_ALL_LIST,"[PLST SRV][MMI]srv_plst_list_reset_all_list value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_ENTRY,"[PLST SRV][MMI]srv_plst_list_entry hdr = %d, index = %d, type = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_EXIT,"[PLST SRV][MMI]srv_plst_list_exit hdr = %d, value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIB_SET_MEMORY,"[PLST SRV][MMI]srv_plst_set_temp_memory hdr = %d, size = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ITEM_COUNT,"[PLST SRV][MMI]srv_plst_list_get_item_count hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ITEM_HINE_COUNT,"[PLST SRV][MMI]srv_plst_list_get_item_hint_count hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ITEM_HINE_COUNT_EX,"[PLST SRV][MMI]srv_plst_list_get_item_hint_count_ex hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ITEM_DISPLAY,"[PLST SRV][MMI]srv_plst_list_get_item_display hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ITEM_ID,"[PLST SRV][MMI]srv_plst_list_get_item_id hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_HINT_COUNT,"[PLST SRV][MMI]srv_plst_list_get_hint_count hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ARTWORK_BY_ID,"[PLST SRV][MMI]srv_plst_list_get_artwork_by_media_id hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ARTWORK,"[PLST SRV][MMI]srv_plst_list_get_artwork hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ARTWORK_ASYC,"[PLST SRV][MMI]srv_plst_list_get_artwork_async hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_STOP_ARTWORK,"[PLST SRV][MMI]srv_plst_list_get_item_artwork_async_stop hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ADD_TO_PLST,"[PLST SRV][MMI]srv_plst_media_add_to_playlist hdr = %d,index = %d,plst_id= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_STOP_ADD_TO_PLST,"[PLST SRV][MMI]srv_plst_media_stop_add_to_playlist hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_GET_ID,"[PLST SRV][MMI]srv_plst_media_get_id hdr = %d, index= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_GET_PATH,"[PLST SRV][MMI]srv_plst_media_get_path hdr = %d, index= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_GET_DETAILS,"[PLST SRV][MMI]srv_plst_media_get_details hdr = %d, value= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_UPDATE_DETAILS,"[PLST SRV][MMI]srv_plst_media_update_details hdr = %d, value= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_UPDATE_PLAYING_INFO,"[PLST SRV][MMI]srv_plst_media_update_playing_info hdr = %d, id = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_UPDATE_PLAYING_INFO_RET,"[PLST SRV][MMI]srv_plst_media_update_playing_info return hdr = %d, ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_MARK_BEGIN,"[PLST SRV][MMI]srv_plst_list_multi_select_mark_begin hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_MARK_END,"[PLST SRV][MMI]srv_plst_list_multi_select_mark_end hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_SET_MARK,"[PLST SRV][MMI]srv_plst_list_multi_select_set_mark hdr = %d, index = %d, is_mark = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_MARK,"[PLST SRV][MMI]srv_plst_list_multi_select_get_mark hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_MARK_ALL,"[PLST SRV][MMI]srv_plst_list_multi_select_mark_all hdr = %d, is_mark = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_SET_ACTIVE,"[PLST SRV][MMI]srv_plst_list_set_as_active hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_DELETE,"[PLST SRV][MMI]srv_plst_list_item_delete hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_STOP_DELETE,"[PLST SRV][MMI]srv_plst_list_item_stop_delete hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_CREATE,"[PLST SRV][MMI]srv_plst_plst_create hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_DELETE,"[PLST SRV][MMI]srv_plst_plst_delete hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_STOP_DELETE,"[PLST SRV][MMI]srv_plst_plst_stop_delete hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_RENAME,"[PLST SRV][MMI]srv_plst_plst_rename hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_GET_PLST_ID,"[PLST SRV][MMI]srv_plst_plst_get_plst_id hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_GET_ACTIVE_LIST_INDEX,"[PLST SRV][MMI]srv_plst_plst_get_active_plst_item_index hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_GET_ACTIVE_LIST_ID,"[PLST SRV][MMI]srv_plst_plst_get_active_plst_id hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_PLST_GET_ACTIVE_LIST_LIEM_COUNT,"[PLST SRV][MMI]srv_plst_get_active_plst_item_count hdr = %d, value= %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ENTRY_DEFAULT_LIST,"[PLST SRV][MMI]srv_plst_list_default_list_entry hdr = %d, value = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ACITVE_LIST_TYPE,"[PLST SRV][MMI]srv_plst_get_active_list_media_type hdr = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_EXIT_DEFAULT_LIST,"[PLST SRV][MMI]srv_plst_list_default_list_exit hdr = %d,value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REMOVE,"[PLST SRV][MMI]srv_plst_plst_item_remove hdr = %d,index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_STOP_REMOVE,"[PLST SRV][MMI]srv_plst_plst_item_stop_remove hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REORDER_BEGIN,"[PLST SRV][MMI]srv_plst_plst_item_reorder_begin hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REORDER_GET_DISPLAY,"[PLST SRV][MMI]srv_plst_plst_item_reorder_get_display hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REORDER_ACTION,"[PLST SRV][MMI]srv_plst_plst_item_reorder_action hdr = %d,index_0= %d, index_d = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REORDER_RESULT,"[PLST SRV][MMI]srv_plst_plst_item_reorder_action_set_result hdr = %d,value = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ITEM_REORDER_END,"[PLST SRV][MMI]srv_plst_plst_item_reorder_end hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ACTIVE_MEDIA_MANUL_PREV,"[PLST SRV][MMI]srv_plst_plst_item_get_active_media_info_prev hdr = %d, id = %d,index = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ACTIVE_MEDIA_MANUL_NEXT,"[PLST SRV][MMI]srv_plst_plst_item_get_active_media_info_next hdr = %d, id = %d,index = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ACTIVE_MEDIA_CURR,"[PLST SRV][MMI]srv_plst_plst_item_get_active_media_info_curr hdr = %d, id = %d,index = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_ACTIVE_MEDIA_AUTO,"[PLST SRV][MMI]srv_plst_plst_item_get_active_media_info_auto hdr = %d, id = %d,index = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_CONFIG_SHUFFLE,"[PLST SRV][MMI]srv_plst_config_shuffle hdr = %d, value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_CONFIG_REPEAT,"[PLST SRV][MMI]srv_plst_config_repeat hdr = %d, value = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_CONFIG_PLST_SEQUEUE,"[PLST SRV][MMI]srv_plst_config_set_plst_order hdr = %d, value = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_GROUP_COUNT,"[PLST SRV][MMI]srv_plst_list_item_get_group_count hdr = %d line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_GET_GROUP_COUNT_RET,"[PLST SRV][MMI]srv_plst_list_item_get_group_count ret= %d, cur_idx = %d, group_count = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_JUMPTO,"[PLST SRV][MMI]srv_plst_list_item_jumpto hdr = %d, jump_s = %s line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_JUMPTO_RET,"[PLST SRV][MMI]srv_plst_list_item_jumpto ret = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_CONFIG_INFO,"[PLST SRV][MMI]srv_plst_config_info hdr = %d, config_type = %d, value = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_CONFIG_INFO_RET,"[PLST SRV][MMI]srv_plst_config_info ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_CHECK_ACTIVE_IN_PLST,"[PLST SRV][MMI]srv_plst_check_active_media_is_in_playlist hdr = %d, type = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_CHECK_ACTIVE_IN_PLST_RET,"[PLST SRV][MMI]srv_plst_check_active_media_is_in_playlist ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_DEL_ACTIVE_FROM_PLST,"[PLST SRV][MMI]srv_plst_active_media_remove_from_playlist hdr = %d, type = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_DEL_ACTIVE_FROM_PLST_RET,"[PLST SRV][MMI]srv_plst_active_media_remove_from_playlist ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_ADD_ACTIVE_TO_PLST,"[PLST SRV][MMI]srv_plst_active_media_add_to_playlist hdr = %d, type = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_LIST_ADD_ACTIVE_TO_PLST_RET,"[PLST SRV][MMI]srv_plst_active_media_add_to_playlist ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_MEDIA_GET_ID_IN_GROUP,"[PLST SRV][MMI]srv_plst_media_get_id_in_group group = %d, sub_index = %d ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_CHECK_PLST_EXIST,"[PLST SRV][MMI]srv_plst_check_playlist_is_exist hdr = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_CHECK_PLST_EXIST_RET,"[PLST SRV][MMI]srv_plst_check_playlist_is_exist ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_CHECK_SUPPORT_SORT_TYPE,"[PLST SRV][MMI]srv_plst_check_sort_type_support hdr = %d, type = %d, line = %d")    
TRC_MSG(MMI_PLS_MMI_CHECK_SUPPORT_SORT_TYPE_RET,"[PLST SRV][MMI]srv_plst_check_sort_type_support ret = %d, line = %d")
TRC_MSG(MMI_PLS_CREATE,"[PLST SRV][MMI]srv_plst_create hdr = %d, number = %d,card_state = %d, line = %d")
TRC_MSG(MMI_PLS_DESTORY,"[PLST SRV][MMI]srv_plst_destroy hdr = %d, in_transaction = %d,enable = %d, line = %d")
TRC_MSG(MMI_PLS_GET_ERR_STRING,"[PLST SRV][MMI]srv_plst_get_error_string error_code = %d, sub_error = %d, line = %d")
TRC_MSG(MMI_PLS_INTERRUPT_MSDC_PLUG_IN,"[PLST SRV][MMI]srv_plst_msdc_plug_in_hdlr  drv_num = %d, card_state = %d, line = %d")
TRC_MSG(MMI_PLS_INTERRUPT_MSDC_PLUG_OUT,"[PLST SRV][MMI]srv_plst_msdc_plug_out_hdlr  drv_num = %d, card_state = %d, line = %d")
TRC_MSG(MMI_PLS_INTERRUPT_USB_PLUG_IN,"[PLST SRV][MMI]srv_plst_usb_plug_in_hdlr")
TRC_MSG(MMI_PLS_INTERRUPT_USB_PLUG_OUT,"[PLST SRV][MMI]srv_plst_usb_plug_out_hdlr")
TRC_MSG(MMI_PLS_INTERRUPT_PREFORMAT,"[PLST SRV][MMI]srv_plst_pre_format_hdlr drv= %d")
TRC_MSG(MMI_PLS_INTERRUPT_AFTFORMAT,"[PLST SRV][MMI]srv_plst_aft_format_hdlr drv= %d")
TRC_MSG(MMI_PLS_INTERRUPT_ENTRY_UNMOUNT,"[PLST SRV][MMI]srv_plst_msdc_entry_unmount")
TRC_MSG(MMI_PLS_INTERRUPT_EXIT_UNMOUNT,"[PLST SRV][MMI]srv_plst_msdc_exit_unmount")
TRC_MSG(MMI_PLS_INTERRUPT_DEFAULT_STORAGE_CHANGE_NITOFY,"[PLST SRV][MMI]srv_plst_notify_default_storage_change")
TRC_MSG(MMI_PLS_INTERRUPT_DEFAULT_STORAGE_CHANGE,"[PLST SRV][MMI]srv_plst_notify_default_storage_change_pre_check")
TRC_MSG(MMI_PLST_LIST_GET_ITEM_ARTWORK_ASYNC,"[PLST SRV][MMI] srv_plst_list_get_item_artwork_async g_srv_plst_query_album_id = [%d] ret = [%d] at line = [%d]")
    
/* PlstSrvpls.c */

TRC_MSG(MMI_PLS_PLS_CHECK_IF_IN_PHONE,"[PLST SRV][PLS]pls_db_util_check_if_in_phone")
TRC_MSG(MMI_PLS_PLS_CHECK_VERSION,"[PLST SRV][PLS]pls_db_util_check_version_is_ok ret = %d, line = %d")
TRC_MSG(MMI_PLS_PLS_UTIL_GET_ID,"[PLST SRV][PLS]pls_db_util_get_id index = %d, cache_num =  %d")
TRC_MSG(MMI_PLS_PLS_CREATE_TBL,"[PLST SRV][PLS]pls_db_create_table cancel = %d, drv =  %d, card_state = %d")
TRC_MSG(MMI_PLS_PLS_CLOSE_LIB,"[PLST SRV][PLS]pls_db_close_lib instance_inited = %d, in_transaction =  %d, db_opened = %d")
TRC_MSG(MMI_PLS_PLS_STOP_OPEN_LIB,"[PLST SRV][PLS]pls_db_stop_open_lib instance_inited = %d, in_transaction =  %d, db_opened = %d")
TRC_MSG(MMI_PLS_PLS_OPEN_LIB,"[PLST SRV][PLS]pls_db_open_lib open_flag = %d, drv =  %d, base_error = %d")
TRC_MSG(MMI_PLS_PLS_DB_REOPEN_DB,"[PLST SRV][PLS]pls_db_reopen_db(), ret = [%d]")
TRC_MSG(MMI_PLS_PLS_GEN_DB_APPEND,"[PLST SRV][PLS]pls_db_lib_update_append_file(), append = [%d] ")
TRC_MSG(MMI_PLS_PLS_GEN_DB_APPEND_ERROR,"[PLST SRV][PLS]pls_db_lib_update_append_file(), ret = [%d], line = [%d]")
TRC_MSG(MMI_PLS_PLS_GEN_DB_INTERNAL,"[PLST SRV][PLS]pls_db_lib_update_gen_internal phase = %d, tyoe = %d ") 
TRC_MSG(MMI_PLS_PLS_GET_SHOW_DATA,"[PLST SRV][PLS]pls_db_get_show_data value1 = %d, value2 = %d , value3= %d, line = %d") 
TRC_MSG(MMI_PLS_PLST_GET_PLAYING_INFO,"[PLST SRV][PLS]pls_db_plst_get_playing_media is_load = %d, get_type = %d , shuffle= %d,repeat= %d")
TRC_MSG(MMI_PLS_PLS_CURR_ROUND,"[PERF][GEN DB] curr_round, items[%d], time[%u]")
TRC_MSG(MMI_PLS_PLS_TOTAL,"[PERF][GEN DB] total[%d], line[%d]")
TRC_MSG(MMI_PLS_PLS_CURR,"[PERF][GEN DB][FIRSTN] curr[%u], total[%u]")
TRC_MSG(MMI_PLS_PLS_COMIT_TOTAL,"[PERF][GEN DB] comit_total[%d], line[%d]")
TRC_MSG(MMI_PLS_PLS_FIND_META_SQL_TOTAL,"[PERF][GEN DB][ITEM] find/meta/sql/total [%u]/[%u]/[%u]/[%u]")
TRC_MSG(MMI_PLS_PLS_DB_UTIL_CHECK_SPACE_IS_ENOUGH,"[PLST SRV][MMI] pls_db_util_check_space_is_enough: disk_free_space = [%d] req_size = [%d], at line = [%d]")
TRC_MSG(MMI_PLS_PLS_UTIL_RESIZE_ARTWORK_BY_PATH,"[PLST SRV][PLS] pls_db_util_resize_artwork_by_path result = %d, resized_size = %d")
TRC_MSG(MMI_PLS_PLS_UTIL_DRAW_RESIZED_MEM,"[PLST SRV][PLS] gdi_image_draw_resized_mem result = %d, mime_type = %d, data_size = %d, resized_w = %d, resized_h = %d")
TRC_MSG(MMI_PLS_PLS_UTIL_ENCODE_LAYER_TO_JPEG,"[PLST SRV][PLS] gdi_image_encode_layer_to_jpeg_in_memory result = %d, resized_size = %d")
TRC_MSG(MMI_PLS_PLS_DB_OPEN_LIB,"[PLST SRV][PLS] pls_db_open_lib SRV_PLST_OPEN_AFTER_MEDIA_CHANGE open error")
TRC_MSG(MMI_PLS_PLS_SEARCH_RSP_HDLER,"[PLST SRV][MMI] srv_plst_pls_search_rsp_hdler ret = %d, count = %d")
TRC_MSG(MMI_PLS_PLS_CLEAR_VIEW_STACK,"[PLST SRV][MMI] clear_view_stack: index = [%d] , view type = [%d], at line = [%d]")
TRC_MSG(MMI_PLS_PLST_MEDIA_GET_ID_IN_GROUP,"[PLST SRV][MMI]srv_plst_media_get_id_in_group hdr = %d, group = %d, sub_index = %d")
TRC_MSG(MMI_PLS_PLST_LIST_GET_ARTWORK_BY_MEDIA_ID,"[PLST SRV][MMI] srv_plst_list_get_artwork_by_media_id hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_PLST_CLEAR_CURR_VIEW_CACHE,"[PLST SRV][MMI] srv_plst_plst_clear_curr_view_cache hdr = %d,line = %d")
TRC_MSG(MMI_PLS_PLST_CLEAR_ACTIVE_LIST,"[PLST SRV][MMI] srv_plst_plst_clear_active_list hdr = %d, is_load = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_GET_DATA_RSP,"[PLST SRV][MMI]srv_plst_pls_get_data_rsp_hdler ret = %d")
TRC_MSG(MMI_PLS_MMI_ADD_ITEM_TO_PLST_RSP,"[PLST SRV][MMI]srv_plst_pls_add_item_plst_rsp_hdler ret = %d")
TRC_MSG(MMI_PLS_MMI_OPEN_LIB_RSP,"[PLST SRV][MMI]srv_plst_pls_open_lib_rsp_hdler ret = %d")
TRC_MSG(MMI_PLS_MMI_UPATE_LIB_RSP,"[PLST SRV][MMI]srv_plst_pls_update_lib_rsp_hdler ret = %d")
TRC_MSG(MMI_PLS_MMI_DELETE_ITEM_RSP,"[PLST SRV][MMI]srv_plst_pls_delete_item_plst_rsp_hdler ret = %d")
TRC_MSG(MMI_PLS_MMI_DELETE_ACTIVE_ITEM_RSP,"[PLST SRV][MMI]srv_plst_pls_delete_active_item_plst_rsp_hdler ret = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_GET_CONTX, "[PLST SRV][MMI] srv_plst_list_get_context_by_id hdr = %d in_type= %d, in_id = %d, out_type = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_GET_CONTX_RET, "[PLST SRV][MMI] srv_plst_list_get_context_by_id ret = %d line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_UPDATE_ARTWORK,"[PLST SRV][MMI]srv_plst_list_update_item_artwork hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_GET_UPDATE_ARTWORK_ASYC,"[PLST SRV][MMI]srv_plst_list_update_item_artwork_async hdr = %d, index = %d, line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_STOP_UPDATE_ARTWORK,"[PLST SRV][MMI]srv_plst_list_stop_update_item_artwork hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_PREFIX_SEARCH_BEGIN,"[PLST SRV][MMI]srv_plst_list_prefix_search_begin hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_PREFIX_DO_SEARCH,"[PLST SRV][MMI]srv_plst_list_prefix_search_do_search hdr = %d,line = %d")
TRC_MSG(MMI_PLS_MMI_LIST_PREFIX_DO_SEARCH_RET,"[PLST SRV][MMI]srv_plst_list_prefix_search_do_search_ret ret = %d,count = %d")
TRC_MSG(MMI_PLS_MMI_LIST_PREFIX_SEARCH_END,"[PLST SRV][MMI]srv_plst_list_prefix_search_end hdr = %d,line = %d")
TRC_MSG(MMI_PLS_ENCODE_LAYER_TO_JPEG_IN_MEMORY,"[PLST SRV][MMI] gdi_image_encode_layer_to_jpeg_in_memory  ret = [%d] at line = [%d]")
TRC_MSG(MMI_PLS_DB_GET_SHOW_DATA,"[PLST SRV][MMI] pls_db_get_show_data SRV_PLST_GET_ARTWORK ASYNC id = [%d] at line = [%d]")

/* PlstSrvsql.c */
TRC_MSG(MMI_PLS_SQL_INIT_INSTANCE,"[PLST SRV][PLS] pls_sql_init_instance_int(), intstant_p=[%d], task_id=[%d], size=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_DEINIT_INSTANCE,"[PLST SRV][PLS] pls_sql_deinit_instance(), intstant_p=[%d], task_id=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_EXIT_INSTANCE,"[PLST SRV][PLS] pls_sql_exit_instance(), intstant_p=[%d], task_id=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_STMT_CACHE_PREPARE,"[PLST SRV] pls_sql_stmt_cache_prepare(), id=[%d]")
TRC_MSG(MMI_PLS_SQL_STMT_FINALIZE_ALL,"[PLST SRV] pls_sql_stmt_cache_finalize_all(), cache_count=[%d]")
TRC_MSG(MMI_PLS_SQL_SQLITE_PREPARE,"[PLST SRV][PLS] pls_sql_sqlite_prepare(), ret=[%d]")
TRC_MSG(MMI_PLS_SQL_SQLITE_STEP,"[PLST SRV][PLS] pls_sql_sqlite_step(), ret=[%d]")
TRC_MSG(MMI_PLS_SQL_FINALIZE,"[PLST SRV][MMI] pls_sql_finalize_int(), ret=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_CLEAR_BINDING,"[PLST SRV][MMI] pls_sql_clear_binding_int(), ret=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_OPEN_DB,"[PLST SRV][MMI] pls_sql_open_db(), ret=[%d]")
TRC_MSG(MMI_PLS_SQL_CLOSE_DB,"[PLST SRV][MMI]pls_sql_close_db(), ret=[%d]")
TRC_MSG(MMI_PLS_SQL_ROLLBACK_TRANSACTION,"[PLST SRV][PLS] pls_sql_rollback_transaction_int(), ret=[%d], line=[%d]")
TRC_MSG(MMI_PLS_SQL_COMMIT_TRANSACTION,"[PLST SRV][PLS] pls_sql_commit_transaction(), ret=[%d]")
TRC_MSG(MMI_PLS_SQL_GET_ARTWORK_PARSER_PATH_BY_ID_NOT_FOUND,"[PLST SRV][MMI] pls_sql_get_artwork_parser_path_by_id: not found, line = [%d]")
TRC_MSG(MMI_PLS_SQL_ADD_MEDIA_TO_PLST,"[PLST SRV][MMI] pls_sql_add_media_to_plst: error ret = [%d] , media_id = [%d], id = [%d], idx = [%d], line = [%d]")
TRC_MSG(MMI_PLS_SQL_UTIL_GET_FS_ERR,"[PLST SRV][MMI] pls_sql_util_get_fs_err ret = %d")
TRC_MSG(MMI_PLS_SQL_APPEND_FILE_TO_DB_IMAGE,"[PLST SRV][PLS]pls_sql_append_file_to_db(), insert artwork ret = [%d], line = [%d]")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_ACTIVE_LIST_COUNT,"[PLST SRV][PLS]pls_sql_get_view_count_for_active_list plst_id = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_TYPE_ONE,"[PLST SRV][PLS]pls_sql_get_view_count_one_level view_type0 = %d, card_state = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_TYPE_TWO,"[PLST SRV][PLS]pls_sql_get_view_count_two_level view_type0 = %d, view_type1 = %d,card_state = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_TYPE_THREE,"[PLST SRV][PLS]pls_sql_get_view_count_three_level view_type0 = %d, view_type1 = %d, type2 = %d,card_state = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_TYPE_FOUR,"[PLST SRV][PLS]pls_sql_get_view_count_four_level type0 = %d,type1 = %d,type2 = %d,type3 = %d,card_state = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_TYPE_FIVE,"[PLST SRV][PLS]pls_sql_get_view_count_five_active_list")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_COUNT,"[PLST SRV][PLS]pls_sql_get_view_count, current_index = %d, last_type = %d, index = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_FILL_CACHE_PLAYING_LIST,"[PLST SRV][PLS]pls_sql_get_item_to_file_cache_for_playing_list_plst, is_default = %d, index = %d, pick_index = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_FILL_CACHE_PLAYING_VIDEO,"[PLST SRV][PLS]pls_sql_get_item_to_file_cache_for_playing_list_video, is_default = %d, index = %d, pick_index = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_FILL_CACHE_PLAYING_AUDIO,"[PLST SRV][PLS]pls_sql_get_item_to_file_cache_for_playing_list_audio, is_default = %d, index = %d, pick_index = %d")
TRC_MSG(MMI_PLS_SQL_GET_VIEW_FILL_CACHE,"[PLST SRV][PLS]pls_sql_get_item_to_fill_cache, current_index = %d, last_type = %d, card_state = %d")
TRC_MSG(MMI_PLS_SQL_DELETE_MEDIA_FROM_LIST,"[PLST SRV][PLS]pls_sql_delete_media_from_list, index = %d,current_index = %d, last_type = %d")
TRC_MSG(MMI_PLS_SQL_GET_ITEM_TO_FILE_CACHE_FOR_PLAYING_LIST_AUDIO,"[PLST SRV][MMI] pls_sql_get_item_to_file_cache_for_playing_list_audio  error happened before at line = [%d]")
TRC_MSG(MMI_PLS_SQL_GET_PLST_INDEX_BY_NAME,"[PLST SRV][MMI] pls_sql_get_plst_index_by_name  index = [%d]")
TRC_MSG(MMI_PLS_SQL_GET_ACTIVE_INDEX_BY_ID,"[PLST SRV][MMI] pls_sql_get_active_index_by_id  error happened at line = [%d]")
TRC_MSG(MMI_PLS_SQL_UPDATE_ACTIVE_INFO_AFTER_CHANGE_INDEX,"[PLS][MMI]pls_sql_udpate_active_info_after_change_index is_stored = [%d] at line = [%d]")

