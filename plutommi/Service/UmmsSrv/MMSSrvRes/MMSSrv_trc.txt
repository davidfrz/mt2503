[APP NAME] = MMS SRV
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_INET_APP

#starttrace
/* BGSR */
TRC_MSG(SRV_MMS_BGSR_EXTRACT_Q, "[BGSR] srv_mms_bgsr_extract_q()")    
TRC_MSG(SRV_MMS_BGSR_GET_Q, "[BGSR] srv_mms_bgsr_get_q()")    
TRC_MSG(SRV_MMS_BGSR_FIND_Q, "[BGSR] srv_mms_bgsr_find_q()")    
TRC_MSG(SRV_MMS_BGSR_ENQUEUE, "[BGSR] srv_mms_bgsr_enqueue()")    
TRC_MSG(SRV_MMS_BGSR_DELETE_Q, "[BGSR] srv_mms_bgsr_delete_queue()")    

TRC_MSG(SRV_MMS_BGSR_TIMEOUT_PROCEDURE, "[BGSR] srv_mms_bgsr_timeout_procedure()")
TRC_MSG(SRV_MMS_BGSR_TIMEOUT_PROCEDURE_FINISH, "[BGSR] srv_mms_bgsr_timeout_procedure() FINISH")
TRC_MSG(SRV_MMS_BGSR_TRANSLATE_MSG_ID_TO_NVRAM_IND, "[BGSR] srv_mms_bgsr_translate_msg_id_to_nvram_ind(), msg_id = %d")
TRC_MSG(SRV_MMS_BGSR_TRANSLATE_RESULT, "[BGSR] srv_mms_bgsr_translate_result(), mma result = %dmma_result_enum")
TRC_MSG(SRV_MMS_BGSR_TRANSLATE_RESULT_TO_STRID, "[BGSR] srv_mms_bgsr_translate_result_to_strid(), bgsr_result = %dsrv_mms_bgsr_result_enum")
TRC_MSG(SRV_MMS_BGSR_ACTION_FSM, "[BGSR] srv_mms_bgsr_action_fsm(), cur_action=%dsrv_mms_bgsr_action_type_enum")
TRC_MSG(SRV_MMS_BGSR_ACTION_FSM_FINISH, "[BGSR] srv_mms_bgsr_action_fsm() FINISH, cur_action=%dsrv_mms_bgsr_action_type_enum")
TRC_MSG(SRV_MMS_BGSR_SEND_REQ, "[BGSR] srv_mms_bgsr_send_req(), msg_id=%d, sim_id =%d, storage=%d")
TRC_MSG(SRV_MMS_BGSR_CANCEL_SEND_REQ, "[BGSR] srv_mms_bgsr_cancel_send_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_REQ, "[BGSR] srv_mms_bgsr_download_req(), msg_id=%d, sim_id =%d, storage=%d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_REQ_NO_PROGRESS, "[BGSR] srv_mms_bgsr_download_req_no_progressing(), msg_id=%d, sim_id =%d, storage=%d")
TRC_MSG(SRV_MMS_BGSR_CANCEL_DOWNLOAD_REQ, "[BGSR] srv_mms_bgsr_cancel_download_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_CHANGE_MSG_NOTIFY, "[BGSR] srv_mms_bgsr_change_msg_notify(), cur_action=%dsrv_mms_bgsr_msg_operation_notify_enum")
TRC_MSG(SRV_MMS_BGSR_MULTI_CHANGE_MSG_NOTIFY, "[BGSR] srv_mms_bgsr_multi_change_msg_notify(), cur_action=%dsrv_mms_bgsr_msg_operation_notify_enum, count = %d, folder = %d")
TRC_MSG(SRV_MMS_BGSR_MSG_FOUND_IN_Q, "[BGSR] the message is found in the queue, msg_id = %d")
TRC_MSG(SRV_MMS_BGSR_SHOW_MMS_STATUS_ICON, "[BGSR] srv_mms_bgsr_show_mms_status_icon(), status=%dsrv_mms_bgsr_indicator_type_enum, op_type=%d")
TRC_MSG(SRV_MMS_BGSR_GET_MSG_INFO, "[BGSR] srv_mms_bgsr_get_msg_info(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_SYNC, "[BGSR] srv_mms_bgsr_sync()")
TRC_MSG(SRV_MMS_BGSR_SEND_MMS_REQ, "[BGSR] srv_mms_bgsr_send_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_SEND_MMS_IND_HDLR, "[BGSR] srv_mms_bgsr_send_mms_ind_hdlr(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_SEND_MMS_RSP, "[BGSR] srv_mms_bgsr_send_mms_rsp(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_MMS_REQ, "[BGSR] srv_mms_bgsr_download_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_MMS_IND_HDLR, "[BGSR] srv_mms_bgsr_download_mms_ind_hdlr(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_MMS_RSP, "[BGSR] srv_mms_bgsr_download_mms_rsp(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_GET_MEM_STATUS_REQ, "[BGSR] srv_mms_bgsr_get_mem_status_req()")

TRC_MSG(SRV_MMS_BGSR_ABORT_SEND_MMS_REQ, "[BGSR] srv_mms_bgsr_abort_send_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_ABORT_DOWNLOAD_MMS_REQ, "[BGSR] srv_mms_bgsr_abort_download_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_SAVE_MMS_REQ, "[BGSR] srv_mms_bgsr_save_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_DELETE_MMS_REQ, "[BGSR] srv_mms_bgsr_delete_mms_req(), msg_id=%d")
TRC_MSG(SRV_MMS_BGSR_USB_START_CB, "[BGSR] srv_mms_bgsr_usb_start_cb()")
TRC_MSG(SRV_MMS_BGSR_INTERRUPT_END_CB, "[BGSR] srv_mms_bgsr_interrupt_end_cb(), interrupt=%dsrv_mms_bgsr_interrupt_reason_enum")
TRC_MSG(SRV_MMS_BGSR_FREE_SIZE, "[BGSR] srv_mms_bgsr_free_size =%d")

TRC_MSG(SRV_MMS_BGSR_MSG_NOT_FOUND, "[BGSR] the message is not found")
TRC_MSG(SRV_MMS_BGSR_MEMORY_NOT_ALLOCATED, "[BGSR] the memory is not allocated")
TRC_MSG(SRV_MMS_BGSR_UNKNOWN_OPERATION, "[BGSR] the unknown operation")
TRC_MSG(SRV_MMS_BGSR_NO_POPUP, "[BGSR] popup prohibited")
TRC_MSG(SRV_MMS_BGSR_NO_SOUND_POPUP, "[BGSR] popup without sound")
TRC_MSG(SRV_MMS_BGSR_NORMAL_POPUP, "[BGSR] popup normal")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_ID, "[BGSR] current info, send_id = %d, dl_id=%d")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_SEND_Q, "[BGSR] send q :")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_SEND_FAIL_Q, "[BGSR] send fail q :")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_DL_Q, "[BGSR] download q :")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_DL_FAIL_Q, "[BGSR] download fail q :")
TRC_MSG(SRV_MMS_BGSR_ECHO_CURRENT_INFO_Q, "[BGSR] id = %d, ntt = %d, ex_time = %d, status = %dsrv_mms_bgsr_msg_status_enum, quota = %d, folder = %d, send_setting = %d, result = %dsrv_mms_bgsr_result_enum, fail_flag = %d, size = %d, is_rr = %d, op = %dsrv_mms_bgsr_msg_operation_notify_enum")   
TRC_MSG(SRV_MMS_BGSR_NOT_SYNC, "[BGSR] not sync yet")
TRC_MSG(SRV_MMS_BGSR_NOT_READY, "[BGSR] not ready yet, fail_reason=%d")
TRC_MSG(SRV_MMS_BGSR_MSG_NOT_READY, "[BGSR] MSG not ready , fail_reason=%d, Id=%d")
TRC_MSG(SRV_MMS_BGSR_ALREADY_UPDATE_STATUS, "[BGSR] Update Status , msg_id=%d, Status=%dsrv_mms_bgsr_msg_status_enum, ntt=%d, quota=%d")
TRC_MSG(SRV_MMS_BGSR_SEND_PREVIOUS_MSG, "[BGSR] send a previous sent msg")
TRC_MSG(SRV_MMS_BGSR_SEND_NEW_MSG, "[BGSR] send a newly created msg")
TRC_MSG(SRV_MMS_BGSR_SEND_PREVIOUS_FAIL_MSG, "[BGSR] send a previous sent fail msg")
TRC_MSG(SRV_MMS_BGSR_SEND_RR, "[BGSR] send a read report")
TRC_MSG(SRV_MMS_BGSR_ALREADY_A_SENDING_MSG, "[BGSR] there is already a sending msg, id= %d")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_PREVIOUS_MSG, "[BGSR] download a previous downloaded msg")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_PREVIOUS_FAIL_MSG, "[BGSR] download a previous downloaded fail msg")
TRC_MSG(SRV_MMS_BGSR_DOWNLOAD_NEW_MSG, "[BGSR] download a newly created msg")
TRC_MSG(SRV_MMS_BGSR_ALREADY_A_DOWNLOAD_MSG, "[BGSR] there is already a downloading msg, id= %d")
TRC_MSG(SRV_MMS_BGSR_GET_FAIL_MSG_COUNT, "[BGSR] srv_mms_bgsr_get_fail_msg_count()")
TRC_MSG(SRV_MMS_BGSR_THE_MSG_IS_TRANSMITTING, "[BGSR] the message is transmitting, id= %d")
TRC_MSG(SRV_MMS_BGSR_DECREASE_NTT, "[BGSR] decrease the ntt of msg in fail q")
TRC_MSG(SRV_MMS_BGSR_MOVE_MSG_FROM_FAIL_Q, "[BGSR] move msg from fail q to send/recv q")
TRC_MSG(SRV_MMS_BGSR_NVRAM_IDX_EXCEED, "[BGSR] NVRAM index exceed the max value")
TRC_MSG(SRV_MMS_BGSR_OK, "[BGSR] the result is ok")
TRC_MSG(SRV_MMS_BGSR_FAIL, "[BGSR] the result is fail")
TRC_MSG(SRV_MMS_BGSR_RETRY, "[BGSR] the message will be retry again")
TRC_MSG(SRV_MMS_BGSR_NOT_RETRY, "[BGSR] the message will NOT be retry again")
TRC_MSG(SRV_MMS_BGSR_TRY_TO_SEND, "[BGSR] try to send a message")
TRC_MSG(SRV_MMS_BGSR_TRY_TO_DOWNLOAD, "[BGSR] try to download a message")
TRC_MSG(SRV_MMS_BGSR_CLEAR_SEND_ID, "[BGSR] clear the sending msg id")
TRC_MSG(SRV_MMS_BGSR_CLEAR_DOWNLOAD_ID, "[BGSR] clear the downloading msg id")

TRC_MSG(SRV_MMS_BGSR_ECHO_FALLBACK_INFO, "[BGSR] [FB] fallback_info: send_id = %d, dl_id = %d, acct_id = %d, immd_retr = %d, mask1 = %d, mask2=%d")
TRC_MSG(SRV_MMS_BGSR_NEED_FALLBACK, "[BGSR] [FB] fallback_required: msg_id = %d")
TRC_MSG(SRV_MMS_BGSR_SUSPEND_MMS_SERVICE_REQ, "[BGSR] [FB] suspend_mms_service_req")
TRC_MSG(SRV_MMS_BGSR_SUSPEND_MMS_SERVICE_RSP, "[BGSR] [FB] suspend_mms_service_rsp")
TRC_MSG(SRV_MMS_BGSR_RESUME_MMS_SERVICE_REQ, "[BGSR] [FB] resume_mms_service_req")
TRC_MSG(SRV_MMS_BGSR_RESUME_MMS_SERVICE_RSP, "[BGSR] [FB] resume_mms_service_rsp")
TRC_MSG(SRV_MMS_BGSR_START_IMM_RETR_IND, "[BGSR] [FB] start_immd_retr_ind: msg_id = %d, sim_id = %d")
TRC_MSG(SRV_MMS_BGSR_STOP_IMM_RETR_IND, "[BGSR] [FB] stop_immd_retr_ind: msg_id = %d, sim_id = %d, result = %d, error = %d")
TRC_MSG(SRV_MMS_BGSR_BEARER_FALLBACK_PROC, "[BGSR] [FB] bearer_fallback_proc: acct_id = %d, event Type = %dsrv_cbm_bearer_event_type_enum")
TRC_MSG(SRV_MMS_BGSR_UPDATE_PROFILE, "[BGSR] [FB] update profile for Sim_id = %d")
TRC_MSG(SRV_MMS_BGSR_SEND_SELECT_RSP_HANDLER_SET_PROFILE, "[BGSR] [FB] send_select_rsp_handle profile Sim_id = %d")
TRC_MSG(SRV_MMS_BGSR_BEARER_FALLBACK_CUI_PROC, "[BGSR] [FB] bearer_fallback_cui_proc: event id = %dcui_cbm_event_enum")
TRC_MSG(SRV_MMS_BGSR_BEARER_FALLBACK_NOTIFY_MASK_INFO, "[BGSR] [FB] fallback_mask info: send_id = %d, dl_id = %d, fallback_mask = %d, immd_retr = %d")
TRC_MSG(SRV_MMS_BGSR_SEND_SELECT_RSP_HANDLER_NEED_FALLBACK, "[BGSR] [FB] send_select_rsp_handler call cui, sim_id=%d")
TRC_MSG(SRV_MMS_BGSR_FALLBACK_NOT_REQUIRED, "[BGSR] [FB] fallback_not_required")
TRC_MSG(SRV_MMS_BGSR_BEARER_STATUS_NOTIFY, "[BGSR] [FB] bearer_status_notify: status = %d, acct_id = %d, fallback_mask = %d")
TRC_MSG(SRV_MMS_BGSR_SET_IMM_DOWNLOAD_ID, "[BGSR] [FB] set_imm_dl_id")
TRC_MSG(SRV_MMS_BGSR_DELETE_FALLBACK_SCREEN, "[BGSR] [FB] delete fallback screen, id=%d")
TRC_MSG(SRV_MMS_BGSR_FALLBACK_MASK, "[BGSR] [FB] Fallback_mask, sim_id=%d, mask=%d")
TRC_MSG(SRV_MMS_BGSR_SIM_STATUS_INFO, "[BGSR] sim_status_info, sim_id=%d, sim_inserted=%d, setting_mode=%d, sim1_can_read=%d, sim2_can_read=%d, sim1_type=%d, sim2_type=%d")
TRC_MSG(SRV_MMS_BGSR_GET_SENDING_SIM_ID, "[BGSR] get_sending_sim_id, id=%d")
TRC_MSG(SRV_MMS_BGSR_GET_DOWNLOADING_SIM_ID, "[BGSR] get_downloading_sim_id, id=%d")
TRC_MSG(SRV_MMS_BGSR_SET_SIM_ID_REQ, "[BGSR] srv_mms_bgsr_set_sim_id_req(), msg_id=%d, sim_id=%d")
TRC_MSG(SRV_MMS_BGSR_SET_SIM_ID_RSP, "[BGSR] srv_mms_bgsr_set_sim_id_rsp(), result=%d")
TRC_MSG(SRV_MMS_BGSR_SENDING_JAVA_MSG, "[BGSR] srv_mms_bgsr_send_java_msg_req, msg_id = %d")
TRC_MSG(SRV_MMS_BGSR_CANCELLING_JAVA_MSG, "[BGSR] srv_mms_bgsr_cancel_send_java_msg_req, msg_id = %d")
TRC_MSG(SRV_MMS_BGSR_SIM_CTRL_AVAILABILITY_CHANGED, "[BGSR] EVT_ID_SRV_SIM_CTRL_AVAILABILITY_CHANGED: sim_id = %d, is_sim_valid = %d")
TRC_MSG(SRV_MMS_BGSR_MODE_SWITCH_FINISH_NOTIFY, "[BGSR] EVT_ID_SRV_MODE_SWITCH_FINISH_NOTIFY: mode = %d, is_sim_valid = %d")

/* JSR */
TRC_MSG(MMI_UMMS_JSR_MEMORY_APP_SUCCESS_CALLBACK, "*[MMSJSRSndRcv.c] JSR success_callback called*\n")
TRC_MSG(MMI_UMMS_JSR_MEMORY_APP_STOP_CALLBACK, "*[MMSJSRSndRcv.c] JSR stop_callback called*\n")
/*AT & JSR*/
TRC_MSG(MMI_JSR_SEND_CREATE_REQ,"*[MMSJSRSndRcv.c] mmi_jsr_create_mms_req read_size=%d buf_size=%d*\n")
TRC_MSG(MMI_JSR_SEND_CREATE_RSP,"*[MMSJSRSndRcv.c] mmi_jsr_create_for_send_mms_rsp read_size=%d buf_size=%d*\n")
TRC_MSG(MMI_JSR_GEN_PART_WRITE_HANDLE,"[MMSJSRSndRcv.c](%d): UMMS JSR File Operation Error \n")
TRC_MSG(MMI_JSR_GEN_PART_READ_HANDLE,"[MMSJSRSndRcv.c](%d): UMMS JSR File Operation Error \n")
TRC_MSG(MMI_JSR_GEN_PART_FS_READ,"[MMSJSRSndRcv.c](%d): UMMS JSR File Operation Error \n")
TRC_MSG(MMI_JSR_GEN_PART_FS_WRITE,"[MMSJSRSndRcv.c](%d): UMMS JSR File Operation Error \n")
TRC_MSG(MMI_JSR_WRITE_FOLDER_INFO_FILE,"[MMSJSR205.c](%d): JSR module write folder status to info.db file. \n")
TRC_MSG(MMI_JSR_FOLDER_REQ_HDLR,"[MMSJSR205.c](%d): JSR module can't get memory for wap_mmc_read_folder_status_output_req_struct \n")
TRC_MSG(MMI_JSR_UPLOAD_REQ_HDLR,"[MMSJSR205.c](%d): JSR module can't get memory for wap_mmc_upload_msg_output_req_struct \n")
TRC_MSG(MMI_JSR_DELETE_REQ_HDLR,"[MMSJSR205.c](%d): JSR module can't get memory for wap_mmc_delete_msg_output_req_struct \n")
TRC_MSG(MMI_JSR_INIT_JSR_FOLDER,"*[MMSJSR205.c](%d) mmi_umms_init_jsr_folder Create DIR FAIL! *\n")
TRC_MSG(MMI_JSR_INSERT_MESSAGE_INFO,"[MMSJSR205.c] mmi_jsr_insert_msg_info_to_list msgid = %d, ischecked = %d")
TRC_MSG(MMI_JSR_CHECK_APPID_MSGS,"[MMSJSR205.c] mmi_jsr_check_appid_msgs msg_list->msgId = %d ,msg_list->is_checked = %d,is_new = %d")
TRC_MSG(MMI_JSR_WRITE_OBJECT_LIST,"[MMSJSR205.c] mmi_jsr_write_object_list_to_file msg_list->msgId = %d,msg_list->is_checked = %d")
TRC_MSG(MMI_JSR_FS_OPEN_ERROR,"[MMSJSR205.c](%d): mmi_jsr_file_open_error_code:%d \n")
TRC_MSG(MMI_JSR_FS_WRITE_ERROR,"[MMSJSR205.c](%d): mmi_jsr_file_write_error_code:%d \n")
TRC_MSG(MMI_JSR_ADD_NEW_JAVA_MMS_ENTRY,"[MMSJSR205.c](%d) add the entry of a new java mms\n")
TRC_MSG(MMI_JSR_CFG_APPID_JAVA_MMS,"[MMSJSR205.c](%d) Configured java app_id, send new mms ind\n")
TRC_MSG(MMI_JSR_TRANSLATE_BGSR_ERROR,"[MMSJSR205.c]: mmi_jsr_translate_bgsr_to_mmc_result:%d \n")

/* Viewer SRV */
TRC_MSG(MMI_TRC_MMS_DTMGR_CRITICAL_ERROR, "[UMMS ERROR: DTMGR] Line: %d ")
TRC_MSG(MMI_SRV_VIEWER_FUNC_XML_START_HDLR_AUDIO, "[mmsmsgparsesrv] image.begin > image.end ")
TRC_MSG(MMI_SRV_VIEWER_FUNC_XML_START_HDLR_TEXT, "[mmsmsgparsesrv] text.begin > text.end  ")
TRC_MSG(MMI_SRV_VIEWER_READ_FILE, "[mmsmsgparsesrv] Read Length(bytes) %d ")
TRC_MSG(MMI_SRV_VIEWER_CONVERTED_TO_UCS2_LEN, "[mmsmsgparsesrv] Converted Length(chars) %d ")
TRC_MSG(MMI_SRV_VIEWER_DECODE_ERR,"[mmsmsgparsesrv] text not decoded")
TRC_MSG(MMI_SRV_VIEWER_POSTCRD_EXIT, "[mmsmsgparsesrv] exit from postcard")
TRC_MSG(MMI_SRV_VIEWER_BEST_PAGE, "*[mmsmsgparsesrv.c] srv_mms_viewer_best_page_duration: %d %d %d*\n")
TRC_MSG(MMI_SRV_VIEWER_VIEWER_DEINIT, "*[mmsmsgparsesrv.c] srv_mms_deinit_viewer*\n")
TRC_MSG(MMI_SRV_VIEWER_DELETE_SCR_CB, "*[mmsmsgparsesrv.c] srv_mms_delete_viewer_services *\n")
TRC_MSG(MMI_SRV_VIEWER_PARENT_FILE_ERROR, "*[mmsmsgparsesrv.c] Can Not Open Parent File Handle  *\n")
TRC_MSG(MMI_SRV_VIEWER_VF_FILE_ERROR, "*[mmsmsgparsesrv.c] Can Not Create VF File  *\n")
TRC_MSG(MMI_SRV_VIEWER_SLIDE_HAS_LARGE_TEXT, "*[mmsmsgparsesrv.c] SLIDE_HAS_LARGE_TEXT *\n")
TRC_MSG(MMI_SRV_VIEWER_PARSE_OUT_OF_MEM, "*[mmsmsgparsesrv.c]SRV_MMS_VIEWER_OUT_OF_MEM *\n")
TRC_MSG(MMI_SRV_VIEWER_NO_OBJ, "*[mmsmsgparsesrv.c] No such object! *\n")
TRC_MSG(MMI_SRV_VIEWER_LOAD_UCS2_NO_PARENT_HANDLE, "*[mmsmsgparsesrv.c] mmi_mv_load_ucs2_txt_to_buffer: Can't get parent file handle *\n")
TRC_MSG(MMI_SRV_VIEWER_LOAD_UCS2_NO_VF, "*[mmsmsgparsesrv.c] srv_mms_viewer_load_ucs2_txt_to_buffer: Can't create VF *\n")
TRC_MSG(MMI_SRV_VIEWER_TXT_FILE_ERR, "*[mmsmsgparsesrv.c] srv_mms_viewer_load_ucs2_txt_to_buffer: Can't open txt file *\n")
TRC_MSG(MMI_SRV_VIEWER_IMAGE_RO_EXPIRED, "*[mmsmsgparsesrv.c] srv_mms_image_expired_callback: Expired *\n")
TRC_MSG(MMI_SRV_VIEWER_START_CONSUME, "*[mmsmsgparsesrv.c] srv_mms_start_consume_rights: obj_id %d, rights %d *\n")
TRC_MSG(MMI_SRV_VIEWER_STOP_CONSUME, "*[mmsmsgparsesrv.c] srv_mms_stop_consume_rights: obj_id %d*\n")
TRC_MSG(MMI_SRV_VIEWER_CHECK_RO, "*[mmsmsgparsesrv.c] srv_mms_check_rights_by_id: obj_id %d, rights %d*\n")
TRC_MSG(MMI_SRV_VIEWER_PROCESS_DRM_FILE, "*[mmsmsgparsesrv.c] srv_mms_process_drm_files: id: %d *\n")
TRC_MSG(MMI_SRV_VIEWER_PARSE_DRM_FL_CD, "*[mmsmsgparsesrv.c] srv_mms_drm_parse_cb FL_CD *\n")
TRC_MSG(MMI_SRV_VIEWER_PROCESS_DRM_FL_CD, "*[mmsmsgparsesrv.c] srv_mms_process_single_drm_file FL_CD *\n")
TRC_MSG(MMI_SRV_VIEWER_PROCESS_DRM_SD, "*[mmsmsgparsesrv.c]srv_mms_process_single_drm_file SD *\n")
TRC_MSG(MMI_SRV_VIEWER_PROCESS_SINGLE_DRM_FL_CD, "*[mmsmsgparsesrv.c] srv_mms_process_drm_files FL_CD *\n")
TRC_MSG(MMI_SRV_VIEWER_UPDATE_DRM_RIGHTS, "*[mmsmsgparsesrv.c] srv_mms_update_rights_by_id: drm_type %d, Processed %d *\n")
TRC_MSG(MMI_SRV_VIEWER_UPDATE_RIGHTS_FROM_CID, "*[mmsmsgparsesrv.c] srv_mms_update_rights_from_cid: permission %d, rights %d *\n")
TRC_MSG(MMI_SRV_VIEWER_UPDATE_RIGHTS_FROM_FILE, "*[mmsmsgparsesrv.c] srv_mms_update_rights_from_file: permission %d, rights %d *\n")
TRC_MSG(MMI_SRV_VIEWER_UPDATE_RIGHTS_FILE_OPEN_ERROR, "*[mmsmsgparsesrv.c] srv_mms_update_rights_from_file DRM_file_open_error *\n")
TRC_MSG(MMI_SRV_VIEWER_VALIDATE_PERMISSION_FALSE, "*[mmsmsgparsesrv.c] srv_mms_update_rights_from_file DRM_validate_false *\n")

/* ------------------------- MMS USE DETAIL SRV-------------------------- */
TRC_MSG(MMI_SRV_VIEWER_ENTER_NUMBER_SEARCH, "[MMSUseDetailSrv] number search starts")
TRC_MSG(MMI_SRV_VIEWER_ENTER_URL_SEARCH, "[MMSUseDetailSrv] url search starts")
TRC_MSG(MMI_SRV_VIEWER_ENTER_EMAIL_SEARCH, "[MMSUseDetailSrv] email search starts")
TRC_MSG(MMI_SRV_VIEWER_EXIT_NUMBER_SEARCH_BLOCK, "[MMSUseDetailSrv] exit number blocked")
TRC_MSG(MMI_SRV_VIEWER_EXIT_EMAIL_SEARCH_BLOCK, "[MMSUseDetailSrv] exit email blocked")
TRC_MSG(MMI_SRV_VIEWER_EXIT_URL_SEARCH_BLOCK, "[MMSUseDetailSrv] exit url blocked")
TRC_MSG(MMI_SRV_VIEWER_EXIT_NUMBER_SEARCH, "[MMSUseDetailSrv] exit number search")
TRC_MSG(MMI_SRV_VIEWER_EXIT_EMAIL_SEARCH, "[MMSUseDetailSrv] exit email search")
TRC_MSG(MMI_SRV_VIEWER_EXIT_URL_SEARCH, "[MMSUseDetailSrv] exit url search")
TRC_MSG(MMI_SRV_VIEWER_USE_FILE_WRITE, "[MMSUseDetailSrv] total %d written %d")
TRC_MSG(MMI_SRV_VIEWER_TIME_NUMBER_WHILE_LOOP, "[MMSUseDetailSrv]number while loop %d")
TRC_MSG(MMI_SRV_VIEWER_TIME_EMAIL_WHILE_LOOP, "[MMSUseDetailSrv]email while loop %d")
TRC_MSG(MMI_SRV_VIEWER_TIME_URL_WHILE_LOOP, "[MMSUseDetailSrv]url while loop %d")
TRC_MSG(MMI_SRV_VIEWER_TIME_EMAIL_SEARCH_WHILE, "[MMSUseDetailSrv]email search while%d")
TRC_MSG(MMI_SRV_VIEWER_TIME_URL_SEARCH_WHILE, "[MMSUseDetailSrv]url search while%d")
TRC_MSG(MMI_SRV_VIEWER_USE_DETAIL_LST_SLIDE_REACHED, "*[mmsmsgparsesrv.c]use_details:last_slide_reached")
TRC_MSG(MMI_SRV_VIEWER_USE_DETAIL_FIRST_SLIDE_REACHED, "*[mmsmsgparsesrv.c]use_details:first_slide_reached")
TRC_MSG(MMI_SRV_VIEWER_USE_DETAIL_LST_PARSED_SLIDE_REACHED, "*[mmsmsgparsesrv.c]use_details:last_parsed_slide_reached")

/* ------------------------- MMS SRV-------------------------- */
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_RESULT, "*[mmsInterfaceSrv.c]sync mms info msg_id = %d, result = %d, is_asm_active = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_1, "*[mmsInterfaceSrv.c]sync mms info user_el_size = %d, msg_size = %d, dwld_size = %d, date = %d, exp_date = %d, rcv_date = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_2, "*[mmsInterfaceSrv.c]sync mms info need_rr = %d, need_dr = %d, isRead = %d, isFwlock = %d, is_fllw_content_cl = %d, result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_3, "*[mmsInterfaceSrv.c]sync mms info store_type = %d, media_type = %d, from_type = %d, msg_type = %d, msg_class = %d, priority = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_4, "*[mmsInterfaceSrv.c]sync mms info sim_id = %d, msg_report_status = %d, to_count = %d, cc_count = %d, bcc_count = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_5, "*[mmsInterfaceSrv.c]sync mms info %d, 0 = %d,1 = %d, 2 = %d, 3 = %d, 4 = %d, 5 = %d, 6 = %d, 7 = %d, 8 = %d, 9 = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_6, "*[mmsInterfaceSrv.c]sync mms info addr_len = %d, addr_group = %d, addr_type = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_INFO_INFO_7, "*[mmsInterfaceSrv.c]sync mms info app_data[0] = %d, app_data[1] = %d, app_data[2] = %d, ph_num = %d, email_num = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_COUNT_1, "*[mmsInterfaceSrv.c] MMS count result = %d, inbox_unread_s1 = %d, inbox_unread_s2 = %d, inbox_read_s1 = %d, inbox_read_s2 = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_COUNT_2, "*[mmsInterfaceSrv.c] MMS count unsent_s1 = %d, unsent_s2 = %d, sent_s1 = %d, sent_s2 = %d, draft = %d , predef = %d, userdef = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_COUNT_3, "*[mmsInterfaceSrv.c] MMS count arch_unread_inbox_s1 = %d, arch_unread_inbox_s2 = %d, arch_read_inbox_s1 = %d, arch_read_inbox_s2 = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_COUNT_4, "*[mmsInterfaceSrv.c] MMS count arch_sent_s1 = %d, arch_sent_s2 = %d, arch = %d, recent = %d, unread_report = %d, phone = %d, mcard = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_SYNC_DELETE, "*[mmsInterfaceSrv.c] srv_mms_delete_msg msg_id = %d, *result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_SYNC_SAVE, "*[mmsInterfaceSrv.c] srv_mms_save_msg msg_id = %d, folder_id = %d, *result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_SYNC_READ_STATUS, "*[mmsInterfaceSrv.c] srv_mms_set_read_status msg_id = %d, is_read = %d, *result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_SYNC_LOCK_STATUS, "*[mmsInterfaceSrv.c] srv_mms_set_lock_status msg_id = %d, is_lock = %d, is_corrupt = %d, *result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_SYNC_DELETE_REPORT, "*[mmsInterfaceSrv.c] msg_id = %d, *result = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_REPORT_INFO_NMGR, "*[mmsInterfaceSrv.c] nmgr report info unread_num=%d, global tone_id=%d, nmgr_tone=%d, msg_type=%d, from_type=%d, is_found=%d")
TRC_MSG(MMI_TRC_UMMS_SIM_UNAVAILABLE, "*[mmsInterfaceSrv.c] srv_mms_sim_unavailable_hdlr mmi sim  = %d, new_cause = %d, old_cause = %d, sim1_on = %d, sim2_on = %d")
TRC_MSG(MMI_TRC_UMMS_SIM_AVAILABLE, "*[mmsInterfaceSrv.c] srv_mms_sim_available_hdlr mmi sim = %d, ua_cause_before = %d, sim1_on = %d, sim2_on = %d")
TRC_MSG(MMI_TRC_UMMS_SIM_AVAILABILITY, "*[mmsInterfaceSrv.c] srv_mms_sim_availability_handler  sim_id = %d, is_available_before = %d, is_available_now = %d")
TRC_MSG( MMI_TRC_UMMS_SIM_MODE_SWITCH,"*[mmsInterfaceSrv.c] srv_mms_mode_switch_finish_event_hdlr  current_mode = %d, select_mode = %d, sim_valid_flag = %d")

/*-------------------------------------------APP CORE---------------------------------------------------------------------*/
TRC_MSG(MMI_UMMS_CORE_MEMORY_APP_SUCCESS_CALLBACK, "[MMSAppSrvHdlr.c]mmi_umms_app_core_mms_app_asm_success_callback")
TRC_MSG(MMI_UMMS_CORE_MEMORY_APP_STOP_CALLBACK, "[MMSAppSrvHdlr.c]mmi_ummsapp_core_mms_app_asm_stop_callback")
TRC_MSG(MMI_UMMS_CORE_ASM_VIEWER_SUCCESS, "[MMSAppSrvHdlr.c]mmi_umms_app_core_asm_viewer_success_callback")
TRC_MSG(MMI_UMMS_CORE_ASM_VIEWER_SUCCESS_NOUSE, "[MMSAppSrvHdlr.c]mmi_umms_app_core_asm_viewer_success_callback;SUCCESS_NOUSE")
TRC_MSG(MMI_UMMS_CORE_ASM_STOP_VIEWER, "[MMSAppSrvHdlr.c]mmi_umms_app_core_asm_viewer_stop_callback")
TRC_MSG(MMI_UMMS_CORE_START_VIEWER_DECISION, "[MMSAppSrvHdlr.c]mmi_umms_app_core_handle_view msg_type%d")
TRC_MSG(MMI_UMMS_CORE_START_VIEWER_RR_STATUS, "[MMSAppSrvHdlr.c]setting_rr%d ui_rr%d")
TRC_MSG(MMI_UMMS_CORE_VIEWER_REPLACE_SUCCESS, "[MMSAppSrvHdlr.c]mmi_umms_app_core_view_or_replace:success")
TRC_MSG(MMI_UMMS_CORE_VIEWER_REPLACE_FAIL, "[MMSAppSrvHdlr.c]mmi_umms_app_core_view_or_replace:fail")
TRC_MSG(MMI_UMMS_CORE_VIEWER_RR_CONFIRM_REPLACE_SUCCESS, "[MMSAppSrvHdlr.c]mmi_umms_app_core_send_rr_confirm_or_replace:success")
TRC_MSG(MMI_UMMS_CORE_VIEWER_RR_CONFIRM_REPLACE_FAILED, "[MMSAppSrvHdlr.c]mmi_umms_app_core_send_rr_confirm_or_replace:fail")
TRC_MSG(MMI_UMMS_CALLBACK_BLOCK_AUDIO,"[MMSAppUICallback.c]mmi_umms_app_ui_callback_allow_audio_playing:block")

/* ------------------------- MMS SERVICE ------------------------- */
TRC_MSG(TRC_SRV_MMS_GET_PROCESS_SLOT, "[MMSMainSrv.c]Process slot,count=%d,req_id=%d,app_id=%d,user_data=%d,call_back=%d,result=%d,cntx=%d")
TRC_MSG(TRC_SRV_MMS_RESET_PROCESS_SLOT, "[MMSMainSrv.c]Reset Process,req_id=%d,app_id=%d,user_data=%d,call_back=%d,result=%d,cntx=%d")

TRC_MSG(MMI_TRC_UMMS_LITE_DATA, "[MMSInterfaceSrv.c]body_size=%d,body_offset=%d,len=%d,type=%d,drm=%d,d_size=%d")
TRC_MSG(MMI_TRC_UMMS_LITE_DATA_SUBJECT, "[MMSInterfaceSrv.c]subject 0=%d,1=%d,2=%d,3=%d,4=%d,5=%d,6=%d,7=%d,8=%d,9=%d")
TRC_MSG(MMI_TRC_UMMS_LITE_DATA_BODY_NAME, "[MMSInterfaceSrv.c]body_name 0=%d,1=%d,2=%d,3=%d,4=%d,5=%d,6=%d,7=%d,8=%d,9=%d")
TRC_MSG(MMI_TRC_UMMS_LITE_DATA_RESULT, "[MMSInterfaceSrv.c]lite data msg_id =%d result =%d")
    
TRC_MSG(MMI_TRC_SRV_MMS_SYNC_MSG_INFO_1, "[MMSInterfaceSrv.c]msg_id=%d,result=%d,usr_el=%d,size=%d,t=%d,is_flw=%d")
TRC_MSG(MMI_TRC_SRV_MMS_SYNC_MSG_INFO_2, "[MMSInterfaceSrv.c]fwd_lock=%d,lock_mode=%d, corrupt=%d ,msg_type=%d ,folder=%d ,sim=%d")
TRC_MSG(MMI_TRC_SRV_MMS_SYNC_MSG_INFO_3, "[MMSInterfaceSrv.c]from_type=%d,storage=%d,prev_fldr=%d,need_rr=%d,0=%d,0=%d")
TRC_MSG(MMI_TRC_SRV_MMS_SYNC_MSG_INFO_4, "[MMSInterfaceSrv.c] subject 0=%d,1=%d,2=%d,3=%d,4=%d,5=%d,6=%d,7=%d,8=%d,9=%d")

/* ------------------------- MMS FTO --------------------------------- */
TRC_MSG(MMI_TRC_UMMS_INSTANCE_TO_BE_DELETED, "[MmsInterfaceSrv.c]srv_mms_delete_instance index:%d")
TRC_MSG(MMI_TRC_UMMS_INSTANCE_FOUND, "[MmsInterfaceSrv.c]srv_mms_create_main_instance empty index:%d")
TRC_MSG(MMI_TRC_UMMS_INSTANCE_ERASED, "[MmsInterfaceSrv.c]srv_mms_delete_instance deleted index:%d")


/* --------------------------------------------------------------- */
/* ------------------------- MMS APP-------------------------- */
/* --------------------------------------------------------------- */
TRC_MSG(MMI_TRC_UMMS_RR_DR_GET_DATA_1, "*[MmsAppUiCallback.c]  mmi_umms_app_ui_callback_dr_rr_status_get_data msg_id = %d, scr_id = %d, result = %d")
TRC_MSG(MMI_TRC_UMMS_RR_DR_GET_DATA_2, "*[MmsAppUiCallback.c] count = %d, p_flag = %d, dr_status = %d, rr_status = %d, addr_type = %d, addr_group = %d, addr_len = %d")
TRC_MSG(MMI_TRC_UMMS_MSG_CALL, "*[MmsAppUiPlugIn.c] Report call option  msg_id= %d , result= %d, addr_len= %d, addr_group= %d, addr_type= %d")        
/* --------------------------------------------------------------- */
/* ------------------------- MMS VIEWER APP-------------------------- */
/* --------------------------------------------------------------- */
/* --------------------------Interface------------------------------*/
TRC_MSG(MMI_UMMS_INTERFACE_UPDATE_DTMGR_FOR_OPTION, "[MMSappinterface]update dtmgr option msg_id:%d, folder_id:%d")
TRC_MSG(MMI_UMMS_INTERFACE_UPDATE_DTMGR_FOR_VIEWER, "[MMSappinterface]update dtmgr viewer msg_id:%d, folder_id:%d is_preview:%d")
TRC_MSG(MMI_UMMS_INTERFACE_VIEWER_DEINIT, "[MMSappinterface]deinit viewer")
TRC_MSG(MMI_UMMS_INTERFACE_IS_VIEWER_INIT, "[MMSappinterface]is viewer init")
/*---------------------------Datamanager-------------------------------*/
TRC_MSG(MMI_UMMS_DTMGR_OP_SCR_CRNT_STATE, "[MMSAppDataManager.c]option screen current state = %d")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_ASM_ERROR, "[MMSAppDataManager.c]draw asm screen")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_SCR_CRNT_STATE, "[MMSAppDataManager.c]viewer screen current state = %d")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_MODE_FOR_GET_CONTENT, "[MMSAppDataManager.c]get content mode:%d")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_MODE_FOR_XML_PARSE, "[MMSAppDataManager.c]xml parse mode:%d")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_DATA_READY_GO_FOR_VIEW, "[MMSAppDataManager.c]viewer data ready")
TRC_MSG(MMI_UMMS_DTMGR_SAVE_HEADER_INFO, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_save_header_info")
TRC_MSG(MMI_UMMS_DTMGR_SAVE_MSG_INFO, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_save_msg_info")
TRC_MSG(MMI_UMMS_DTMGR_DELETE_VIEWER_DATA, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_delete_viewer_data")
TRC_MSG(MMI_UMMS_DTMGR_SEND_USE_DETAILS_REQ, "[MMSAppDataManager.c]send_use_details_list_req curr_index:%d,is_more:%d,addr_type:%d")
TRC_MSG(MMI_UMMS_DTMGR_SEND_USE_DETAILS_RSP, "[MMSAppDataManager.c]get_use_details_list_rsp start_index:%d,end_index:%d,result:%d")
TRC_MSG(MMI_UMMS_DTMGR_SEND_USE_DETAILS_TOTAL_ITEMS_IN_UNLIMITED, "[MMSAppDataManager.c]unlimited item count:%d")
TRC_MSG(MMI_UMMS_DTMGR_GET_AYSNC_USE_DETAILS_DATA_LOADING, "[MMSAppDataManager.c]use_details_list WGUI_GET_DATA_LOADING")
TRC_MSG(MMI_UMMS_DTMGR_GET_AYSNC_USE_DETAILS_DATA_NONE, "[MMSAppDataManager.c]use_details_list WGUI_GET_DATA_NONE")
TRC_MSG(MMI_UMMS_DTMGR_GET_AYSNC_USE_DETAILS_HANDLE_LIST_NOT_READY, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_use_details_handle_list_not_ready")
TRC_MSG(MMI_UMMS_DTMGR_DELETE_USE_DETAILS_LIST, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_reset_use_details_list_data")
TRC_MSG(MMI_UMMS_DTMGR_SEND_USE_DETAILS_REQ_FOR_SLIDE, "[MMSAppDataManager.c]use_details_req_slide for slide_num:%d")
TRC_MSG(MMI_UMMS_DTMGR_GET_USE_DETAILS_RSP_FOR_SLIDE, "[MMSAppDataManager.c]use_details_rsp_slide for slide_num:%d")
TRC_MSG(MMI_UMMS_DTMGR_ABORT_SEND_RR, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_abort_send_read_report")
TRC_MSG(MMI_UMMS_DTMGR_UPDATE_RR_STATUS, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_update_read_status:%d")
TRC_MSG(MMI_UMMS_DTMGR_VIEW_NOT_A_MMS, "[MMSAppDataManager.c]not a mms")
TRC_MSG(MMI_UMMS_DTMGR_ERROR_FRM_SERVICE, "[MMSAppDataManager.c]Error from service:%d")
TRC_MSG(MMI_UMMS_DTMGR_RESET_DATA, "[MMSAppDataManager.c]mmi_umms_app_dtmgr_reset_data")
TRC_MSG(MMI_UMMS_DTMGR_APP_ALREADY_DEINIT, "[MMSAppDataManager.c]App_already_deinit")

TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_ENTRY_FIRST_TIME, "[MMSAppUIPlugin.c]entry_viewer_first_time")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_ENTRY_REVIEW, "[MMSAppUIPlugin.c]review_mms")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_FROM_HISTORY, "[MMSAppUIPlugin.c]entry_viewer_from_history")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_GO_TO_FIRST_SLIDE, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_goto_first_slide")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_LSK_HDLR, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plugin_viewer_lsk_hdlr folder:%d")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_DISPLAY_SLIDE_LIST, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_mms_preview_slide_list_pre_func")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_GO_TO_SLIDE, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_goto_slide %d")
TRC_MSG(MMI_UMMS_PLUG_IN_USE_DETAILS_DISABLE_KEYS, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_disable_keys_if_needed")
TRC_MSG(MMI_UMMS_PLUG_IN_USE_DETAILS_ENABLE_KEYS, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_enable_keys_if_needed")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_LAUNCH_EMAIL, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_use_email_as_send_email_viewer")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_LAUNCH_URL, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_use_url_as_browser_launch_viewer")
TRC_MSG(MMI_UMMS_PLUG_IN_VIEWER_CALL_NUMBER, "[MMSAppUIPlugin.c]mmi_umms_app_ui_plug_in_use_number_as_make_call_viewer")


/*-------------------------------------------Screen Handler---------------------------------------------------------------------*/
TRC_MSG(MMI_UMMS_SH_VIEWER_RR_YES,"[MMSAppScrHdlr.c]mmi_umms_app_sh_send_read_report_yes")
TRC_MSG(MMI_UMMS_SH_VIEWER_RR_NO,"[MMSAppScrHdlr.c]mmi_umms_app_sh_send_read_report_no")
TRC_MSG(MMI_UMMS_SH_VIEWER_EXIT_FN,"[MMSAppScrHdlr.c]mmi_umms_app_sh_viewer_exit_func")
TRC_MSG(MMI_UMMS_SH_VIEWER_DELETE_CB,"[MMSAppScrHdlr.c]mmi_umms_app_sh_viewer_delete_scr_handler")
TRC_MSG(MMI_UMMS_SH_SCREEN_NOT_FOUND,"[MMSAppScrHdlr.c]mmi_umms_app_sh_delete_screen_context:scr not found")


/*--------------------------------------------------------------- */
/* ------------------------- MMS VIEWER -------------------------- */
/* --------------------------------------------------------------- */
TRC_MSG(MMI_MV_FUNC_XML_DATA_ADDRESS_HDLR, "[MMSViewer] mmi_mv_xml_data_address_hdlr:: Duplicate Address ")
TRC_MSG(MMI_MV_FUNC_XML_START_HDLR_TEXT, "[MMSViewer] text.begin > text.end  ")
TRC_MSG(MMI_MV_FUNC_XML_START_HDLR_AUDIO, "[MMSViewer] image.begin > image.end ")
TRC_MSG(MMI_MV_FUNC_XML_START_HDLR_IMG, "[MMSViewer] audio.begin > audio.end ")
TRC_MSG(MMI_MV_FUNC_XML_START_HDLR_VIDEO, "[MMSViewer] video.begin > video.end ")
TRC_MSG(MMI_MV_READ_FILE, "[MMSViewer] Read Length(bytes) %d ")
TRC_MSG(MMI_MV_CONVERTED_TO_UCS2_LEN, "[MMSViewer] Converted Length(chars) %d ")
TRC_MSG(MMI_MV_UNKNOWN_MEDIA, "[MMSViewer] %d object has unknown MIME Type ")
TRC_MSG(MMI_MV_VIEWER_NOT_IN_HISTORY, "[MMSViewer] Viewer not in History ")
TRC_MSG(MMI_MV_TRACE_DECODE_ERR,"[MMSViewer] text not decoded")
TRC_MSG(MMI_MV_TRACE_POSTCRD_EXIT, "[MMSViewer] exit from postcard")
TRC_MSG(MMI_MV_TRACE_SET_READ_REPORT, "[MMSViewer] set rr flag for msg:%d")
/* --------------------------------------------------------------- */
/* ------------------------- MMS USE DETAIL -------------------------- */
/* --------------------------------------------------------------- */
TRC_MSG(MMI_MV_TRACE_USE_LIST_CURR_COUNT, "[MMSUseDetail] current count %d ")
TRC_MSG(MMI_MV_TRACE_USE_LIST_CURR_OFFSET, "[MMSUseDetail] current offset %d ")
TRC_MSG(MMI_MV_TRACE_USE_LIST_START_INDEX, "[MMSUseDetail] start index %d ")
TRC_MSG(MMI_MV_TRACE_USE_LIST_END_INDEX, "[MMSUseDetail] end index %d ")
TRC_MSG(MMI_MV_TRACE_USE_LIST_IS_FIRST_INDEX, "[MMSUseDetail] is first index ")
TRC_MSG(MMI_MV_TRACE_USE_LIST_IS_LAST_INDEX, "[MMSUseDetail] is last index ")
TRC_MSG(MMI_MV_TRACE_ENTER_NUMBER_SEARCH, "[MMSUseDetail] number search starts")
TRC_MSG(MMI_MV_TRACE_ENTER_URL_SEARCH, "[MMSUseDetail] url search starts")
TRC_MSG(MMI_MV_TRACE_ENTER_EMAIL_SEARCH, "[MMSUseDetail] email search starts")
TRC_MSG(MMI_MV_TRACE_NUMBER_DUMP_OFFSET, "[MMSUseDetail] number dump at %d")
TRC_MSG(MMI_MV_TRACE_EMAIL_DUMP_OFFSET, "[MMSUseDetail] email dump at %d")
TRC_MSG(MMI_MV_TRACE_URL_DUMP_OFFSET, "[MMSUseDetail] url dump at %d")
TRC_MSG(MMI_MV_TRACE_EXIT_NUMBER_SEARCH_BLOCK, "[MMSUseDetail] exit number blocked")
TRC_MSG(MMI_MV_TRACE_EXIT_EMAIL_SEARCH_BLOCK, "[MMSUseDetail] exit email blocked")
TRC_MSG(MMI_MV_TRACE_EXIT_URL_SEARCH_BLOCK, "[MMSUseDetail] exit url blocked")
TRC_MSG(MMI_MV_TRACE_EXIT_NUMBER_SEARCH_BLOCK_SLIDE, "[MMSUseDetail] exit number blocked:slide")
TRC_MSG(MMI_MV_TRACE_EXIT_EMAIL_SEARCH_BLOCK_SLIDE, "[MMSUseDetail] exit email blocked:slide")
TRC_MSG(MMI_MV_TRACE_EXIT_URL_SEARCH_BLOCK_SLIDE, "[MMSUseDetail] exit url blocked:slide")
TRC_MSG(MMI_MV_TRACE_EXIT_NUMBER_SEARCH, "[MMSUseDetail] exit number search")
TRC_MSG(MMI_MV_TRACE_EXIT_EMAIL_SEARCH, "[MMSUseDetail] exit email search")
TRC_MSG(MMI_MV_TRACE_EXIT_URL_SEARCH, "[MMSUseDetail] exit url search")
TRC_MSG(MMI_MV_TRACE_USE_FILE_WRITE, "[MMSUseDetail] total %d written %d")
//#ifdef MMI_MV_USE_DETAIL_UNIT_TEST
TRC_MSG(MMI_MV_TRACE_TIME_NUMBER_WHILE_LOOP, "[MMSUseDetail]number while loop %d")
TRC_MSG(MMI_MV_TRACE_TIME_EMAIL_WHILE_LOOP, "[MMSUseDetail]email while loop %d")
TRC_MSG(MMI_MV_TRACE_TIME_URL_WHILE_LOOP, "[MMSUseDetail]url while loop %d")
TRC_MSG(MMI_MV_TRACE_TIME_NUMBER_FILE_OPER, "[MMSUseDetail]number file op %d")
TRC_MSG(MMI_MV_TRACE_TIME_EMAIL_FILE_OPER, "[MMSUseDetail]email file op %d")
TRC_MSG(MMI_MV_TRACE_TIME_URL_FILE_OPER, "[MMSUseDetail]url file op %d")
TRC_MSG(MMI_MV_TRACE_TIME_EMAIL_SEARCH_WHILE, "[MMSUseDetail]email search while%d")
TRC_MSG(MMI_MV_TRACE_TIME_URL_SEARCH_WHILE, "[MMSUseDetail]url search while%d")
//#endif


/* ------------------------------------------------------------------- */
/* ------------------------- MMS PERFORMANCE ------------------------- */
/* ------------------------------------------------------------------- */
TRC_MSG(MMI_UMMS_PERFORMANCE_VIEWER_START_TIME, "[AutoTest][mmsapp] mms viewer start time  %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_BFORE_GET_CONTENT_REQ, "[AutoTest][mmsapp] time consumed before request to mma for content %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_IN_GET_CONTENT_REQ, "[AutoTest][mmsapp] time consumed by mma in get content %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_IN_XML_PARSER, "[AutoTest][mmsapp] time consumed by mms service xml parser  %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_IN_DRM_PARSER, "[AutoTest][mmsapp] time consumed by mms service drm parser  %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_CATEGORY_CALLS_VIEWER_CB, "[AutoTest][mmsapp] time consumed by gui bfor call app cb  %d")
TRC_MSG(MMI_UMMS_PERFORMANCE_TIME_CONSUMED_USE_DETAILS_VIEWER_CB, "[AutoTest][mmsapp] time consumed by app for use details %d, starting category...")
TRC_MSG(MMI_UMMS_PERFORMANCE_VIEWER_CONTENT_RENDERED, "[AutoTest][mmsapp] mms viewer show content completely")
TRC_MSG(MMI_UMMS_PERFORMANCE_VIEWER_START, "[AutoTest][mmsapp] start mms viewer")
TRC_MSG(MMI_UMMS_PERFORMANCE_START_SLIDE_SWITCH, "[AutoTest][mmsapp] start switching slide")