[APP NAME] = AVRCP Srv
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_CONN_APP

#starttrace
TRC_MSG(MMI_AVRCP_TRC_STATE_TRANSITION, "[AVRCPMMI] state transition for chnl [%d]: (%d -> %d)")
TRC_MSG(MMI_AVRCP_TRC_STATE_ERROR, "[AVRCPMMI] wrong state for chnl [%d]: (%d)")
TRC_MSG(MMI_AVRCP_TRC_STATE_CURRENT, "[AVRCPMMI] current state for chnl [%d]: (%d)")   
TRC_MSG(MMI_AVRCP_TRC_GET_CMD_HDLR_FUNC_HDLR, "[AVRCPMMI] srv_avrcp_get_cmd_hdlr_func_ptr: func number %d")
TRC_MSG(MMI_AVRCP_TRC_INIT, "[AVRCPMMI] srv_avrcp_init()")
TRC_MSG(MMI_AVRCP_TRC_INIT_EVENT_HDLR, "[AVRCPMMI] srv_avrcp_init_event_handler()")
TRC_MSG(MMI_AVRCP_TRC_ACTIVATE_REQ, "[AVRCPMMI] srv_avrcp_activate_req()")
TRC_MSG(MMI_AVRCP_TRC_ACTIVATE_CNF_HDLR, "[AVRCPMMI] srv_avrcp_activate_cnf_hdlr() result = %d")
TRC_MSG(MMI_AVRCP_TRC_DEACTIVATE_REQ, "[AVRCPMMI] srv_avrcp_deactivate_req()")
TRC_MSG(MMI_AVRCP_TRC_DEACTIVATE_CNF_HDLR, "[AVRCPMMI] srv_avrcp_deactivate_cnf_hdlr() result = %d")
TRC_MSG(MMI_AVRCP_TRC_DEVICE_ADDR_NULL_EXCEPTION, "[AVRCPMMI] device address is null")
TRC_MSG(MMI_AVRCP_TRC_CHANNEL_INDEX_ERROR, "[AVRCPMMI] avrcp channel index is out of range = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_REQ, "[AVRCPMMI] srv_avrcp_connect_req() role = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_FROM_A2DP, "[AVRCPMMI] srv_avrcp_connect_req_from_a2dp() role = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_FROM_CM, "[AVRCPMMI] srv_avrcp_connect_from_cm() cb_ptr = %x, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_CNF_HDLR, "[AVRCPMMI] srv_avrcp_connect_cnf_hdlr() result = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_IND_HDLR, "[AVRCPMMI] srv_avrcp_connect_ind_hdlr() connect_id = %d, role = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_IND_REQ_HDLR, "[AVRCPMMI] srv_avrcp_connect_ind_req_hdlr() is_bt_dialer = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CONNECT_IND_HDLR_INT, "[AVRCPMMI] srv_avrcp_connect_ind_hdlr_int() role = %d, channel num = %d, connect_id = %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_REQ, "[AVRCPMMI] srv_avrcp_disconnect_req() channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_FROM_CM, "[AVRCPMMI] srv_avrcp_disconnect_from_cm() cb_ptr = %x, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_CT_REQ, "[AVRCPMMI] srv_avrcp_disconnect_ct_req()")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_TG_REQ, "[AVRCPMMI] srv_avrcp_disconnect_tg_req()")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_CT_TG_REQ, "[AVRCPMMI] srv_avrcp_disconnect_tg_ct_req() role = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_CNF_HDLR, "[AVRCPMMI] srv_avrcp_disconnect_cnf_hdlr() connect_id = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_IND_HDLR, "[AVRCPMMI] srv_avrcp_disconnect_ind_hdlr() connect_id = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_CMD_FRAME_REQ, "[AVRCPMMI] srv_avrcp_cmd_frame_req()")    
TRC_MSG(MMI_AVRCP_TRC_CMD_FRAME_CNF_HDLR, "[AVRCPMMI] srv_avrcp_cmd_frame_cnf_hdlr()  connect_id = %d, channel num = %d")    
TRC_MSG(MMI_AVRCP_TRC_CMD_FRAME_IND_HDLR, "[AVRCPMMI] srv_avrcp_cmd_frame_ind_hdlr(), blocked=%d, connect_id = %d, channel_num = %d")    
TRC_MSG(MMI_AVRCP_TRC_SET_CMD_HDLR, "[AVRCPMMI] srv_avrcp_set_cmd_hdlr()")    
TRC_MSG(MMI_AVRCP_TRC_SET_CMD_HDLR1, "[AVRCPMMI] srv_avrcp_set_cmd_hdlr: total=[%d]")    
TRC_MSG(MMI_AVRCP_TRC_CLEAR_CMD_HDLR, "[AVRCPMMI] srv_avrcp_clear_cmd_hdlr: [%d]")    
TRC_MSG(MMI_AVRCP_TRC_CLEAR_CMD_HDLR1, "[AVRCPMMI] srv_avrcp_clear_cmd_hdlr 2: [%d]")    
TRC_MSG(MMI_AVRCP_TRC_AUTO_RELEASE1, "[AVRCPMMI] AVRCP: auto release1")    
TRC_MSG(MMI_AVRCP_TRC_AUTO_RELEASE2, "[AVRCPMMI] AVRCP: auto release2")    
TRC_MSG(MMI_AVRCP_TRC_FRAMEWORK_BLOCK, "[AVRCPMMI] AVRCP: framework sync, blocked=%d")    
TRC_MSG(MMI_AVRCP_TRC_FRAMEWORK_SYNC1, "[AVRCPMMI] AVRCP: framework sync, cmd canceled")    
TRC_MSG(MMI_AVRCP_TRC_FRAMEWORK_SYNC2, "[AVRCPMMI] AVRCP: framework sync, key up")
TRC_MSG(MMI_AVRCP_TRC_GET_ACTIVELY_TG, "[AVRCPMMI] AVRCP: get_actively_connect_tg_flag: %d")
TRC_MSG(MMI_AVRCP_TRC_SET_ACTIVELY_TG, "[AVRCPMMI] AVRCP: set_actively_connect_tg_flag: %d")
TRC_MSG(MMI_AVRCP_TRC_DISCONNECT_FROM_AVBT, "[AVRCPMMI] srv_avrcp_disconnect_from_av_bt: %d, set:%d")
TRC_MSG(MMI_AV_BT_TRC_SINK_AVRCP_CT_CONN_REQ, "[AVRCPMMI] AVRCP CT connect request")  
TRC_MSG(MMI_AVRCP_TRC_NOTIFY_CONNECTIVITY_RESULT, "[AVRCPMMI] AVRCP channel = %d, state = %d, is_connect = %d, noti_cb = %x, notify_result = %d, cm_cb = %x, cm_result = %d")
TRC_MSG(MMI_AVRCP_CT_TRC_CONN_RETRY_REQ, "[AVRCPMMI] AVRCP CT connect retry request")    
TRC_MSG(MMI_AVRCP_CT_TRC_IS_CT_READY, "[AVRCPMMI] AVRCP CT is ready to send command frame, is_timer_on:%d")    
TRC_MSG(MMI_AVRCP_CT_TRC_IS_CONN, "[AVRCPMMI] AVRCP CT is connection active, state: %d")
TRC_MSG(MMI_AVRCP_CT_TRC_SEND_CMD_FRAME, "[AVRCPMMI] AVRCP CT send command frame, cmd_frame: %d")
TRC_MSG(MMI_AVRCP_CT_TRC_REGISTER_TG_CMD_CALLBACK, "[AVRCPMMI] AVRCP register TG CMD callback, callback = %x")
TRC_MSG(MMI_AVRCP_CT_TRC_TG_CMD_CALLBACK, "[AVRCPMMI] AVRCP TG CMD callback, is_dialer = %d, callback = %x, state = %d, cmd_frame = %d, key_events = %d")
TRC_MSG(MMI_AVRCP_CT_TRC_CLEAR_CMD_FRAME, "[AVRCPMMI] AVRCP CT clear command frame, cmd_frame: %d")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ATTR_REQ, "[AVRCPMMI] AVRCPV13 Get player app attr req , local_role: %d")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ATTR_CNF_HDLR, "[AVRCPMMI] AVRCPV13 Get player app attr cnf hdlr,result: %d, error: %d")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_VAL_REQ, "[AVRCPMMI] AVRCPV13 Get player app value req , local_role: %d, attr_id: %d")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_VAL_CNF_HDLR, "[AVRCPMMI] AVRCPV13 Get player app value cnf hdlr,result: %d, error: %d")
TRC_MSG(MMI_AVRCP_TRC_CURR_PLAYER_APP_VAL_REQ, "[AVRCPMMI] AVRCPV13 Get current player app value req, local_role%d")
TRC_MSG(MMI_AVRCP_TRC_CURR_APP_VAL_CNF_HDLR, "[AVRCPMMI] AVRCPV13 Get Curr player app attr cnf hdlr, result: %d, error: %d, connect_id = %d, channel_num = %d")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_NOT_CONNECTED, "[AVRCPMMI]AVRCP Not Connected !!")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_VERSION_MISMATCH, "[AVRCPMMI]AVRCP Version Mismatch,Current Supported Version:%d !!")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_RESULT, "[AVRCPMMI]AVRCP Command Result:%d,Error_code:%d!")

TRC_MSG(MMI_AVRCP_TRC_AVRCP_SDP_QUERY_REQ, "[AVRCPMMI] srv_avrcp_sdp_query_req() role = %d, connect_id = %d")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_SDP_QUERY_CNF, "[AVRCPMMI] srv_avrcp_sdp_query_cnf_hdlr() result = %d, connect_id = %d, version = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_VERSION_IND_HDLR, "[AVRCPMMI] srv_avrcp_version_indication_hdlr() result = %d, ct_version = %d, tg_version = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_APP_ATTR_CNF_HDLR, "[AVRCPMMI] srv_avrcp_list_player_app_attr_cnf_hdlr() connect_id = %d, channel num = %d")
TRC_MSG(MMI_AVRCP_TRC_AVRCP_APP_VALUE_CNF_HDLR, "[AVRCPMMI] srv_avrcp_list_player_app_value_cnf_hdlr() connect_id = %d, channel num = %d")

TRC_MSG(MMI_AVRCP_TRC_NOTIFIER_REG_FAIL,"[AVRCPMMI]AVRCP App notifer reg fail,local role:%d")
TRC_MSG(MMI_AVRCP_TRC_NOTIFIER_REGISTERED,"[AVRCPMMI]AVRCP App notifer callback registered,local_role:%d")
TRC_MSG(MMI_AVRCP_TRC_APP_NOTIFIER_CALLED,"[AVRCPMMI]AVRCP App notifer callback called,event:%d")	
TRC_MSG(MMI_AVRCP_TRC_APP_NOTIFIER_CALL_FAILED,"[AVRCPMMI]AVRCP App notifer callback Not called,event:%d !!")
TRC_MSG(MMI_AVRCP_TRC_APP_SET_PLAYER_APP_VALUE,"[AVRCPMMI]AVRCP Set player app value")
TRC_MSG(MMI_AVRCP_TRC_APP_SET_PLAYER_APP_RESULT,"[AVRCPMMI]AVRCP Set player app value result")
TRC_MSG(MMI_AVRCP_TRC_APP_GET_PLAYER_APP_ATTR_TXT,"[AVRCPMMI]AVRCP get attr txt")
TRC_MSG(MMI_AVRCP_TRC_APP_GET_PLAYER_APP_ATTR_CNF_HDLR,"[AVRCPMMI]AVRCP get attr txt result")
TRC_MSG(MMI_AVRCP_TRC_MSG_SENT_TO_BT,"[AVRCPMMI]AVRCP App notifer callback called,msg_id:%d")	
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_VAL_TXT_REQ,"[AVRCPMMI]AVRCP Player App attr value txt")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_VAL_TXT_CNF_HDLR,"[AVRCPMMI]AVRCP Player App attr value txt result, connect_id = %d, channel_num = %d")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_INFORM_CHARSET,"[AVRCPMMI]AVRCP Player app inform charset")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_INFORM_CHARSET_CNF_HDLR,"[AVRCPMMI]AVRCP Player app inform charset cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_INFORM_BATT_STATUS,"[AVRCPMMI]AVRCP Player app inform battery status")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_INFORM_BATT_STATUS_CNF_HDLR,"[AVRCPMMI]AVRCP Player app inform batt status cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ELEM_ATTR_REQ,"[AVRCPMMI]AVRCP Player app element attr req")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ELEM_ATTR_CNF_HDLR,"[AVRCPMMI]AVRCP Player app elem attr cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_GET_PLAY_STATUS,"[AVRCPMMI]AVRCP Player app play status req")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_GET_PLAY_STATUS_CNF_HDLR,"[AVRCPMMI]AVRCP Player app play status cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_REG_NOTIFY_REQ,"[AVRCPMMI]AVRCP Player register notify events")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_REG_NOTIFY_CNF_HDLR,"[AVRCPMMI]AVRCP Player app reg notify events cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ABORT_REQ,"[AVRCPMMI]AVRCP Player app abort request")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_ABORT_CNF_HDLR,"[AVRCPMMI]AVRCP Player app abort req cnf hdlr")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_OPEN_DEV,"[AVRCPMMI]AVRCP Player app open device")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_CLOSE_DEV,"[AVRCPMMI]AVRCP Player app close device")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_REG_NOTIFY_ALL,"[AVRCPMMI]AVRCP Player app register all notify events")
TRC_MSG(MMI_AVRCP_TRC_PLAYER_APP_RE_REG_NOTIFY_CNF_HDLR,"[AVRCPMMI]AVRCP Player app re-register for event confirmation")
TRC_MSG(MMI_AVRCP_TRC_GET_ROLE,"[AVRCPMMI]srv_avrcp_get_role,role:%d")
TRC_MSG(MMI_AVRCP_TRC_PRINT_INTEGER,"[AVRCPMMI] x: %d")
TRC_MSG(MMI_AVRCP_TRC_PRINT_STRING,"[AVRCPMMI] x: %s")

