[APP NAME] = SRV_GCALL
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_COMMON_APP

#start trace
TRC_MSG(TRC_SRV_GCALL_PROC_CM_EVENT,"srv_gcall_proc_cm_event, %Msrv_gcall_cm_event_enum start")
TRC_MSG(TRC_SRV_GCALL_PROC_CM_EVENT_RESULT,"srv_gcall_proc_cm_event, %Msrv_gcall_cm_event_enum end, result=%Mps_cause_enum")
TRC_MSG(TRC_SRV_GCALL_CM_DIAL_CNF,"srv_gcall_cm_dial_cnf, result=%d")
TRC_MSG(TRC_SRV_GCALL_PROC_PS_EVENT,"srv_gcall_proc_ps_event, %Msrv_gcall_ps_event_enum start")
TRC_MSG(TRC_SRV_GCALL_PROC_PS_EVENT_RESULT,"srv_gcall_proc_ps_event, %Msrv_gcall_ps_event_enum end, result=%Mps_cause_enum")
TRC_MSG(TRC_SRV_GCALL_GET_INTERFACE_WITH_UCM_CALL_TYPE_NOT_SUPPORT,"srv_gcall_get_interface_with_call_type, ERROR! ucm_call_type %d is not supported")
TRC_MSG(TRC_SRV_GCALL_GET_UCM_CALL_LIST_IGNORE,"srv_gcall_get_ucm_call_list, Ignore auto rejected call, id=%d")
TRC_MSG(TRC_SRV_GCALL_GET_UCM_CALL_LIST_INFO,"srv_gcall_get_ucm_call_list, [%d] group_id=%d, call_id=%d, call_type=%d, ucm_state=%d")
TRC_MSG(TRC_SRV_GCALL_UCM_DIAL_RSP_INFO, "srv_gcall_ucm_dial_rsp, ucm_result=%d, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_UCM_ACT_RSP_INFO, "srv_gcall_ucm_act_rsp, ucm_op=%d, ucm_result=%d")
TRC_MSG(TRC_SRV_GCALL_UCM_CALL_PRESENT_CNF_IND_INFO, "srv_gcall_ucm_call_present_ind, id=%d, type=%d, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_UCM_RING_IND_REMOTE_INFO, "srv_gcall_ucm_ring_ind, call_id=%d, disp_name=%c%c%c%c%c, log_name=%c%c%c%c%c, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_ACT_REQ, "srv_gcall_cmhdlr_act_req, ucm_call_type=%d, op_code=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_PRMT, "srv_gcall_cmhdlr_prmt, ucm_call_type=%d, op_code=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_PRMT_LOCK, "srv_gcall_cmhdlr_prmt, ERROR! cntxt is locked!")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_QUERY, "srv_gcall_cmhdlr_query, ucm_call_type=%d, query_type=%d, result=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF, "srv_gcall_cmhdlr_cnf, ucm_call_type=%d, cnf_type=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_AUTO_DTMF, "srv_gcall_cmhdlr_cnf_auto_dtmf, ucm_call_type=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_AUTO_DTMF_IGNORE, "srv_gcall_cmhdlr_cnf_auto_dtmf, IGNORED")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_CCBS_RECALL, "srv_gcall_cmhdlr_cnf_ccbs_recall, ucm_call_type=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_CCBS_RECALL_IGNORE, "srv_gcall_cmhdlr_cnf_ccbs_recall, IGNORED, state=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_CCBS_ACTIVATE, "srv_gcall_cmhdlr_cnf_ccbs_activate, ucm_call_type=%d")
TRC_MSG(TRC_SRV_GCALL_CMHDLR_CNF_CCBS_ACTIVATE_IGNORE, "srv_gcall_cmhdlr_cnf_ccbs_activate, IGNORED, state=%d")
TRC_MSG(TRC_SRV_GCALL_UCM_DIAL_CNF_IND, "srv_gcall_ucm_dial_cnf_ind, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_UCM_DIAL_IND, "srv_gcall_ucm_dial_ind, result=%d, disp_name=%c%c%c%c%c, log_name=%c%c%c%c%c, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_UCM_NOTIFY_IND, "srv_gcall_ucm_notify_ind")
TRC_MSG(TRC_SRV_GCALL_UCM_CONNECT_IND, "srv_gcall_ucm_connect_ind, call_id=%d, disp_name=%c%c%c%c%c, log_name=%c%c%c%c%c, number=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_PHDLR_DATA_CALL_REQ_IND,"srv_gcall_phdlr_data_call_req_ind, event=%Msrv_gcall_ps_event_enum")
TRC_MSG(TRC_SRV_GCALL_PHDLR_ATA_RSP_RESULT, "srv_gcall_phdlr_ata_rsp, result=%d")
TRC_MSG(TRC_SRV_GCALL_PHDLR_MAKE_CALL_REQ_IND_NOT_SUPPORT, "srv_gcall_phdlr_make_call_req_ind, ERROR, source id is not supported")
TRC_MSG(TRC_SRV_GCALL_ADD_NEW_CALL_INFO,"srv_gcall_add_new_call_info, cid=%d, gid=%d, type=%d, dir=%Msrv_gcall_dir_enum, state=%Msrv_gcall_state_enum, number=%c%c%c%c%c, name=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_ADD_NEW_CALL_INFO_VOICE_MAIL,"srv_gcall_add_new_call_info, MO call from voice mail, module_id=%d, result=%d, name_length=%d")
TRC_MSG(TRC_SRV_GCALL_ADD_NEW_CALL_INFO_FROM_SAT,"srv_gcall_add_new_call_info, MO call from sat")
TRC_MSG(TRC_SRV_GCALL_ADD_NEW_CALL_INFO_PHB,"srv_gcall_add_new_call_info, PHB_DATA: tone=%d, image=%d, video=%d, res_type=%d, number_type=%d")
TRC_MSG(TRC_SRV_GCALL_ADD_NEW_CALL_INFO_ALERT,"srv_gcall_add_new_call_info, alert=%d, backlight=%d")
TRC_MSG(TRC_SRV_GCALL_SET_CNAP_NAME_SET,"srv_gcall_set_cnap_name, name is assigned")
TRC_MSG(TRC_SRV_GCALL_SET_CNAP_NAME_NO_MATCH,"srv_gcall_set_cnap_name, No Match!")
TRC_MSG(TRC_SRV_GCALL_GET_CALLER_RES_INFO_PHB,"srv_gcall_get_caller_res_info, phb_res_type=%d, phb_pic_id=%d, phb_pic_path=%c%c%c%c%c, phb_tone_id=%d, phb_tone_path=%c%c%c%c%c")
TRC_MSG(TRC_SRV_GCALL_GET_CALLER_RES_INFO,"srv_gcall_get_caller_res_info, call_type=%d, group_id=%d, call_id=%d, res_type=%d, pic_id=%d, pic_path=%c%c%c%c%c, tone_id=%d, tone_path=%c%c%c%c%c, video_id=%d, video_path=%c%c%c%c%c, is_video_sound=%d")
TRC_MSG(TRC_SRV_GCALL_GET_INCOMING_CALL_TYPE_NO_MATCH,"srv_gcall_get_incoming_call_type, No Match!")
TRC_MSG(TRC_SRV_GCALL_PRMT_BUSY, "srv_gcall_prmt, ERROR! gcall srv is busy!, prmt_type=%d, curr_op=%d, curr_bg_op=%d")
TRC_MSG(TRC_SRV_GCALL_PRMT_RESULT, "srv_gcall_prmt, op_code=%d result=%Mps_cause_enum")
TRC_MSG(TRC_SRV_GCALL_CNTXT_SET_PTR, "srv_gcall_cntxt_set_ptr, %Msrv_gcall_sim_interface_enum")
TRC_MSG(TRC_SRV_GCALL_CNTXT_RESET_PTR, "srv_gcall_cntxt_reset_ptr")
TRC_MSG(TRC_SRV_GCALL_UTIL_MGMT_PHB_INFO,"srv_gcall_util_mgmt_phb_info, is_hold=%d, user_data=%d, result=%d")
TRC_MSG(TRC_SRV_GCALL_UTIL_TYPE_AVAILABLE,"srv_gcall_util_type_available, %d")