[APP NAME] = SRV_WLAN
[SCOPE] = PLUTO,COSMOS
[MODULE] = MOD_MMI_CONN_APP

#start trace
TRC_MSG(SRV_WLAN_API_CONNECT_PROF, "[WLAN SRV API] srv_wlan_connect_by_spec_prof(), conn prof id: %d")
TRC_MSG(SRV_WLAN_API_CONNECT, "[WLAN SRV API] srv_wlan_connect()")
TRC_MSG(SRV_WLAN_API_CONN_SSID, "[WLAN SRV API] conn prof - ssid: %s")
TRC_MSG(SRV_WLAN_API_CONN_PWD, "[WLAN SRV API] conn prof - auth mode: %d, pwd: %s")
TRC_MSG(SRV_WLAN_API_DISCONN, "[WLAN SRV API] srv_wlan_disconnect()")
TRC_MSG(SRV_WLAN_API_INI_PROF, "[WLAN SRV API] srv_wlan_init_profile()")
TRC_MSG(SRV_WLAN_API_ADD_PROF, "[WLAN SRV API] srv_wlan_add_prof()")
TRC_MSG(SRV_WLAN_API_ADD_PROF_RET, "[WLAN SRV API] [WLAN Srv API] add prof returns: prof id: %d, result: %d")
TRC_MSG(SRV_WLAN_API_UPD_PROF, "[WLAN Srv API] srv_wlan_update_prof(), prof_id: %d")
TRC_MSG(SRV_WLAN_API_DEL_PROF, "[WLAN Srv API] srv_wlan_delete_prof(), prof_id: %d")
TRC_MSG(SRV_WLAN_API_QRY_PROF, "[WLAN Srv API] srv_wlan_query_prof(), prof_id: %d")
TRC_MSG(SRV_WLAN_API_QRY_PROF_LIST, "[WLAN SRV API] srv_wlan_query_prof_list()")
TRC_MSG(SRV_WLAN_API_QRY_PROF_LIST_RET, "[WLAN Srv API] qry_prof_list returns: num_ids: %d result: %d")
TRC_MSG(SRV_WLAN_API_GET_CONN_AP_BSSID, "[WLAN SRV API] srv_wlan_get_connected_ap_bssid()")
TRC_MSG(SRV_WLAN_API_GET_CONN_PROF_ID, "[WLAN SRV API] srv_wlan_get_connected_ap_prof_id()")
TRC_MSG(SRV_WLAN_API_GET_CONN_AP_RSSI, "[WLAN SRV API] srv_wlan_get_connected_ap_rssi()")
TRC_MSG(SRV_WLAN_API_GET_CONN_AP_INFO, "[WLAN SRV API] srv_wlan_get_connected_ap_info(), info_type:%d")
TRC_MSG(SRV_WLAN_API_CONN_AP_RSSI, "[WLAN SRV API] Get ap info ret: %d. Rssi of connected AP: %d")
TRC_MSG(SRV_WLAN_API_CONN_PROF_ID, "[WLAN SRV API] Get ap info ret: %d. Prof id connected: %d")
TRC_MSG(SRV_WLAN_API_GET_MAC_ADDR, "[WLAN SRV API] srv_wlan_get_mac_address()")
TRC_MSG(SRV_WLAN_API_SCAN, "[WLAN SRV API] srv_wlan_scan()")
TRC_MSG(SRV_WLAN_API_SCAN_JOB_ID, "[WLAN SRV API] scan job id: %d(0 failed)")
TRC_MSG(SRV_WLAN_API_SET_SPEC_SSID_LIST, "[WLAN SRV API] srv_wlan_set_scan_spec_ssid_list()")
TRC_MSG(SRV_WLAN_API_SPEC_SSID_LIST, "[WLAN SRV API] spec ssid list:")
TRC_MSG(SRV_WLAN_API_GET_SPEC_SSID_LIST, "[WLAN SRV API] srv_wlan_get_scan_spec_ssid_list()")
TRC_MSG(SRV_WLAN_API_SET_ROAMING_PARA, "[WLAN SRV API] srv_wlan_set_roaming_para(), enable_roaming: %d")
TRC_MSG(SRV_WLAN_API_GET_ROAMING_PARA, "[WLAN SRV API] srv_wlan_get_roaming_para()")
TRC_MSG(SRV_WLAN_API_GET_ROAMING_PARA_RET, "[WLAN Srv API] get_roaming_para returns: is_roaming %d, result: %d")
TRC_MSG(SRV_WLAN_API_SET_DWELL_TIME, "[WLAN SRV API] [WLAN Srv API] srv_wlan_set_scan_dwell_time(), dwell_time: %d")
TRC_MSG(SRV_WLAN_API_GET_DWELL_TIME, "[WLAN SRV API] [WLAN Srv API] srv_wlan_get_scan_dwell_time()")
TRC_MSG(SRV_WLAN_API_GET_DWELL_TIME_RET, "[WLAN Srv API] get_scan_dwell_time returns: dwell_time:%d, result: %d")
TRC_MSG(SRV_WLAN_API_SET_SCAN_PARAM, "[WLAN Srv API] srv_wlan_set_scan_param(), para_type: %d")
TRC_MSG(SRV_WLAN_API_GET_SCAN_PARAM, "[WLAN Srv API] srv_wlan_get_scan_param(), para_type: %d")
TRC_MSG(SRV_WLAN_API_GET_IP_INFO, "[WLAN SRV API] [WLAN Srv API] srv_wlan_get_ip_info()")
TRC_MSG(SRV_WLAN_API_SWITCH, "[WLAN Srv API] srv_wlan_switch(), switch to mode: %d")
TRC_MSG(SRV_WLAN_API_STATUS, "[WLAN Srv API] srv_wlan_status(), mode status: %d")
TRC_MSG(SRV_WLAN_API_SNIFFER_ON, "[WLAN Srv API] srv_wlan_sniffer_on()")
TRC_MSG(SRV_WLAN_API_SNIFFER_OFF, "[WLAN Srv API] srv_wlan_sniffer_off()")
TRC_MSG(SRV_WLAN_API_SET_RECONN_PROF_ID, "[WLAN Srv API] srv_wlan_set_reconn_prof_id(), prof_id: %d")
TRC_MSG(SRV_WLAN_API_GET_RECONN_PROF_ID, "[WLAN Srv API] srv_wlan_get_reconn_prof_id()")
TRC_MSG(SRV_WLAN_API_GET_RECONN_PROF_ID_RET, "[WLAN Srv API] get_reconn_prof_id returns: prof_id: %d, result: %d")
TRC_MSG(SRV_WLAN_API_REG_IP_AVL_NOTI, "[WLAN Srv API] srv_wlan_reg_ip_available_noti()")
TRC_MSG(SRV_WLAN_API_DEREG_IP_AVL_NOTI, "[WLAN Srv API] srv_wlan_dereg_ip_available_noti()")
TRC_MSG(SRV_WLAN_API_REG_PAS_DISCONN_NOTI, "[WLAN Srv API] srv_wlan_reg_passive_disconn_noti()")
TRC_MSG(SRV_WLAN_API_DEREG_PAS_DISCONN_NOTI, "[WLAN Srv API] srv_wlan_dereg_passive_disconn_noti()")
TRC_MSG(SRV_WLAN_API_REG_NOTI, "[WLAN Srv API] srv_wlan_reg_noti(), noti_type: %d")
TRC_MSG(SRV_WLAN_API_DEREG_NOTI, "[WLAN Srv API] srv_wlan_dereg_noti(), noti_type: %d")
TRC_MSG(SRV_WLAN_API_STA_STATUS, "[WLAN Srv API] srv_wlan_sta_status() current STA status: %d")

TRC_MSG(SRV_WLAN_UTIL_LOWEST_PRIORITY, "[WLAN Srv UTIL] lowest priority prof id: %d, riority: %d, result: %d")
TRC_MSG(SRV_WLAN_UTIL_IS_ACTION_LEGAL, "[WLAN Srv UTIL] current state : %d, is action legal : %d")
TRC_MSG(SRV_WLAN_UTIL_IP_UPD_HDL, "[WLAN Srv UTIL] srv_wlan_ipaddr_update_ind_hdlr()")
TRC_MSG(SRV_WLAN_UTIL_IP_REC_ERROR, "[WLAN Srv UTIL] Record error in g_srv_wlan_reg_noti")
TRC_MSG(SRV_WLAN_UTIL_CONN_CB, "[WLAN Srv UTIL] srv_wlan_connect_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_DISCONN_CB, "[WLAN Srv UTIL] srv_wlan_disconnect_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_INIT_CB, "[WLAN Srv UTIL] srv_wlan_init_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_DEINIT_CB, "[WLAN Srv UTIL] srv_wlan_deinit_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_SCAN_CB, "[WLAN Srv UTIL] srv_wlan_scan_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_ADD_JOB, "[WLAN Srv UTIL] Add job callback: %x, user_data: %x")
TRC_MSG(SRV_WLAN_UTIL_GET_JOB, "[WLAN Srv UTIL] Get job callback: %x, user_data: %x")
TRC_MSG(SRV_WLAN_UTIL_NEED_STA_ONOFF, "[WLAN Srv UTIL] Need close/open STA: %d")
TRC_MSG(SRV_WLAN_UTIL_INIT, "[WLAN Srv UTIL] srv_wlan_init()")
TRC_MSG(SRV_WLAN_UTIL_DEINIT, "[WLAN Srv UTIL] srv_wlan_deinit()")
TRC_MSG(SRV_WLAN_UTIL_SWITCH_END, "[WLAN Srv UTIL] srv_wlan_switch_end(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_DEINIT_SNIFFER_OFF, "[WLAN Srv UTIL] srv_wlan_deinit_sniffer_auto_kill(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_SNIFFER_ON_CB, "[WLAN Srv UTIL] srv_wlan_sniffer_on_callback()")
TRC_MSG(SRV_WLAN_UTIL_SNIFFER_ON_CB_DET, "[WLAN Srv UTIL] sniffer_on_cb type: %d(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_SNIFFER_ON_AP_ERROR, "[WLAN Srv UTIL] Error: sniffer noti empty ap info")
TRC_MSG(SRV_WLAN_UTIL_SNIFFER_OFF_CB, "[WLAN Srv UTIL] srv_wlan_sniffer_off_callback(), result: %d")
TRC_MSG(SRV_WLAN_UTIL_RET_NOTI_FAIL, "[WLAN Srv UTIL] Reg noti failed for no space")
TRC_MSG(SRV_WLAN_UTIL_DERET_NOTI_FAIL, "[WLAN Srv UTIL] Dereg failed for not found")

TRC_MSG(SRV_WLAN_TRC_PROF_SSID, "[WLAN Srv TRACE] ssid = %s")
TRC_MSG(SRV_WLAN_TRC_PROF_AUTH_MODE, "[WLAN Srv TRACE] auth_mode = %d")
TRC_MSG(SRV_WLAN_TRC_PROF_USERNAME, "[WLAN Srv TRACE] username = %s")
TRC_MSG(SRV_WLAN_TRC_PROF_PWD, "[WLAN Srv TRACE] password = %s")
TRC_MSG(SRV_WLAN_TRC_PROF_PASSPHRASE, "[WLAN Srv TRACE] passphrase = %s")
TRC_MSG(SRV_WLAN_TRC_PROF_WEP_KEY, "[WLAN Srv TRACE] wep_key = %s")
TRC_MSG(SRV_WLAN_TRC_AP_LIST_TOTAL, "[WLAN Srv TRACE] AP total number: %d")
TRC_MSG(SRV_WLAN_TRC_AP_LIST_SSID, "[WLAN Srv TRACE] ap_list[%d] ssid = %s")
TRC_MSG(SRV_WLAN_TRC_AP_LIST_AUTH_MODE, "[WLAN Srv TRACE] ap_list[%d] auth mode = %d")
TRC_MSG(SRV_WLAN_TRC_AP_NW_TYPE, "[WLAN Srv TRACE] ap_list[%d] Network type = %d")
TRC_MSG(SRV_WLAN_TRC_IP_TYPE, "[WLAN Srv TRACE] %s: ")
TRC_MSG(SRV_WLAN_TRC_IP_ADDR, "[WLAN Srv TRACE] %d.%d.%d.%d")