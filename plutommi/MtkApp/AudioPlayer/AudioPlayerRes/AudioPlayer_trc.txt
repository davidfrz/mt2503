[APP NAME] = AudioPlayer 
[SCOPE] = PLUTO 
[MODULE] = MOD_MMI_MEDIA_APP 

#start trace
TRC_MSG(MMI_AUDPLY_TRC_ENTY_MAIN,"[AUDPLY] entry main")
TRC_MSG(MMI_AUDPLY_TRC_LAUNCH,"[AUDPLY] is launch from bt or not, g_is_from_bt=%d")
TRC_MSG(MMI_AUDPLY_TRC_ENTRY_LOCAL_AUDPLY,"[AUDPLY] entry local audio player")
TRC_MSG(MMI_AUDPLY_TRC_SEEKING_EXIT_MAIN,"[AUDPLY] seeking exit main, longpressed=%d")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_TIME,"[AUDPLY] in main screen update time, new=%d, old=%d, diff=%d")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_DUR_BY_CACHE,"[AUDPLY] update duration by cache: %d!!")
TRC_MSG(MMI_AUDPLY_TRC_FAST_FORWARD_NOT_SEEKABLE,"[AUDPLY] fast forward not seekable!!")
TRC_MSG(MMI_AUDPLY_TRC_FAST_FORWARD_TOO_FAST,"[AUDPLY] fast forward too fast")
TRC_MSG(MMI_AUDPLY_TRC_FAST_FORWARD,"[AUDPLY] fast forward, time=%d, cached dur=%d")
TRC_MSG(MMI_AUDPLY_TRC_REWIND_NOT_SEEKABLE,"[AUDPLY] rewind not seekable!!")
TRC_MSG(MMI_AUDPLY_TRC_REWIND,"[AUDPLY] rewind, time=%d")
TRC_MSG(MMI_AUDPLY_TRC_PROGRESS_SPEED,"[AUDPLY] progress speed=%d secs")
TRC_MSG(MMI_AUDPLY_TRC_ENTRY_REFRESH_CACHE,"[AUDPLY] refresh cache, check_name=%d")
TRC_MSG(MMI_AUDPLY_TRC_REFRESH_CACHE_DONE,"[AUDPLY] refresh cache done")
TRC_MSG(MMI_AUDPLY_TRC_REWIND_STOP,"[AUDPLY] rewind stop")
TRC_MSG(MMI_AUDPLY_TRC_REWIND_START,"[AUDPLY] rewind start")
TRC_MSG(MMI_AUDPLY_TRC_FAST_FORWARD_STOP,"[AUDPLY] fast forward stop")
TRC_MSG(MMI_AUDPLY_TRC_FAST_FORWARD_START,"[AUDPLY] fast forward start")
TRC_MSG(MMI_AUDPLY_TRC_TOUCH_PROGRESS_HDLR,"[AUDPLY] touch progress hdlr")
TRC_MSG(MMI_AUDPLY_TRC_TOUCH_NOT_SEEKABLE,"[AUDPLY] touch not seekable!!")
TRC_MSG(MMI_AUDPLY_TRC_TOUCH_PROGRESS_PEN_UP,"[AUDPLY] touch progress pen up, longpressed=%d")
TRC_MSG(MMI_AUDPLY_TRC_ENTRY_DETAIL,"[AUDPLY] entry detail")
TRC_MSG(MMI_AUDPLY_TRC_ENTRY_DETAIL_FAIL,"[AUDPLY] entry detail, get_ctrl_buffer() failed!")
TRC_MSG(MMI_AUDPLY_TRC_AVRCP_HDLR,"[AUDPLY] entry AVRCP command hdlr, cmd=%d, key events=%d")
TRC_MSG(MMI_AUDPLY_TRC_DRM_VALIDATE_RIGHT,"[AUDPLY] drm validate right, result=%d")
TRC_MSG(MMI_AUDPLY_TRC_BUTTON_CANCELED,"[AUDPLY] button canceled")
TRC_MSG(MMI_AUDPLY_TRC_STOP_BUTTON_DOWN,"[AUDPLY] press stop button down")
TRC_MSG(MMI_AUDPLY_TRC_STOP_BUTTON_UP,"[AUDPLY] press stop button up, state=%d")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_BUTTON_DOWN,"[AUDPLY] press play button down, state=%d, wait_next=%d")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_BUTTON_UP,"[AUDPLY] press play button up, state=%d, wait_next=%d, non_play=%d ")
TRC_MSG(MMI_AUDPLY_TRC_PREV_BUTTON_DOWN,"[AUDPLY] press prev button down")
TRC_MSG(MMI_AUDPLY_TRC_PREV_BUTTON_UP,"[AUDPLY] press prev button up, state=%d, longpressed=%d")
TRC_MSG(MMI_AUDPLY_TRC_NEXT_BUTTON_DOWN,"[AUDPLY] press next button down")
TRC_MSG(MMI_AUDPLY_TRC_NEXT_BUTTON_UP,"[AUDPLY] press next button up, state=%d, longpressed=%d")
TRC_MSG(MMI_AUDPLY_TRC_LONGPRESSED_BUTTON_UP,"[AUDPLY] longpressed button up, seekable=%d, need_to_buile_cache =%d, state_before=%d")
TRC_MSG(MMI_AUDPLY_TRC_NEXT_BUTTON_LONGPRESS,"[AUDPLY] next button longpressed, state=%d, wiat_next=%d, identical=%d")
TRC_MSG(MMI_AUDPLY_TRC_PREV_BUTTON_LONGPRESS,"[AUDPLY] prev button longpressed, state=%d, wiat_next=%d, identical=%d")
TRC_MSG(MMI_AUDPLY_TRC_BUTTON_CHECK_FAIL,"[AUDPLY] button check fail!!")
TRC_MSG(MMI_AUDPLY_TRC_SYNC_BT_OUTPUT,"[AUDPLY] sync bt output")
TRC_MSG(MMI_AUDPLY_TRC_PLAY,"[AUDPLY] mmi_audply_do_play_action, result=%d, error_class=%d")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_ACTION,"[AUDPLY] mmi_audply_do_portion_play_action_without_handle_result")
TRC_MSG(MMI_AUDPLY_TRC_STOP_ACTION,"[AUDPLY] mmi_audply_do_stop_action")
TRC_MSG(MMI_AUDPLY_TRC_STOP_PLAYING,"[AUDPLY] mmi_audply_stop_playing, state=%d")
TRC_MSG(MMI_AUDPLY_TRC_SEEK_STOP_PLAYING,"[AUDPLY] mmi_audply_seek_stop_playing")
TRC_MSG(MMI_AUDPLY_TRC_BACKGOURND_CALLBACK,"[AUDPLY] background callback, replay=%d, longpress=%d, wait_next=%d, result=%d")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_CALLBACK,"[AUDPLY] play callback, state=%d, result=%d")
TRC_MSG(MMI_AUDPLY_TRC_BUILD_CACHE_FAIL_CALLBACK,"[AUDPLY] build cache fail callback, state=%d")
TRC_MSG(MMI_AUDPLY_TRC_HFP_VOL_SYNC,"[AUDPLY] handfree_volume_sync_callback, vol=%d, mute=%d, state=%d, screen=%d")
TRC_MSG(MMI_AUDPLY_TRC_BT_CALLBACK,"[AUDPLY] bt open callback,result=%d, state=%d, to_resume=%d")
TRC_MSG(MMI_AUDPLY_TRC_SWITCH_BT_OUTPUT,"[AUDPLY] mmi_audply_switch_bt_output, state=%d")
TRC_MSG(MMI_AUDPLY_TRC_AUTO_UPDATE_DUR_FAIL,"[AUDPLY] auto update dur FAIL, file name not identical")
TRC_MSG(MMI_AUDPLY_TRC_AUTO_UPDATE_DUR,"[AUDPLY] auto update dur:%d")
TRC_MSG(MMI_AUDPLY_TRC_COMPLETED,"[AUDPLY] mmi_audply_play_completed")
TRC_MSG(MMI_AUDPLY_TRC_STOPPED,"[AUDPLY] mmi_audply_stopped, clear_bg_handler=%d")
TRC_MSG(MMI_AUDPLY_TRC_PLAYED,"[AUDPLY] mmi_audply_played")
TRC_MSG(MMI_AUDPLY_TRC_PARSE_LYRICS,"[AUDPLY] parse lyrics: %d")
TRC_MSG(MMI_AUDPLY_TRC_CARD_PLUG_IN,"[AUDPLY] card plugged in")
TRC_MSG(MMI_AUDPLY_TRC_CARD_PLUG_OUT,"[AUDPLY] card plugged out")
TRC_MSG(MMI_AUDPLY_TRC_ERROR_STR,"[AUDPLY] error string, mdi_result=%d")
TRC_MSG(MMI_AUDPLY_TRC_DELAY_PLAY,"[AUDPLY] mmi_audply_delay_play, state=%d")
TRC_MSG(MMI_AUDPLY_TRC_FOUR_VALS,"[AUDPLY] val_1=%d, val_2=%d, val_3=%d, val_4=%d")
TRC_MSG(MMI_AUDPLY_TRC_LCD_SLEEP_IN_HANDLER,"[AUDPLY] mmi_audply_lcd_sleep_in_handler event->evt_id = [%d] g_audply.in_audio_player = [%d] at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_SINGLE_PLAY_SCREEN_LOCKER_CALLBACK_HANDLER,"[AUDPLY] mmi_audply_single_play_screen_locker_callback_hdlr event->evt_id = [%d] single_play_state = [%d] at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PROGRESS_PEN_MOVE,"[AUDPLY] progress pen move, seekable=%d")
TRC_MSG(MMI_AUDPLY_TRC_RRINT_LYRICS,"[AUDPLY] print lyrics, time=%d")
TRC_MSG(MMI_AUDPLY_TRC_SPECTRUM_DISPLAY_START,"[AUDPLY] spectrum display start")
TRC_MSG(MMI_AUDPLY_TRC_SPECTRUM_DISPLAY_STOP,"[AUDPLY] spectrum display stop")
TRC_MSG(MMI_AUDPLY_TRC_APPLY_PICKED_FILE,"[AUDPLY] apply picked file, pick_index=[%d],total=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_HDLR,"[AUDPLY] update list hdlr, old_path=%d, new_path=%d, action=%d, is_folder=%d")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_1,"[AUDPLY] [Auto update list] current path's driver id is different with present list!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_2,"[AUDPLY] [Auto update list] no list file exist!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_3,"[AUDPLY] [Auto update list] no need to modify list!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_4,"[AUDPLY] [Auto update list] delete list data file and reload list!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_5,"[AUDPLY] [Auto update list] only need refresh list!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_6,"[AUDPLY] [Auto update list] no need to modify list! this is impossible!!!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_7,"[AUDPLY] [Auto update list] delete list data file and reload list!")
TRC_MSG(MMI_AUDPLY_TRC_UPDATE_LIST_WARNING_8,"[AUDPLY] [Auto update list] can not create temp file!!!")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_DO_PICK,"[AUDPLY] mmi_audply_playlist_do_pick")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_NEED_GEN,"[AUDPLY] mmi_audply_need_generate_playlist")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_SEARCH_CONTINUE_REQ,"[AUDPLY][UPDATE]mmi_audply_playlist_search_continue_req: context = [%d] at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_UPDATE_START,"[AUDPLY][UPDATE] update_start at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_GENERATE_SEARCH,"[AUDPLY][UPDATE] mmi_audply_playlist_generate_search at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_GENERATE_SEARCH_FIND,"[AUDPLY][UPDATE] mmi_audply_playlist_generate_search find [%d] at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_GENERATE_WAIT_SCREEN,"[AUDPLY][UPDATE] mmi_audply_playlist_generate_wait_screen INACTIVE at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_UPDATE_FINISH,"[AUDPLY][MMI] update_finish at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_UPDATE_FINISH_ONE,"[AUDPLY][MMI] update_finish one at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAYLIST_SET_START,"[AUDPLY] mmi_audply_playlist_set_start : index=[%d],file_index=[%d],file_num=[%d],ret=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_SETTINGS_READ_SETTINGS,"[AUDPLY]mmi_audply_read_settings: g_audply.preferred_list = [%d] at line = [%d]")
TRC_MSG(MMI_AUDPLY_TRC_IS_READY_TO_PLAY,"[AUDPLY] mmi_audply_is_ready_to_play: init = %d")
TRC_MSG(MMI_AUDPLY_TRC_WIDGET_GET_VALUE,"[AUDPLY] widget_get_value type:%d, init:%d, state:%d")
TRC_MSG(MMI_AUDPLY_TRC_WIDGET_BUTTON_ACTION,"[AUDPLY] button_action button:%d, keyType:%d, init:%d, state:%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_SEARCH_INTERNAL,"[AUDPLY][WALK] mmi_audply_walk_search_internal phase=%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_SEARCH_ERROR,"[AUDPLY][WALK] mmi_audply_walk_search_error_hdlr error_code=%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_GET_NEXT,"[AUDPLY][WALK] mmi_audply_walk_get_next is_searching=%d,cache_state=%d,auto_walk_done=%d,is_in_confirm_popup=%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_GET_NEXT_RESULT,"[AUDPLY][WALK] stack_index=%d,fs_index=%d-%d-%d-%d-%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_SEARCH,"[AUDPLY][WALK] mmi_audply_walk_search test=%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_ADD_CACHE,"[AUDPLY][WALK] mmi_audply_walk_add_cache cur_fs_index=%d,footer=%d,header=%d,cache_index=%d,state=%d")
TRC_MSG(MMI_AUDPLY_TRC_WALK_PLAY_FILE,"[AUDPLY][WALK] mmi_audply_btbox_play_action handle=%d, play_state=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_WALK_PLAY_RESULT,"[AUDPLY][WALK] mmi_audply_btbox_play_action result=%d play_time=%d")
TRC_MSG(MMI_AUDPLY_TRC_APPLY_GET_PATH_FOR_PLAYER,"[AUDPLY] get path for player, play_style=[%d],walk_state=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_INC_VOLUME,"[AUDPLY] inc volume, volume=[%d],play_state=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_DEC_VOLUME,"[AUDPLY] dec volume, volume=[%d],play_state=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_BTBOX_LAUNCH,"[AUDPLY] Launch Audio Player")
TRC_MSG(MMI_AUDPLY_TRC_MEMORY_CARD_ERROR,"[AUDPLY] Launch Audio Player Memory card not insert")
TRC_MSG(MMI_AUDPLY_TRC_NO_MORE_FILE,"[AUDPLY] Launch Audio Player no audio files")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_CALLBACK_HDLR,"[AUDPLY] Play Callback play_state=[%d], result=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_COMPLETED,"[AUDPLY] Play Completed ret=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_EVENT_HANDLE,"[AUDPLY] Audio Player Event handler")
TRC_MSG(MMI_AUDPLY_TRC_EVENT_HANDLE_SWITCH_AUDPLY,"[AUDPLY] Switch to audio player")
TRC_MSG(MMI_AUDPLY_TRC_PAUSE_ACTION,"[AUDPLY] Pause Action play_state=[%d],wait_next=[%d],is_support_pause=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_PAUSE_ACTION,"[AUDPLY] Play by event play_state=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_PLAY_KARAOKE_SWITCH,"[AUDPLY] Karaoke switch by event kacaroke_timer_enable=[%d], is_orignal_enable=[%d],is_kacaroke_enable=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_KARAOKE_CB_RESULT,"[AUDPLY] Karaoke playback active_group=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_KARAOKE_GET_PLAY_TIME,"[AUDPLY] Get Play time play_time=[%d]")
TRC_MSG(MMI_AUDPLY_TRC_PAUSE_RESULT,"[AUDPLY] Pause result result=[%d]")
