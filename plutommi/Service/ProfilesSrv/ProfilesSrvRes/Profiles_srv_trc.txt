[APP NAME] = Profiles Srv
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(MMI_PROF_SRV_TRC_TRANSFORM_ID,"[Prof Srv] transform id: %d")
TRC_MSG(MMI_PROF_SRV_TRC_READ_NVRAM,"[Prof Srv] read from nvram: %d")
TRC_MSG(MMI_PROF_SRV_TRC_WRITE_NVRAM,"[Prof Srv] write to nvram")
TRC_MSG(MMI_PROF_SRV_TRC_AT_CMD,"[Prof Srv] AT command: %d")
TRC_MSG(MMI_PROF_SRV_TRC_INIT,"[Prof Srv] Init")
TRC_MSG(MMI_PROF_SRV_TRC_RESET_DEFAULT,"[Prof Srv] Reset to default values")
TRC_MSG(MMI_PROF_SRV_TRC_SETTING_AVAILABLE,"[Prof Srv] is setting available, enum:%d, support:%d")
TRC_MSG(MMI_PROF_SRV_TRC_GET_RING_VOL,"[Prof Srv] get ring vol: %d")
TRC_MSG(MMI_PROF_SRV_TRC_RESULT,"[Prof Srv] result: %d")
TRC_MSG(MMI_PROF_SRV_TRC_GET_CUR_VALUE_IN,"[Prof Srv] get current value in: setting:%d")
TRC_MSG(MMI_PROF_SRV_TRC_GET_CUR_VALUE_OUT,"[Prof Srv] get current value out: value:%d")
TRC_MSG(MMI_PROF_SRV_TRC_SET_CUR_VALUE_IN,"[Prof Srv] set current value in: setting:%d, cur_prof:%d")
TRC_MSG(MMI_PROF_SRV_TRC_SET_CUR_VALUE_OUT,"[Prof Srv] set current value out: value:%d")
TRC_MSG(MMI_PROF_SRV_TRC_CHECK_MIDI_SIZE,"[Prof Srv] check midi size: %d")
TRC_MSG(MMI_PROF_SRV_TRC_SET_EXT_MELODY,"[Prof Srv] set external melody: slot:%d")
TRC_MSG(MMI_PROF_SRV_TRC_SET_CUR_TONE_EXT_MELODY,"[Prof Srv] set current profle tone external melody: setting:%d")
TRC_MSG(MMI_PROF_SRV_TRC_ACTIVATE_PROFILE,"[Prof Srv] activate profile: profile:%d")
TRC_MSG(MMI_PROF_SRV_TRC_ACTIVATE_PROFILE_EXTERNAL,"[Prof Srv] activate profile by external module: profile:%d")
TRC_MSG(MMI_PROF_SRV_TRC_DEACTIVATE_PROFILE_EXTERNAL,"[Prof Srv] deactivate profile by external module: profile:%d")
TRC_MSG(MMI_PROF_SRV_TRC_GET_ACTIVE_PROFILE,"[Prof Srv] active profile: %d")
TRC_MSG(MMI_PROF_SRV_TRC_CHECK_BEEP,"[Prof Srv] check beep: %d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_FAIL_RECOVER,"[Prof Srv] fail recover: tone_type: %d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_CALLBACK,"[Prof Srv] play callback: %d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_AUD_ID_IN,"[Prof Srv] srv_prof_play_audio_id in: aud_id:%d, vol:%d, path:%d, style:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_AUD_ID_OUT,"[Prof Srv] srv_prof_play_audio_id out: result:%d, type:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE,"[Prof Srv] srv_prof_play_tone: result:%d, in_call:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_CHECK,"[Prof Srv] srv_prof_play_tone_check_setting: result:%d, in_call:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_ID,"[Prof Srv] srv_prof_play_tone_with_id: result:%d, tone_type:%d, audio_id:%d")    
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_DATA,"[Prof Srv] srv_prof_play_tone_with_audio_data: result:%d, tone_type:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_FILE,"[Prof Srv] srv_prof_play_tone_with_filepath: result:%d, tone_type:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_TEXT,"[Prof Srv] srv_prof_play_tone_with_text: result:%d, tone_type:%d")
TRC_MSG(MMI_PROF_SRV_TRC_PLAY_TONE_STRUCT,"[Prof Srv] srv_prof_play_tone_with_full_struct: tone_type:%d, aud_type:%d, aud_id:%d, play_style:%d, vol:%d, aud_path:%d")
TRC_MSG(MMI_PROF_SRV_TRC_STOP_TONE,"[Prof Srv] srv_prof_stop_tone: tone_type:%d, cur_tone:%d, cur_DTMF_tone:%d")
TRC_MSG(MMI_PROF_SRV_TRC_IS_TONE_PLAYING,"[Prof Srv] is_tone_playing: tone_type:%d, result:%d")
TRC_MSG(MMI_PROF_SRV_TRC_RESET_TONE_WITH_ID,"[Prof Srv] reset_tone_with_audio_id: setting:%d, audio_id:%d")
TRC_MSG(MMI_PROF_SRV_TRC_RESET_DELETED_ID,"[Prof Srv] reset_deleted_audio_id: audio_id:%d")
TRC_MSG(MMI_PROF_SRV_TRC_DELETE_FILE_UPDATE,"[Prof Srv] delete_file_update_hdlr: del_type:%d, valid:%d")
TRC_MSG(MMI_PROF_SRV_TRC_IS_PROFILE_ACTIVATED,"[Prof Srv] is_profile_activated: profile:%d, cur_prof:%d")
TRC_MSG(MMI_PROF_SRV_TRC_IF_CAN_VIBRATE,"[Prof Srv] if_can_vibrate: alert_type:%d, result:%d")
TRC_MSG(MMI_PROF_SRV_TRC_IF_CAN_RING,"[Prof Srv] if_can_ring: alert_type:%d, result:%d")
TRC_MSG(MMI_PROF_SRV_TRC_EARPHONE_IN,"[Prof Srv] earphone_plugin_hdlr")
TRC_MSG(MMI_PROF_SRV_TRC_EARPHONE_OUT,"[Prof Srv] earphone_plugout_hdlr")
TRC_MSG(MMI_PROF_SRV_TRC_BT_CONNECT,"[Prof Srv] bt_connected_hdlr, connect: %d, callback: %d")
TRC_MSG(MMI_PROF_SRV_TRC_BT_DISCONNECT,"[Prof Srv] bt_disconnected_hdlr, connect: %d, callback: %d")
TRC_MSG(MMI_PROF_SRV_TRC_HFP_VOL,"[Prof Srv] handfree_volume_sync_hdlr, vol: %d")