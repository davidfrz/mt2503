/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *   mmi_rp_app_mre_def.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   Resource populate function generated by XML resgen
 *
 * Author:
 * -------
 * -------
 *
 *******************************************************************************/


#ifndef _MMI_RP_APP_MRE_DEF_H
#define _MMI_RP_APP_MRE_DEF_H




/******************** String resource IDs - begin ********************/
typedef enum
{
    STR_ID_DLS_QUERY = 4802 + 1, /* BASE_ID + 1 */
    STR_DI_DLS_NETWORK_PROBLEM,
    STR_DI_DLS_FAIL_MAY_DISK_FULL,
    STR_ID_DLS_NO_UPDATE,
    STR_ID_DLS_DOWNLOADING,
    STR_ID_DLS_DOWNLOADED,
    STR_ID_DLS_HOST_NOT_FOUND,
    STR_ID_DLS_PIPE_CLOSED,
    STR_ID_DLS_ERR_PATH,
    STR_ID_DLS_INSTALL_SECC,
    STR_ID_DLS_INSTALLING,
    STR_ID_DLS_INSTALL_FAIL,
    STR_ID_DLS_NA_NAME,
    STR_ID_DLS_NA_SLK,
    STR_ID_APP_MRE,
    STR_MRE_TITLE,
    STR_MRE_NETWORK_CMWAP,
    STR_MRE_NETWORK_CMNET,
    STR_MRE_NETWORK_CMWAP_ONLY,
    STR_MRE_NETWORK_CMNET_ONLY,
    STR_MRE_NETWORK_CMWAP_DIS_WLAN,
    STR_MRE_NETWORK_CMNET_DIS_WLAN,
    STR_MRE_NETWORK_CMWAP_ONLY_DIS_WLAN,
    STR_MRE_NETWORK_CMNET_ONLY_DIS_WLAN,
    STR_MRE_NETWORK_WIFI,
    STR_MRE_APP0,
    STR_MRE_APP1,
    STR_MRE_APP2,
    STR_MRE_APP3,
    STR_MRE_APP4,
    STR_MRE_REACH_MAX_NUM,
    STR_MRE_POPUP_CONFLICTS,
    STR_MRE_POPUP_FORCE_FREE,
    STR_MRE_UPDATE_TITLE,
    STR_MRE_UPDATE_QUERY,
    STR_MRE_UPDATE_UPDATING,
    STR_MRE_UPDATE_SUCCESS,
    STR_MRE_UPDATE_FAIL,
    MMI_RP_APP_MRE_STR_MAX
}mmi_rp_app_mre_str_enum;
/******************** String resource IDs - finish ********************/


/******************** Screen resource IDs - begin ********************/
typedef enum
{
    SCR_ID_DLS_WAIT = 4802 + 1, /* BASE_ID + 1 */
    SCR_ID_DLS_QUERY,
    GRP_ID_MRE_CORE,
    GRP_ID_MRE0,
    GRP_ID_MRE1,
    GRP_ID_MRE2,
    GRP_ID_MRE3,
    GRP_ID_MRE4,
    GRP_ID_MRE5,
    GRP_ID_MRE6,
    GRP_ID_MRE7,
    GRP_ID_MRE8,
    GRP_ID_MRE9,
    MRE_SCREEN_ID0,
    MRE_SCREEN_ID1,
    MRE_SCREEN_ID2,
    MRE_SCREEN_ID3,
    MRE_SCREEN_ID4,
    MRE_SCREEN_ID5,
    MRE_SCREEN_ID6,
    MRE_SCREEN_ID7,
    MRE_SCREEN_ID8,
    MRE_SCREEN_ID9,
    MRE_INPUT_SCREEN_ID,
    SCR_ID_MRE_UPDATE_QUERY,
    SCR_ID_MRE_UPDATE_WAIT,
    SCR_ID_MRE_UPDATE_RESULT,
    MMI_RP_APP_MRE_SCR_MAX
}mmi_rp_app_mre_scr_enum;
/******************** Screen resource IDs - finish ********************/


/******************** Timer resource IDs - begin ********************/
typedef enum
{
    MRE_SYS_TIMER_0 = 4802 + 1, /* BASE_ID + 1 */
    MRE_SYS_TIMER_1,
    MRE_SYS_TIMER_2,
    MRE_SYS_TIMER_3,
    MRE_SYS_TIMER_4,
    MRE_SYS_TIMER_5,
    MRE_SYS_TIMER_6,
    MRE_SYS_TIMER_7,
    MRE_SYS_TIMER_8,
    MRE_SYS_TIMER_9,
    MRE_SYS_TIMER_10,
    MRE_SYS_TIMER_11,
    MRE_SYS_TIMER_12,
    MRE_SYS_TIMER_13,
    MRE_SYS_TIMER_14,
    MRE_SYS_TIMER_15,
    MRE_SYS_TIMER_16,
    MRE_SYS_TIMER_17,
    MRE_SYS_TIMER_18,
    MRE_SYS_TIMER_19,
    MRE_SYS_TIMER_20,
    MRE_SYS_TIMER_21,
    MRE_SYS_TIMER_22,
    MRE_SYS_TIMER_23,
    MRE_SYS_TIMER_24,
    MRE_SYS_TIMER_25,
    MRE_SYS_TIMER_26,
    MRE_SYS_TIMER_27,
    MRE_SYS_TIMER_28,
    MRE_SYS_TIMER_29,
    MRE_SYS_TIMER_30,
    MRE_SYS_TIMER_31,
    MRE_SYS_TIMER_32,
    MRE_SYS_TIMER_33,
    MRE_SYS_TIMER_34,
    MRE_SYS_TIMER_35,
    MRE_SYS_TIMER_36,
    MRE_SYS_TIMER_37,
    MRE_SYS_TIMER_38,
    MRE_SYS_TIMER_39,
    MRE_SYS_TIMER_40,
    MRE_SYS_TIMER_41,
    MRE_SYS_TIMER_42,
    MRE_SYS_TIMER_43,
    MRE_SYS_TIMER_44,
    MRE_SYS_TIMER_45,
    MRE_SYS_TIMER_46,
    MRE_SYS_TIMER_47,
    MRE_SYS_TIMER_48,
    MRE_SYS_TIMER_49,
    MRE_SYS_TIMER_50,
    MRE_SYS_TIMER_51,
    MRE_SYS_TIMER_52,
    MRE_SYS_TIMER_53,
    MRE_SYS_TIMER_54,
    MRE_SYS_TIMER_55,
    MRE_SYS_TIMER_56,
    MRE_SYS_TIMER_57,
    MRE_SYS_TIMER_58,
    MRE_SYS_TIMER_59,
    MRE_SYS_TIMER_60,
    MRE_SYS_TIMER_61,
    MRE_SYS_TIMER_62,
    MRE_SYS_TIMER_63,
    MRE_SYS_TIMER_64,
    MRE_SYS_TIMER_65,
    MRE_SYS_TIMER_66,
    MRE_SYS_TIMER_67,
    MRE_SYS_TIMER_68,
    MRE_SYS_TIMER_69,
    MRE_SYS_TIMER_70,
    MRE_SYS_TIMER_71,
    MRE_SYS_TIMER_72,
    MRE_SYS_TIMER_73,
    MRE_SYS_TIMER_74,
    MRE_SYS_TIMER_75,
    MRE_SYS_TIMER_76,
    MRE_SYS_TIMER_77,
    MRE_SYS_TIMER_78,
    MRE_SYS_TIMER_79,
    MRE_SYS_TIMER_80,
    MRE_SYS_TIMER_81,
    MRE_SYS_TIMER_82,
    MRE_SYS_TIMER_83,
    MRE_SYS_TIMER_84,
    MRE_SYS_TIMER_85,
    MRE_SYS_TIMER_86,
    MRE_SYS_TIMER_87,
    MRE_SYS_TIMER_88,
    MRE_SYS_TIMER_89,
    MRE_SYS_TIMER_90,
    MRE_SYS_TIMER_91,
    MRE_SYS_TIMER_92,
    MRE_SYS_TIMER_93,
    MRE_SYS_TIMER_94,
    MRE_SYS_TIMER_95,
    MRE_SYS_TIMER_96,
    MRE_SYS_TIMER_97,
    MRE_SYS_TIMER_98,
    MRE_SYS_TIMER_99,
    MMI_RP_APP_MRE_TIMER_MAX
}mmi_rp_app_mre_timer_enum;
/******************** Timer resource IDs - finish ********************/


/******************** Audio resource IDs - begin ********************/
typedef enum
{
    AUD_ID_MRE_FEEDBACK_SLIENT = 4802 + 1, /* BASE_ID + 1 */
    MMI_RP_APP_MRE_AUD_MAX
}mmi_rp_app_mre_aud_enum;
/******************** Audio resource IDs - finish ********************/
/******************** Template resource IDs - Begin ********************/
/******************** Template resource IDs - End ********************/


/******************** MMI Cache IDs - Begin ********************/
typedef enum
{
    NVRAM_MRE_SRV_DA_SIM1 = 4802 + 1, /* BASE_ID + 1 */        /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM1_PX,                                   /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM2,                                      /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM2_PX,                                   /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM3,                                      /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM3_PX,                                   /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM4,                                      /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_SIM4_PX,                                   /*       DOUBLE */ 
    NVRAM_MRE_SRV_DA_IS_WIFI_ONLY,                              /*         BYTE */ 
    MMI_RP_APP_MRE_MMI_CACHE_MAX
} mmi_rp_app_mre_mmi_cache_enum;
/******************** MMI Cache IDs - End ********************/


/******************** Image resource IDs - begin ********************/
typedef enum
{
    IMAGE_MRE_ICON = 4802 + 1, /* BASE_ID + 1 */
    IMAGE_MRE_LARGE_ICON,
    IMAGE_MRE_SMALL_ICON,
    IMAGE_MRE_EDITOR_TITLE,
    IMG_ID_AM_APP_MRE_DEFAULT,
    MMI_RP_APP_MRE_IMG_MAX
}mmi_rp_app_mre_img_enum;
/******************** Image resource IDs - finish ********************/


#endif /* _MMI_RP_APP_MRE_DEF_H */
