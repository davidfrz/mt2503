[APP NAME] = Media player
[SCOPE] = PLUTO
[MODULE] = MOD_MMI_MEDIA_APP

#start trace
#Common
TRC_MSG(MMI_TRC_MEDPLY_IS_BUTTON_DISABLED, "[MEDPLY][C] is_button_disabled: button:%d, state:%d, selected_button:%d ")
TRC_MSG(MMI_TRC_MEDPLY_IS_PLAY_ACTIVATED, "[MEDPLY][C] is_play_activated: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_IF_SHOW_IDLE_STRING, "[MEDPLY][C] if_show_idle_string: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_IS_KURO_FILE, "[MEDPLY][C] is_kuro_file:%d")
TRC_MSG(MMI_TRC_MEDPLY_IS_SINGLE_ACTIVATED, "[MEDPLY][C] is_single_player_activated: %d")
TRC_MSG(MMI_TRC_MEDPLY_MASS_STORAGE_MODE, "[MEDPLY][C] in_mass_storage_mode")
TRC_MSG(MMI_TRC_MEDPLY_DELETE_HISTORY, "[MEDPLY][CTL] delete_history_hdlr: state:%d, continue:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_UPDATE_MAIN, "[MEDPLY][CTL] update_main: state:%d, type:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_EXIT_MAIN, "[MEDPLY][CTL] exit_main: state:%d, pop_up:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_ENTRY_MAIN, "[MEDPLY][CTL] entry_main, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_ENTRY_MAIN_MENU_OPTION, "[MEDPLY][CTL] entry_main_menu_option")
TRC_MSG(MMI_TRC_MEDPLY_ENTRY_READ_SETTINGS, "[MEDPLY][CTL] read_settings: vol:%d, mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_DELETE_SINGLE_SCREEN, "[MEDPLY][CTL] delete_single_player_screen")
TRC_MSG(MMI_TRC_MEDPLY_APP_EXIT, "[MEDPLY][CTL] app_exit")
TRC_MSG(MMI_TRC_MEDPLY_APP_ENTRY, "[MEDPLY][CTL] app_entry")
TRC_MSG(MMI_TRC_MEDPLY_ASM_STOP_CALLBACK, "[MEDPLY][CTL] asm_stop_callback")
TRC_MSG(MMI_TRC_MEDPLY_ASM_SUCCESS_CALLBACK, "[MEDPLY][CTL] asm_success_callback")
TRC_MSG(MMI_TRC_MEDPLY_APP_PRE_ENTRY, "[MEDPLY][CTL] app_pre_entry")
TRC_MSG(MMI_TRC_MEDPLY_ENTRY_MAIN_MENU, "[MEDPLY][CTL] entry_main_menu")
TRC_MSG(MMI_TRC_MEDPLY_INIT_APP, "[MEDPLY][CTL] init_app")
TRC_MSG(MMI_TRC_MEDPLY_FOUR_VALS, "[MEDPLY][CTL] val_1=%d, val_2=%d, val_3=%d, val_4=%d")
#Controller
TRC_MSG(MMI_TRC_MEDPLY_CTL_SET_CONTINUE_FLAG, "[MEDPLY][CTL] set_continue_flag: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SET_STOP_FLAG, "[MEDPLY][CTL] set_self_stop_flag: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SET_POPUP_FLAG, "[MEDPLY][CTL] set_pop_up_flag: main_screen:%d ")
TRC_MSG(MMI_TRC_MEDPLY_CTL_WAIT_NEXT_TIME_OUT, "[MEDPLY][CTL] wait_next_time_out: state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SHOW_HIDE_ICON, "[MEDPLY][CTL] show_hide_staus_icon: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_UPDATE_ICON, "[MEDPLY][CTL] update_staus_icon: state: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_UPDATE_TIME, "[MEDPLY][CTL] updaet_current_time: state:%d, cur_time:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_UPDATE_DUR_BY_CACHE, "[MEDPLY][CTL] updaet_dur_by_cache: %d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BUILD_CACHE_PROCESS, "[MEDPLY][CTL] get_build_cache_process: process:%d, result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_REFRESH_CACHE, "[MEDPLY][CTL] refresh_cache")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_STATE, "[MEDPLY][CTL] enter_audio_states: cur_state:%d, entering_state:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_TIMEOUT, "[MEDPLY][CTL] enter_pure_audio_ready time out: cur_state:%d, in_main_screen:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_STATE, "[MEDPLY][CTL] enter_video_states: cur_state:%d, entering_state:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_STATE, "[MEDPLY][CTL] enter_stream_states: cur_state:%d, entering_state:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_CORE_STATE, "[MEDPLY][CTL] enter_core_states: cur_state:%d, entering_state:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_RELEASE_MEDIA_BASED, "[MEDPLY][CTL] release media based key: media_based_button_down:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_CLEAR_TIME, "[MEDPLY][CTL] clear_play_seconds")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SET_TIME, "[MEDPLY][CTL] set_curret_time: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BG_PREPARE, "[MEDPLY][CTL] bg_prepare: state:%d, type:%d, main_screen:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STOP_DOWN, "[MEDPLY][CTL] press_stop_button_down: selected_button:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STOP_UP, "[MEDPLY][CTL] press_stop_button_up: selected_button:%d, down:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_DOWN, "[MEDPLY][CTL] press_play_button_down: selected_button:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_UP, "[MEDPLY][CTL] press_play_button_up: selected_button:%d, down:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PREV_DOWN, "[MEDPLY][CTL] press_prev_button_down: selected_button:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PREV_UP, "[MEDPLY][CTL] press_prev_button_up: selected_button:%d, down:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_NEXT_DOWN, "[MEDPLY][CTL] press_next_button_down: selected_button:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_NEXT_UP, "[MEDPLY][CTL] press_next_button_up: selected_button:%d, down:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FAST_FORWARD, "[MEDPLY][CTL] fast_forward: seekable:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FAST_FORWARD_AUDIO, "[MEDPLY][CTL] fast_forward_audio: need_cache:%d, process:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_REWIND, "[MEDPLY][CTL] rewind: seekable:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_REWIND_AUDIO, "[MEDPLY][CTL] rewind_audio: need_cache:%d, process:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_VOL, "[MEDPLY][CTL] press_inc_volume: vol:%d, mute:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_VOL_DOWN, "[MEDPLY][CTL] press_inc_volume_down, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_VOL_UP, "[MEDPLY][CTL] press_inc_volume_up, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FTE_INC_VOL_KEY, "[MEDPLY][CTL] FTE inc volume key, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_VOL, "[MEDPLY][CTL] press_dec_volume: vol:%d, mute:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_VOL_DOWN, "[MEDPLY][CTL] press_dec_volume_down, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_VOL_UP, "[MEDPLY][CTL] press_dec_volume_up, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FTE_DEC_VOL_KEY, "[MEDPLY][CTL] FTE dec volume key, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_LSK_DOWN, "[MEDPLY][CTL] press_lsk_down, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_LSK_UP, "[MEDPLY][CTL] press_lsk_up, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_RSK_DOWN, "[MEDPLY][CTL] press_rsk_down, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_RSK_UP, "[MEDPLY][CTL] press_rsk_up, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOGGLE_MUTE, "[MEDPLY][CTL] toggle_mute: mute:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_MUTE_DOWN, "[MEDPLY][CTL] press_mute_down, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_MUTE_UP, "[MEDPLY][CTL] press_mute_up, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOGGLE_VOCAL_REMOVAL, "[MEDPLY][CTL] toggle_vocal_removal: vocal_removal:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VOCAL_REMOVAL_DOWN, "[MEDPLY][CTL] press_vocal_removal_down: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VOCAL_REMOVAL_UP, "[MEDPLY][CTL] press_vocal_removal_up: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FTE_VOCAL_REMOVAL_KEY, "[MEDPLY][CTL] FTE vocal remove key, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BLOCK_PITCH, "[MEDPLY][CTL] block_pitch: pitch:%d, state:%d, format:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_UNBLOCK_PITCH, "[MEDPLY][CTL] unblock_pitch: pitch:%d, state:%d, format:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_PITCH, "[MEDPLY][CTL] press_inc_pitch: pitch:%d ,single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_PITCH_DOWN, "[MEDPLY][CTL] press_inc_pitch_down: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INC_PITCH_UP, "[MEDPLY][CTL] press_inc_pitch_up: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_PITCH, "[MEDPLY][CTL] press_dec_pitch: pitch:%d ,single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_PITCH_DOWN, "[MEDPLY][CTL] press_dec_pitch_down: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DEC_PITCH_UP, "[MEDPLY][CTL] press_dec_pitch_up: single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FTE_DEC_PITCH_KEY, "[MEDPLY][CTL] FTE dec pitch key, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FTE_INC_PITCH_KEY, "[MEDPLY][CTL] FTE inc pitch key, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOGGLE_FULL, "[MEDPLY][CTL] toggle_full_screen: full:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FULL_DOWN, "[MEDPLY][CTL] press_full_screen_down: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_FULL_UP, "[MEDPLY][CTL] press_full_screen_up")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOGGLE_TVOUT_FULL, "[MEDPLY][CTL] toggle_tvout_full_screen: tvout_full:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TVOUT_FULL_DOWN, "[MEDPLY][CTL] press_tvout_full_screen_down: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TVOUT_FULL_UP, "[MEDPLY][CTL] press_tvout_full_screen_up")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SNAPSHOT_DOWN, "[MEDPLY][CTL] press_snapshot_down: state:%d, enable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SNAPSHOT_UP, "[MEDPLY][CTL] press_snapshot_up")
TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_DOWN, "[MEDPLY][CTL] press_activate_down: state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_UP, "[MEDPLY][CTL] press_activate_up,signle:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_RSG_KEY_HDLR, "[MEDPLY][CTL] register_key_hdlrs: screen status:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PROGRESS_HDLR, "[MEDPLY][CTL] touch_progress_hdlr: seekable:%d, state%d, cor_x:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PROGRESS_AUDIO, "[MEDPLY][CTL] touch_progress_hdlr_audio: need_cache:%d, process:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PROGRESS_UP, "[MEDPLY][CTL] touch_progress_pen_up: state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_INC_VOL, "[MEDPLY][CTL] touch_inc_vol_hdlr, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_DEC_VOL, "[MEDPLY][CTL] touch_dec_vol_hdlr, single:%d")
#Media player control (Touch) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_3D_MODE_DOWN, "[MEDPLY][CTL] press_3d_down: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_3D_MODE_UP, "[MEDPLY][CTL] press_3d_up")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_INC_PITCH, "[MEDPLY][CTL] touch_inc_pitch_hdlr, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_DEC_PITCH, "[MEDPLY][CTL] touch_dec_pitch_hdlr, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PEN_DOWN, "[MEDPLY][CTL] pen_down_hdlr: obj:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PEN_UP, "[MEDPLY][CTL] pen_up_hdlr: pre-obj:%d, obj:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PEN_MOVE, "[MEDPLY][CTL] pen_move_hdlr: pre-obj:%d, obj:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PEN_ABORT, "[MEDPLY][CTL] pen_abort_hdlr: pre-obj:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TOUCH_PEN_LONG_TAB, "[MEDPLY][CTL] pen_long_tab_hdlr: pre-obj:%d, single:%d")
#Media player control (Touch) END
#Media player control (AVRCP) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_AVRCP_CANCELED, "[MEDPLY][CTL] avrcp_button_canceled: selected_button:%d, down:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AVRCP_CMD, "[MEDPLY][CTL] bt_avrcp_cmd_hdlr: state:%d, command:%d, event:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AVRCP_RETURN, "[MEDPLY][CTL] bt_avrcp_cmd_hdlr: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VALIDATE_DRM, "[MEDPLY][CTL] drm_valide_right: result%d, handle:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_MOTION_TILT, "[MEDPLY][CTL] motion_tilt_hdlr: direction:%d, action:%d, switch:%d, fullscreen:%d")
#Media player control (AVRCP) END
#Media player control (Widget) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_WIDGET_IS_PLST_READY, "[MEDPLY][CTL] widget_is_plst_ready: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_WIDGET_GET_VALUE, "[MEDPLY][CTL] widget_get_value: item:%d, value:%d")
#Media player control (Widget) END
#Media player control (LAWMO) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_LAWMO_LOCK, "[MEDPLY][CTL] lawmo_locked")
TRC_MSG(MMI_TRC_MEDPLY_CTL_LAWMO_LOCK_CALLBACK, "[MEDPLY][CTL] lawmo_locke_callback, app:%d, cmd:%d, in_medply:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_LAWMO_INIT, "[MEDPLY][CTL] lawmo_init: %d")
#Media player control (LAWMO) END
TRC_MSG(MMI_TRC_MEDPLY_CTL_SET_MUTE_CALLBACK, "[MEDPLY][CTL] set_mute_callback: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_HFP_VOL_CALLBACK, "[MEDPLY][CTL] handfree_volume_sync_callback: state:%d, in_main_screen:%d, vol:%d, bt_vol:%d, mute:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BACKGROUND_CALLBACK, "[MEDPLY][CTL] background_callback: state:%d, result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_COMPLETED, "[MEDPLY][CTL] play_completed: pop_up:%d, continue:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_FROM_PLAY_LIST, "[MEDPLY][CTL] play_from_play_list: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STOP_PLAYING, "[MEDPLY][CTL] stop_playing: state:%d")
#Media player control (Interruption)
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_INTERRUPTED, "[MEDPLY][CTL] audio_interrupted: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUTO_UPDATE_DUR, "[MEDPLY][CTL] audio_auto_update_duration: %d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_CALLBACK, "[MEDPLY][CTL] audio_play_callback: state:%d, result:%d, single:%d ")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BUILD_CACHE_FAIL, "[MEDPLY][CTL] build_cache_fail_callback: state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_PAUSE, "[MEDPLY][CTL] audio_pause")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_STOP, "[MEDPLY][CTL] audio_stop: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_SEEK_STOP, "[MEDPLY][CTL] audio_seek_stop")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_PLAY_ACT_EXT, "[MEDPLY][CTL] audio_do_play_action_ext: seekable:%d, dur:%d, mute:%d, cur_time:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_DRM_CONSUMED, "[MEDPLY][CTL] DRM_consumed: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_PLAY_ACT, "[MEDPLY][CTL] audio_do_play_action: result:%d, file_issue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_AUD_PLAY, "[MEDPLY][CTL] audio_play")
#Video (Control)
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_SPEED, "[MEDPLY][CTL] get_video_speed_factor: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_INTERRUPTED, "[MEDPLY][CTL] video_interrupted: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_OPEN_CALLBACK_1, "[MEDPLY][CTL] video_open_callback_1: result:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_OPEN_CALLBACK_2, "[MEDPLY][CTL] video_open_callback_2: dur:%d, seekable:%d, track:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_SEEK_CALLBACK, "[MEDPLY][CTL] video_seek_callback: result:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PLAY_CALLBACK, "[MEDPLY][CTL] video_play_callback: result:%d, in_main_screen:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PURE_AUD_PLAY_CALLBACK, "[MEDPLY][CTL] pure_audio_play_callback: result:%d, state:%d, self_stop:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_AUD_INTERRUPT_CALLBACK, "[MEDPLY][CTL] video_audio_interrupt_callback: result:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_OPEN, "[MEDPLY][CTL] video_open: result:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PLAY_ACT_EXT, "[MEDPLY][CTL] video_do_play_action_ext: mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PLAY_ACT, "[MEDPLY][CTL] video_do_play_action: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PURE_AUD_PLAY_ACT_EXT, "[MEDPLY][CTL] pure_audio_do_play_action_ext: mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PURE_AUD_PLAY_ACT, "[MEDPLY][CTL] pure_audio_do_play_action: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PLAY_1, "[MEDPLY][CTL] video_play: state:%d, bt_connect_fail:%d, track:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PLAY_2, "[MEDPLY][CTL] video_play: state:%d, track:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_PAUSE, "[MEDPLY][CTL] video_pause: state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_STOP, "[MEDPLY][CTL] video_stop: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_CHECK_AND_SET_TRACK, "[MEDPLY][CTL] check and set track: 2d:%d, 3d:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_SET_SIDE_BY_SIDE_MODE, "[MEDPLY][CTL] set side by side mode: 2d:%d, 3d:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_VDO_CHECK_AND_SET_SUBTITLE_TRACK, "[MEDPLY][CTL] check and set subtitle track: subtitle num: %d")
#Stream (Controller)
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_INTERRUPTED, "[MEDPLY][CTL] stream_interrupted: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_BUF_CALLBACK, "[MEDPLY][CTL] stream_buffering_callback: result:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_PLAY_CALLBACK, "[MEDPLY][CTL] stream_play_callback: result:%d, seekable:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_AUD_INTERRUPT_CALLBACK, "[MEDPLY][CTL] stream_audio_interrupt_callback: result:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_CONNECT_CALLBACK_1, "[MEDPLY][CTL] stream_connect_callback: result:%d, state:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_CONNECT_CALLBACK_2, "[MEDPLY][CTL] stream_connect_callback_2 dur:%d, seekable:%d, track:%d, len:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_UPDATE_BUF_PERCENT, "[MEDPLY][CTL] stream_update_buffer_percent: %d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_BUF_ACT, "[MEDPLY][CTL] stream_do_buffer_action: in_main_screen:%d, seekable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_STOP, "[MEDPLY][CTL] stream_stop: in_main_screen:%d, in_media_player:%d, seekable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_PAUSE, "[MEDPLY][CTL] stream_pause: in_main_screen:%d, in_media_player:%d, seekable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_PLAY, "[MEDPLY][CTL] stream_play: in_main_screen:%d, mute:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_BUF, "[MEDPLY][CTL] stream_buffer")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_CONNECT, "[MEDPLY][CTL] stream_connect: media_type:%d, single:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_STREAM_INIT, "[MEDPLY][CTL] stream_init: result:%d, single:%d")
#Snapshot (Controller)
TRC_MSG(MMI_TRC_MEDPLY_CTL_SNAPSHOT_PAUSE, "[MEDPLY][CTL] snapshot_pause: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SNAPSHOT_RESUME, "[MEDPLY][CTL] snapshot_resume: prev_state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TAKE_SNAPSHOT, "[MEDPLY][CTL] take_snapshot")
#Media player control (Snapshot) END
#Media player control (A2DP) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_BT_OPEN_CALLBACK_IN, "[MEDPLY][CTL] bt_open_callback_in: result:%d, state:%d, inquiry:%d, inquiry_success:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BT_OPEN_CALLBACK_OUT, "[MEDPLY][CTL] bt_open_callback_out: inquiry:%d, inquiry_success:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BT_STOP, "[MEDPLY][CTL] bt_stop: notify:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_TURN_OFF_BT_OUTPUT, "[MEDPLY][CTL] turn_off_bt_output: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SWITCH_BT_OUTPUT, "[MEDPLY][CTL] switch_bt_output: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SYNC_BT_OUTPUT, "[MEDPLY][CTL] sync_bt_output: state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BT_SYNC_SPEED, "[MEDPLY][CTL] bt_sync_speed")
TRC_MSG(MMI_TRC_MEDPLY_CTL_POP_UP, "[MEDPLY][CTL] display_popup: wait_next:%d, result:%d")
#Media player control (A2DP) END
#Media player control (Single player) START
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_CHECK_CACHE, "[MEDPLY][CTL] single_check_build_cache: %d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STATE, "[MEDPLY][CTL] enter_single_states: cur_state:%d, entering_state:%d, continue:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_AUD_PLAY, "[MEDPLY][CTL] single_audio_play: mute:%d, cur_time:%d, handle:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_PLAY_AUD, "[MEDPLY][CTL] single_play_audio: dur:%d, seekable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_VDO_PLAY, "[MEDPLY][CTL] single_video_play: mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_PLAY_VDO, "[MEDPLY][CTL] single_play_video")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STREAM_BUF, "[MEDPLY][CTL] single_stream_buffer,: seekable:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STREAM_PLAY_RTSP, "[MEDPLY][CTL] single_play_stream_from_rtsp_link")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STREAM_PLAY_SDP, "[MEDPLY][CTL] single_play_stream_from_sdp_file")
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STREAM_PLAY_RAM, "[MEDPLY][CTL] single_play_stream_from_ram_file")    
TRC_MSG(MMI_TRC_MEDPLY_CTL_SINGLE_STREAM_RECEIVE_DA_FILE, "[MEDPLY][CTL] single_stream_receive_da_file")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_UPDATE_DWN_PERCENT, "[MEDPLY][CTL] single_pdl_video_update_download_percent: max:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_UPDATE_BUF_PERCENT, "[MEDPLY][CTL] single_pdl_video_update_buffer_percent: result:%d, percent:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_PLAY_CALLBACK, "[MEDPLY][CTL] single_pdl_video_play_callback: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_SEEK_CALLBACK, "[MEDPLY][CTL] single_pdl_video_seek_callback: result:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_OPEN_CALLBACK_1, "[MEDPLY][CTL] single_pdl_video_open_callback_1: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_OPEN_CALLBACK_2, "[MEDPLY][CTL] single_pdl_video_open_callback_2: dur:%d, seekable:%d, track:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_PAUSE, "[MEDPLY][CTL] single_pdl_video_pause")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_PLAY, "[MEDPLY][CTL] single_pdl_video_play: result:%d, percent:%d, mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLV_OPEN, "[MEDPLY][CTL] single_pdl_video_open: result:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_PDLV_FILE, "[MEDPLY][CTL] single_play_pdl_vidoe_file")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLA_UPDATE_BUF_PERCENT, "[MEDPLY][CTL] single_pdl_audio_update_buffer_percent: result:%d, percent:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLA_CALLBACK, "[MEDPLY][CTL] single_pdl_audio_callback: result:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLA_PLAY, "[MEDPLY][CTL] single_pdl_audio_play: result:%d, percent:%d, cur_time:%d, mute:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDLA_OPEN, "[MEDPLY][CTL] single_pdl_audio_open: handle:%d, pdl%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PLAY_PDLA_FILE, "[MEDPLY][CTL] single_play_pdl_audio_file")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDL_DA_REPORT, "[MEDPLY][CTL] single_pdl_da_report: status:%d, pdl_state:%d, pdl_media_type:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDL_DA_FILEPATH, "[MEDPLY][CTL] single_pdl_da_filepath")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDL_DA_VDO_FILE, "[MEDPLY][CTL] sinlge_pdl_da_notify_video_file, action:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_PDL_DA_AUD_FILE, "[MEDPLY][CTL] sinlge_pdl_da_notify_audio_file, action:%d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_INTRO_POPUP_CALLBACK, "[MEDPLY][CTL] single_intro_popup_callback, return:%d")
#Media player control (Single player) END
#Media player main screen START
TRC_MSG(MMI_TRC_MEDPLY_MAIN_SCREEN_ERR_REPORT, "[MEDPLY][MSCR]<WARNING><LINE:%d><VAL:0x%x>")
TRC_MSG(MMI_TRC_MEDPLY_MAIN_SCREEN_MSG_REPORT, "[MEDPLY][MSCR]<MESSAGE><LINE:%d><VAL:0x%x>")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_PREPARE, "[MEDPLY][MSCR] mmi_medply_main_screen_prepare")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_UNPREPARE, "[MEDPLY][MSCR] mmi_medply_main_screen_unprepare")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_PREPARE_VIEW, "[MEDPLY][MSCR] mmi_medply_main_screen_prepare_view")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_UNPREPARE_VIEW, "[MEDPLY][MSCR] mmi_medply_main_screen_unprepare_view")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_REDRAW, "[MEDPLY][MSCR] mmi_medply_main_screen_redraw")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_RESET, "[MEDPLY][MSCR] mmi_medply_main_screen_reset")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_BLT, "[MEDPLY][MSCR] mmi_medply_main_screen_blt")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_BLT_HDL, "[MEDPLY][MSCR] h1:%d, h2:%d, h3:%d, h4:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_BLT_RGN, "[MEDPLY][MSCR] x:%d,  y:%d,  w:%d,  h:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SET_AND_DRAW_BUTTON, "[MEDPLY][MSCR] mmi_medply_main_screen_set_and_draw_button. id:%d, status:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_VOLUME, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_volume. volume: %d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_DURATION, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_duration")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_CACHE, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_cache")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_LSK_DOWN, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_lkey_down")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_RSK_DOWN, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_rkey_down")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_LSK_UP, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_lkey_up")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_RSK_UP, "[MEDPLY][MSCR] mmi_medply_main_screen_draw_rkey_up")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_VIDEO_UPDATE, "[MEDPLY][MSCR] mmi_medply_main_screen_video_updated")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_CLEAR_VIDEO_LAYER, "[MEDPLY][MSCR] mmi_medply_main_screen_clear_video_layer")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_GET_PARAMETER, "[MEDPLY][MSCR] mmi_medply_main_screen_get_video_parameter")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SET_CLIP_RGN, "[MEDPLY][MSCR] mmi_medply_main_screen_set_clip_rgn. x:%d, y:%d, w:%d, h:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SET_FULL_SCREEN, "[MEDPLY][MSCR] mmi_medply_main_screen_set_full_screen. full_f:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SHOW_LOADING, "[MEDPLY][MSCR] mmi_medply_main_screen_show_loading. percent:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_PLAY_ANI, "[MEDPLY][MSCR] mmi_medply_main_screen_play_animation. ani:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_ANI, "[MEDPLY][MSCR] mmi_medply_main_screen_stop_animation")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_PLAY_SPECTRUM, "[MEDPLY][MSCR] mmi_medply_main_screen_play_spectrum")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_SPECTRUM, "[MEDPLY][MSCR] mmi_medply_main_screen_stop_spectrum")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SLEEP_IN, "[MEDPLY][MSCR] mmi_medply_main_screen_lcd_sleep_in_handler")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SLEEP_OUT, "[MEDPLY][MSCR] mmi_medply_main_screen_lcd_sleep_out_handler")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SET_FILE_PATH, "[MEDPLY][MSCR] mmi_medply_main_screen_set_file_path")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_SET_STATUS_AND_ANI, "[MEDPLY][MSCR] mmi_medply_main_screen_set_status_and_ani. status:%d, ani:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_UPDATE_TITLE, "[MEDPLY][MSCR] mmi_medply_main_screen_update_title")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_CHANGE_STATUS, "[MEDPLY][MSCR] mmi_medply_change_status. blt_f:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_GET_UI_STATUS, "[MEDPLY][MSCR] ctl_status:%d, ui_status:%d, ani_id:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_UPDATE_VIDEO_CONTENT, "[MEDPLY][MSCR] mmi_mscr_update_video_content")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_INIT_VIEW_CONTENT, "[MEDPLY][MSCR] mmi_mscr_init_view_content, view:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_START_PLAYING, "[MEDPLY][MSCR] mmi_mscr_start_playing. view_content:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_PLAYING, "[MEDPLY][MSCR] mmi_mscr_stop_playing. view_content:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_CONFIG_ROTATE, "[MEDPLY][MSCR] mmi_mscr_config_layer_rotate. lcd:%d, idp:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_CONFIG_BLT, "[MEDPLY][MSCR] mmi_mscr_config_layer_blt.h1:%d,h2:%d,h3:%d,h4:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_START_OSD_ANI, "[MEDPLY][MSCR] mmi_mscr_start_osd_animation. ani_id:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_OSD_ANI, "[MEDPLY][MSCR] mmi_mscr_stop_osd_animation. is_restore:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_BLT_DEMO_CB, "[MEDPLY][MSCR] mmi_mscr_blt_demo_callback. ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_BLT_ANI_CB, "[MEDPLY][MSCR] mmi_mscr_blt_ani_callback. ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_MERGE_BLT_RGN, "[MEDPLY][MSCR] mmi_mscr_merge_blt_rgn. x:%d, y:%d, w:%d, h:%d")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_PREPARE_FULL_SCREEN, "[MEDPLY][MSCR] mmi_mscr_prepare_full_scr")
TRC_MSG(MMI_TRC_MEDPLY_MSCR_UNPREPARE_FULL_SCREEN, "[MEDPLY][MSCR] mmi_mscr_unprepare_full_scr")
#Media player main screen END
#Media player Settings START
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_SKIN_INDEX,"[MEDPLY][S]mmi_medply_settings_read_value==>skin index: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_SKIN_PATH,"[MEDPLY][S]mmi_medply_settings_read_value==>skin path: %s")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_BACKGROUND_PLAY,"[MEDPLY][S]mmi_medply_settings_read_value==>backgroung play: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_REPEAT,"[MEDPLY][S]mmi_medply_settings_read_value==>repeat: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_SHUFFLE,"[MEDPLY][S]mmi_medply_settings_read_value==>shuffle: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_AUDIO_SPEED,"[MEDPLY][S]mmi_medply_settings_read_value==>audio speed :%d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_MAINSCR_DISPLAY,"[MEDPLY][S]mmi_medply_settings_read_value==> display index: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_BRIGHTNESS,"[MEDPLY][S]mmi_medply_settings_read_value==>brightness: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_CONTRAST,"[MEDPLY][S]mmi_medply_settings_read_value==>contrast: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_VIDEO_SPEED,"[MEDPLY][S]mmi_medply_settings_read_value==>video speed: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_AUTOFULSCR_PLAY,"[MEDPLY][S]mmi_medply_settings_read_value==>auto full display: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_PLAY_FRAME,"[MEDPLY][S]mmi_medply_settings_read_value==>is play frame: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_BT_OUTPUT,"[Media Player] mmi_medply_settings_read_value==>is bt output: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_PROFILE_INDEX,"[MEDPLY][S] mmi_medply_settings_read_value==>profile index: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_CHECK_AND_SET_AUDIO_SPEED,"[MEDPLY][S]mmi_medply_settings_check_and_set_audio_speed==>audio speed: %d  result: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_AUDIO_SPEED_NORMAL,"[MEDPLY][S]mmi_medply_settings_is_audio_speed_normal==>audio_speed: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_CHECK_MUTE_FROM_VIDEO_SPEED,"[MEDPLY][S]mmi_medply_settings_check_mute_from_video_speed==>video speed:%d  index: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_CHECK_SET_PURE_AUDIO,"[MEDPLY][S]mmi_medply_settings_check_and_set_pure_audio_speed==>video speed:%d  audio speed: %d, result: %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_CURRENT_DRV,"[MEDPLY][S]mmi_medply_settings_read_value==>drv = %d")
TRC_MSG(MMI_TRC_MEDPLY_SETTINGS_MOTION_FLAG,"[MEDPLY][S]mmi_medply_settings_read_value motion tilt flag = %d")
TRC_MSG(MMI_TRC_MEDPLY_BEARER_REG, "[MEDPLY][S]register_bear_event, ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_BEARER_DEREG, "[MEDPLY][S]deregister_bear_event, ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_SIM_UNAVAILABLE, "[MEDPLY][S]sim_unavailable_hdlr, evt id:%d")
TRC_MSG(MMI_TRC_MEDPLY_DTCNT_CHANGED, "[MEDPLY][S]dtcnt_changed_hdlr, evt id:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_BEAR_EVENT_CALLBACK, "[MEDPLY][C]bear_event_callback_hdlr:type:%d, state:%d,flag:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_HOLD_BEARER, "[MEDPLY][C]hold bearer:state:%d, line:%d")
TRC_MSG(MMI_TRC_MEDPLY_CTL_RELEASE_BEARER, "[MEDPLY][C]release bearer:line:%d")
#Media player Settings END
#Media player Settings(OTAP) START
TRC_MSG(MMI_TRC_MEDPLY_OTAP_INDEX_ERROR, "[MEDPLY][S][OTAP] the input parameter index error")
TRC_MSG(MMI_TRC_MEDPLY_OTAP_CBM_ID, "[MEDPLY][S][OTAP]the output cbm id  = %d")
TRC_MSG(MMI_TRC_MEDPLY_CURRENT_DATA_ACCOUNT,"[MEDPLY][S]kuro_get_current_data_account_id data_account_id = %d")
TRC_MSG(MMI_TRC_MEDPLY_CURRENT_SIM_INFO,"[MEDPLY][S]kuro_get_current_sim_info sim = %d, ret = %d")
#Media player Settings(OTAP) END
#Media player Playlist START
TRC_MSG(MMI_MEDPLY_CUI_SEARCH_CONTINUE_REQ_EXT,"[MEDPLY][PLST]mmi_medply_cui_search_continue_req: context = [%d] at line = [%d]")
TRC_MSG(MMI_MEDPLY_CUI_SEARCH_START_TIMER_EXT,"[MEDPLY][PLST]start timer, timerid = [%d], delay = [%d], at line = [%d]")
TRC_MSG(MMI_MEDPLY_CUI_SEARCH_INT_PROC,"[MEDPLY][PLST]mmi_medply_cui_search_int_proc: context = [%d] at line = [%d]")
TRC_MSG(MMI_MEDPLY_PLST_POPUP_SIMPLE_WITH_STRING_EX,"[MEDPLY][PLST]mmi_medply_plst_popup_simple_with_string_ex: string = [%d] event_id = [%d] at line = [%d]")
TRC_MSG(MMI_MEDPLY_PLST_POPUP_SIMPLE_EX,"[MEDPLY][PLST]mmi_medply_plst_popup_simple_ex: error_code = [%d] at line = [%d]")
TRC_MSG(MMI_MEDPLY_PLST_PTG_TOTAL_REPORT,"[MEDPLY][PLST] total[%d], at line[%d]")
TRC_MSG(MMI_TRC_MEDPLY_DELETE_LISTMAG_PRE_BEGIN,"[MEDPLY]<PLST>>listmgr>>delete.")
TRC_MSG(MMI_TRC_MEDPLY_DELETE_LISTMAG_NAME_EMPRY,"[MEDPLY]<PLST>[MEDPLY]<PLST>>can not get file name!")
TRC_MSG(MMI_TRC_MEDPLY_DELETE_LISTMAG_EXT_NAME_EMPRY,"[MEDPLY]<PLST>>can not get file extended name!")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DELTETE_LIST_BEGIN,"[MEDPLY]<PLST>>listmgr>delete internal.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DELTETE_NOW_PLAYING,"[MEDPLY]<PLST>>try to delete now playing list.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DELTETE_ERROR_CODE,"[MEDPLY]<PLST> delete file error, error_code = %d")
TRC_MSG(MMI_TRC_MEDPLY_RENAME_PLST,"[MEDPLY_PLST]rename list")
TRC_MSG(MMI_TRC_MEDPLY_RENAME_NOW_PLAYING_PLST,"[MEDPLY_PLST]rename now playing list")
TRC_MSG(MMI_TRC_MEDPLY_RENAME_PLST_ERROR,"[MEDPLY][PLST]mmi_medply_plst_listmgr_rename_part2 rename error code = %d")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_INIT,"[MEDPLY]<PLST>generate>init")  
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_DEINIT,"[MEDPLY]<PLST>generate>deinit")  
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_GOBACK,"[MEDPLY]<PLST>generate>forwards> no sub folder, backwards")  
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_PASS_ALL_SUB_GOBACK,"[MEDPLY]<PLST>generate>forwards> pass all sub folder, backwards")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_PATH_LONG,"[MEDPLY]<PLST>generate>forwards>too long path, skip it")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_TO_NEXT,"[MEDPLY]<PLST>generate>forwards>go to next level, total sub folder = [%d], current index = [%d], stack index = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_MAX_DEPTH,"[MEDPLY]<PLST>generate>forwards>got max depth, backwards.\n")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_LIST_FORWARD_FINDFIRST_ERROR,"[MEDPLY]<PLST>generate>forwards>FS_FindFirstN() caught error, error code = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_LIST_DEFAULT_STORAGE_CHANGE_NOTIFY,"[MEDPLY][PLST]medply mmi_medply_plst_notify_default_storage_change")
TRC_MSG(MMI_TRC_MEDPLY_KURO_SET_APN, "[MEDPLY][KURO]set apn result = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_BACK_FROM_ONLINE_LIST, "[MEDPLY][KURO]mmi_medply_kuro_back_from_online_list")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_LIST_ERROR, "[MEDPLY][KURO]mmi_medply_kuro_online_list_load_cache error")    
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_LIST_GET_LIST,"[MEDPLY][KURO]mmi_medply_kuro_online_list_load_cache ret = %d item_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_LIST_GET_LIST_RESULT,"[MEDPLY][KURO]mmi_medply_kuro_online_list_load_cache cache_start_index = %d cache_end_index = %d num = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_FROM_CLUB,"[MEDPLY][KURO]mmi_medply_kuro_bypass_settings")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_SET_GPRS,"[MEDPLY][KURO]KURO WAPPER KURO_SetGPRS data_account_id = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_SET_GPRS_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_SetGPRS back")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GET_SYS_ERROR,"[MEDPLY][KURO]KURO WAPPER KURO_GetSysError1 ret = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GET_SYS_ERROR_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_GetSysError2 ret = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GET_DISPLAYSTRING,"[MEDPLY][KURO]KURO WAPPER KUR_GetDisplayString1 ret = %d, type = %d, item_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GET_DISPLAYSTRING_BACK,"[MEDPLY][KURO]KURO WAPPER KUR_GetDisplayString2 ret = %d, buffer = %s")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_ADDAIRLOADTASK,"[MEDPLY][KURO]KURO WAPPER KURO_AddAirloadTask1 type =%d, item_index = %d, sub_item_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_ADDAIRLOADTASK_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_AddAirloadTask2 ret = %d *download_task_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_CANCEL_GETAIRLOADLIST,"[MEDPLY][KURO]KURO WAPPER KURO_CancelGetAirloadList1")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_CANCEL_GETAIRLOADLIST_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_CancelGetAirloadList2") 
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETAIRLOADINFO,"[MEDPLY][KURO]KURO WAPPER KUR_GetAirloadInfo1 type = %d, item_index = %d pAirloadInfo = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETAIRLOADINFO_BACK,"[MEDPLY][KURO]KURO WAPPER KUR_GetAirloadInfo ret = %d, pAirload->fee = %d, pAirload->isInDownloadList =%d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_CLEARAIRLOADLIST,"[MEDPLY][KURO]KURO WAPPER KURO_ClearAirloadList1")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_CLEARAIRLOADLIST_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_ClearAirloadList2")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETAIRLOADLIST,"[MEDPLY][KURO]KURO WAPPER KUR_GetAirloadList type = %d , item_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETAIRLOADLIST_BACK,"[MEDPLY][KURO]KURO WAPPER KUR_GetAirloadList ret = %d, is_cached = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETACTIVTESTATUS,"[MEDPLY][KURO]KURO WAPPER KURO_GetActiveStatus")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETACTIVTESTATUS_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_GetActiveStatus2 ret = %d, activate status = %d")
TRC_MSG(MMI_TRC_MEDIA_KURO_WAP_ENTRY_DOWNLOADMANAGER,"[MEDPLY][KURO]KURO WAPPER KURO_EnterDownloadManager")
TRC_MSG(MMI_TRC_MEDIA_KURO_WAP_ENTRY_DOWNLOADMANAGER_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_EnterDownloadManager back")
TRC_MSG(MMI_TRC_MEDIA_KURO_WAP_EXIT_DOWNLOADMANAGER,"[MEDPLY][KURO]KURO WAPPER KURO_ExitDownloadManager")
TRC_MSG(MMI_TRC_MEDIA_KURO_WAP_EXIT_DOWNLOADMANAGER_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_ExitDownloadManager back")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADTASKINFO,"[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadTaskInfo1 download_task_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADTASKINFO_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadTaskInfo2 ret = %d download_state = %d download_percentage = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADTASKCOUNT,"[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadTaskCount1")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADTASKCOUNT_BACK,"[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadTaskCount2 item_count = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADPATH, "[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadPath download_task_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_GETDOWNLOADPATH_BACK, "[MEDPLY][KURO]KURO WAPPER KURO_GetDownloadPath ret = %d, buffer = %s")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_DOWNLOADCOMMAND, "[MEDPLY][KURO]KURO WAPPER KURO_DownloadCommand1 download_task_index = %d cmd = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_WAP_DOWNLOADCOMMAND_BACK, "[MEDPLY][KURO]KURO WAPPER KURO_DownloadCommand2 ret = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_UPDATE_CALLBACK,"[MEDPLY][KURO]KURO mmi_medply_kuro_online_update_callback type=%d status = %d list_count = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_LIST_LOAD_CACHE,"[MEDPLY][KURO]load cache>> get item = %d, start = %d, end = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_CALLBACK,"[MEDPLY][KURO]KURO download callback download_task = %d, status = %d, percent= %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_CALLBACK_CACHE_INDEX,"[MEDPLY][KURO]KURO download callback cache_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DISPLAY_POPUP, "[MEDPLY][KURO]mmi_medply_kuro_function_display_err_popup status = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_INDOWNLOAD_LIST, "[MEDPLY][KURO]mmi_medply_kuro_online_list_download_song isInDownloadList = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_SONG_EXIST, "[MEDPLY][KURO]mmi_medply_kuro_online_list_download_song is_exist = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_GET_FILE_COUNT, "[MEDPLY][KURO]kuro FS_FindFirstN failed, error code = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_GET_PATH_INDEX,"[MEDPLY][KURO]mmi_medply_kuro_list_get_kurpath the higlight index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_GET_PATH_CACHE_INDEX,"[MEDPLY][KURO]mmi_medply_kuro_list_get_kurpath, cache_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_LOAD_CACHE_INTERNAL,"[MEDPLY][KURO]load cache internal>> FS_FindFirstN failed, error code = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DELETE_LOCAL_RESULT, "[MEDPLY][KURO]mmi_medply_kuro_kurosonglist_op_delete_confirm_yes result = %d, line = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_LIST_CACHE_RESULT, "[MEDPLY][KURO]mmi_medply_kuro_download_manager_load_cache, ret = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ACTIVATE_FROM_LIST, "[MEDPLY][KURO]mmi_medply_kuro_get_activate_filepath activate_from_list = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_SMS_CALLBACK, "[MEDPLY][KURO]mmi_medply_kuro_check_sms_callback albumkey = %d, sms_result = %d,waiting_flag = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ONLINE_LIST_ITEM,"[MEDPLY][KURO]mmi_medply_kuro_get_online_song_list_item item_idx = %d, load_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_LIST_ITEM, "[MEDPLY][KURO]mmi_medply_kuro_get_download_list_item  item_idx= %d  cache_index = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_ACTIVATE, "[MEDPLY][KURO]medply plst activate hide result = %d, state = %d ")
TRC_MSG(MMI_TRC_MEDPLY_KURO_GETLASTFILESYSTEM_ERROR, "[MEDPLY][KURO]kuro file system error code result = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_COUNT_INIT,"[MEDPLY][KURO]mmi_medply_kuro_fs_scan_initiate create kuro folder result  = %d, fun flag  = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_DOWNLOAD_WAIT_FLAG,"[MEDPLY][KURO]kurommi_medply_kuro_entry_download_manager wait_flag = %d")
TRC_MSG(MMI_TRC_MEDPLY_KURO_CHECK_FOLDER_EXIT,"[MEDPLY][KURO] check current folder exist ret = %d, line = %d")
TRC_MSG(MMI_TRC_MEDPLY_REGISTER_DELETE_DTCNT, "[MEDPLY][S]mmi_medply_init_settings register dtcnt delete callback result = %d")
TRC_MSG(MMI_TRC_MEDPLY_MAIN_ASM_DELETE, "[MEDPLY][PLST]found memory leak!!! total_asm_memory = [%d], left_size = [%d]")
TRC_MSG(MMI_TRC_MEDIA_PLST_CREATE_DEFAULT_FOLDER_ERROR,"[MEDPLY]<PLST>>listmgr list all>>create default folder failed, error code = %d")
TRC_MSG(MMI_TRC_MEDPLY_LIST_ALL_ERROR,"[MEDPLY][PLST]>>listmgr list all>> FS_FindFirstN failed, error code = %d")
TRC_MSG(MMI_TRC_MEDPLY_LIST_ALL_FILE_COUNT,"[MEDPLY][PLST]listmgr list all>> got %d playlists file. file_count = %d")
TRC_MSG(MMI_TRC_MEDPLY_LISTMANAGER_LIST_CACHE,"[MEDPLY][PLST]listmgr load cache internal>> FS_FindFirstN failed, error code = %d.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_LIST_LOAD_CACHE,"[MEDPLY][PLST]load cache>> get item = %d, start = %d, end = %d.")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_SORT_BEGIN, "[MEDPLY][PLST]generate>sort index>begin. current time = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_GENERATE_SORT_END, "[MEDPLY][PLST]generate>sort index>end. current time = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_LIST_GENERRATE_ERROR_HANDLE,"[MEDPLY][PLST][MEDPLY]<PLST>generate>error handler>error code = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_LIST_GET_CURRENT_DETAILS, "[MEDPLY][PLST]mmi_medply_plst_get_current_details line = %d")
TRC_MSG(MMI_TRC_MEDPLY_LIST_GET_CURRENT_DETAILS_ERROR,"[MEDPLY][PLST]mmi_medply_plst_get_current_details line = %d, error = %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GENEREATE_SEARCH_ERROR,"[MEDPLY][PLST]generate>search>caught error, error code = [%d]. line = %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DISPLAY_POPUP, "[MEDPLY][PLST]mmi_medply_plst_display_popup error_code = %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GENERATE_ODF,"[MEDPLY][PLST]generate>search odf>caught error, error code = [%d], current time = [%d], line = %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GENERATE_INTERNAL,"[MEDPLY][PLST]generate>internal>current state = [%d], current time = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_ENTRY_EDITOR,"[MEDPLY][KURO]entry editor screen. type = [%d], limit = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GET_CURRENT_TIME,"[MEDPLY][KURO]<MEDPLY>[PLST] current time = [%d]. ")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ASM_ALLOCATE, "[MEDPLY][PLST]ASM allocate: addr = [%X], size = [%d], line = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ASM_FREE, "[MEDPLY][PLST]ASM free: addr = [%X], line = [%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_FS_OPEN, "[MEDPLY][PLST]FS opened: handle = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_FS_CLOSE, "[MEDPLY][PLST]FS closed: handle = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PLAY, "[MEDPLY][PLST]mmi_medply_plst_option_initiate_play list status: plst_cntx_p->default_storage = [%d] plst_cntx_p->list_loaded = [%d] plst_cntx_p->current_list.fs_hdlr = [%d], plst_cntx_p->browser_list_p = [%d] browser_now_playing = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PLAY_PICK_INDEX, "[MEDPLY][PLST]playing index = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_LISTMGR_GET_PATH, "[MEDPLY][PLST]listmgr_get_path index = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_LISTMGR_DELETE, "[MEDPLY][PLST]mmi_medply_plst_listmgr_delete_part2 list status: plst_cntx_p->list_loaded = [%d] plst_cntx_p->current_list.fs_hdlr = [%d], plst_cntx_p->browser_list_p = [%d] browser_now_playing = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_LISTMGR_DELETE_ALL, "[MEDPLY][PLST]mmi_medply_plst_listmgr_deleteall_part2 list status: plst_cntx_p->list_loaded = [%d] plst_cntx_p->current_list.fs_hdlr = [%d], plst_cntx_p->browser_list_p = [%d] browser_now_playing = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ERROR_HAPPEN, "[MEDPLY][PLST]WARNING error happened at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_OPEN, "[MEDPLY][PLST]mmi_medply_plst_open result = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_OPEN_IS_PLAYING, "[MEDPLY][PLST]loaded list is current playing browser_now_playing = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_APPLY_SUCSESS, "[MEDPLY][PLST]mmi_medply_plst_apply_picked_file sucsess: pick_index = [%d] line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MENU_CUI_ENTRY_SELECT, "[MEDPLY][CUI]menu cui enter/select  menu_evt->parent_menu_id = [%d] menu_evt->highlighted_menu_id = [%d] list_ui.highlight = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MENU_CUI_WANING, "[MEDPLY][CUI]menu cui WARNING! evt->evt_id = [%d] value1 = [%d] value2 = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MENU_CUI_CLOSE, "[MEDPLY][CUI]menu cui menu cui close  menu_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_EDITOR_CUI_SUBMIT, "[MEDPLY][CUI]editor cui submit  editor_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_EDITOR_CUI_ABORT, "[MEDPLY][CUI]editor cui abort  editor_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_EDITOR_CUI_RESULT, "[MEDPLY][CUI]editor cui result  editor_ret->sender_id = [%d] editor_ret->result = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INLINE_CUI_ACTIVE, "[MEDPLY][CUI]inline cui activate  inline_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INLINE_CUI_SET_KEY, "[MEDPLY][CUI]inline cui set key  inline_evt->sender_id = [%d] item = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INLINE_CUI_SUBMIT, "[MEDPLY][CUI]inline cui submit  inline_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INLINE_CUI_NOTIFY, "[MEDPLY][CUI]inline cui notify  inline_evt->sender_id = [%d] inline_evt->event_type = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INLINE_CUI_ABORT, "[MEDPLY][CUI]inline cui abort  inline_evt->sender_id = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SELECTOR_CUI_RESULT, "[MEDPLY][CUI]selector cui result  sel_evt->sender_id = [%d] sel_evt->result = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DISABLE_DATA_CACHE,  "[PLSTUI]Disable data cache for dynamic list")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENABLE_DATA_CACHE,  "[PLSTUI]Enable data cache for dynamic list")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PUSH_VIEW_STACK,  "[PLSTUI]mmi_medply_listui_push_view_stack, type: %d, curr_depth: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PUSH_VIEW_STACK_FAIL, "[PLSTUI]mmi_medply_listui_push_view_stack, list entry fail:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_POP_VIEW_STACK, "[PLSTUI]mmi_medply_listui_pop_view_stack,curr_depth: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_POP_VIEW_STACK_POP_AGAIN, "[PLSTUI]mmi_medply_listui_pop_view_stack. no need to popup again! curr_ptr:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_POP_VIEW_STACK_RET, "[PLSTUI]mmi_medply_listui_pop_view_stack ret: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_AUDIO_FORMAT, "[PLSTUI]mmi_medply_listui_get_audio_format, forat: %d, ret: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_VIDEO_FORMAT, "[PLSTUI]mmi_medply_listui_get_video_format, forat: %d, ret: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LISTSRV_CALLBACK, "[PLSTUI]mmi_medply_listui_listsrv_callback, event: %d, result: %d. para:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_CHECK, "[PLSTUI]CHECK !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EXCUTE_CANCEL_FIRST, "[PLSTUI]Excute cancel function firstly, line: %d !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EVENT_CALLBACK_HDLR, "[PLSTUI]mmi_medply_plst_event_callback_hdlr")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MODULE_DEINIT_INTERNAL, "[PLSTUI]mmi_medply_listui_module_deinit_internal")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LIBRARY_OPEN_NEW, "[PLSTUI]mmi_medply_listui_library_open_new: [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LIBRARY_OPEN_NEW_FAIL, "[PLSTUI]mmi_medply_listui_library_open_new, fail: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LIBRARY_OPEN_FAIL_PROC, "[PLSTUI]mmi_medply_listui_open_fail_proc")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_OPEN_WAIT_SCREEN, "[PLSTUI]mmi_medply_listui_entry_open_wait_scren")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_HAVENOT_OPEN, "[PLSTUI]Haven't open, close and quit")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_OPEN_DELETE_CALLBACK,"[PLSTUI]mmi_medply_listui_opening_delete_callback")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SRV_LIBRARY_OPEN, "[PLSTUI]srv_plst_library_open. is_auto: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SRV_OPEN_TYPE3, "[PLSTUI]srv_plst_library_open type = 3, ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_REFRESH_LIB, "[PLSTUI]mmi_medply_listui_entry_refresh_lib ")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_REFRESH_LIB_FAIL, "[PLSTUI]mmi_medply_listui_entry_refresh_lib fail:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EXIT_REFRESH_LIB, "[PLSTUI]mmi_medply_listui_exit_refresh_lib. interrrupt !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_MAIN_MENU, "[PLSTUI]entry main menu")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_REFRESH_LIB_CANCEL, "[PLSTUI]mmi_medply_listui_refresh_lib_cancel ")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PREFRESH_LIB_FAIL, "[PLSTUI]mmi_medply_listui_refresh_lib_cancel fail! already done")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_REPORT_POPUP_PROC, "[PLSTUI]mmi_medply_listui_report_popup_proc")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_RESET_LIB, "[PLSTUI]mmi_medply_listui_reset_lib ")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SRV_LIBRARY_CLOSE, "[PLSTUI]srv_plst_library_close. ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_RESET_HIGHLIGHT, "[PLSTUI]clear gui buffer to reset highlight")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_START_LISTEN, "[PLSTUI][MOTION]start listen!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STOP_LISTEN, "[PLSTUI][MOTION]stop listen!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_TYPE_OPEN_LIST, "[PLSTUI]mmi_medply_listui_type_open_list. pop view")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_CATEGORY_SONG_LIST, "[PLSTUI]mmi_medply_listui_entry_category_song_list. album index - 1")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PREPARE_SONGS_BY_ID, "[PLSTUI]mmi_medply_listui_prepare_songs_by_id")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_PLST_SONG_LIST, "[PLSTUI]mmi_medply_listui_entry_plst_song_list, def_type:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_COMMON_LIST_ITEM_TITLE, "[PLSTUI]mmi_medply_listui_get_common_list_item. Get title error: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_COMMON_LIST_ITEM_FORMAT, "[PLSTUI]mmi_medply_listui_get_common_list_item. Get format error: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DELETE_CALLBACK_ERROR, "[PLSTUI]mmi_medply_listui_delete_callback. srv_hdlr is NULL")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_TYPE_PLAY, "[PLSTUI]mmi_medply_listui_type_play. album index - 1")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_DELETE_REQ, "[PLSTUI]mmi_medply_listui_common_delete_req. album index - 1")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_DELETE, "[PLSTUI]mmi_medply_listui_common_delete ")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_DELETE_SET_LAUNCH_SCREEN, "[PLSTUI]mmi_medply_listui_common_delete, set launch_scr_id: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_DELETE_INDEX_ERROR, "[PLSTUI]mmi_medply_listui_common_delete. album index - 1")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SHOULD_NEVER_HAPPEN, "[PLSTUI]Service owner said: This case should never happend !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_DELETE_STOP, "[PLSTUI]mmi_medply_listui_common_delete_stop. total_num: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DELETE_SCREEN_FOR_CATEGORY_SONG, "[PLSTUI]Delelete screen for category song !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DELETE_SCREEN_FOR_ARTIST_ALBUM_SONG, "[PLSTUI]Delelete screen for artist&album song !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_REMOVE, "[PLSTUI]mmi_medply_listui_common_remove ")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_COMMON_REMOVE_SET_LAUNCH_SCR_ID, "[PLSTUI]mmi_medply_listui_common_remove, set launch_scr_id: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ADDTO_PLST, "[PLSTUI]mmi_medply_listui_addto_plst")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ADDTO_PLST_SET_LAUNCH_SCR_ID, "[PLSTUI]mmi_medply_listui_addto_plst, set launch_scr_id: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ADDTO_PLST_DONE_INDEX_ERROR, "[PLSTUI]mmi_medply_listui_addto_plst_done. album index - 1")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PLST_DELETE, "[PLSTUI]mmi_medply_listui_plst_delete")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_RESTORE_LIST_INFO, "[PLSTUI]Restore list info after quit from addto plst !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ORGANIZE_ERROR_QUIT, "[PLSTUI]mmi_medply_listui_plst_organize_error_quit")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DELETE_CALLBACK, "[PLSTUI]mmi_medply_listui_organize_delete_callback. Quit without save!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SHOW_ORGANIZE_SCR_DISABLE_CACHE, "[PLSTUI]mmi_medply_listui_show_organize_scr. disable_cache: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GUI_SCREEN_SMOOTH_SCROLLING_BY_PEN, "[PLSTUI]gui_screen_smooth_scrolling_by_pen. index: %d, highlight:%d, is_change:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_ORGANIZE_LIST_ITEM_TITLE, "[PLSTUI]mmi_medply_listui_get_organize_list_item. Get title error: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ORGANIZE_HILITE_HDLR, "[PLSTUI]mmi_medply_listui_organize_hilite_hdlr. index: %d. is_hold:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PREFIX_SEARCH_GET_ITEM_TITLE, "[PLSTUI]mmi_medply_listui_prefix_search_get_item. Get title error: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_PREFIX_SEARCH_GET_ITEM_FORMAT, "[PLSTUI]mmi_medply_listui_prefix_search_get_item. Get format error: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DO_PREFIX_SEARCH, "[PLSTUI]mmi_medply_listui_do_prefix_search ret:%d, count:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STOP_PLAYING, "[PLSTUI]stop playing. total:%d, id: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_POPUP_ERROR, "[PLSTUI]mmi_medply_listui_popup_error :%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_DELETE_UPTO_SRCID_ERROR, "[PLSTUI]ERROR! mmi_medply_listui_util_delete_upto, scrn_id = 0")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_DELETE_UPTO_ACTIVE_IS_MEDPLY, "[PLSTUI]mmi_medply_listui_util_delete_upto, active is MEDPLY")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_DELETE_UPTO_ACTIVE_NOT_MEDPLY, "[PLSTUI]mmi_medply_listui_util_delete_upto, active is not MEDPLY")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_DELETE_UPTO_NOTHING_DELETE, "[PLSTUI]ERROR! mmi_medply_listui_util_delete_upto, nothing delete!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_CLEAR_GUI_BUFFER, "[PLSTUI]mmi_medply_plst_util_clear_gui_buffer, scrn_id = %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_RESET_ALL, "[PLSTUI]mmi_meply_plst_reset_all")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SRV_IS_NULL, "[PLSTUI][WARNING]srv_hdlr is null! ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_RET, "[PLSTUI]ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DISPLAY_POPUP, "[PLSTUI]mmi_medply_plst_display_popup. err_code :%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_CURR_IS_EMPTY, "[PLSTUI]mmi_medply_plst_curr_is_empty. return %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_APPLY_PICKED_FILE, "[PLSTUI]mmi_medply_plst_apply_picked_file. last_err: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LOAD_LAST, "[PLSTUI]mmi_medply_plst_load_last")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SRV_NOT_READY, "[PLSTUI]list service not ready !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MSDC_PLUG_IN_HDLR, "[PLSTUI]mmi_medply_plstui_msdc_plug_in_hdlr. drv: %d, path: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MSDC_PLUG_OUT_HDLR, "[PLSTUI]mmi_medply_plstui_msdc_plug_out_hdlr. drv: %d, path: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_UNMOUNT_HDLR, "[PLSTUI]mmi_medply_plstui_entry_unmount_hdlr. drv: %d, path: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_IS_SERVICE_SUPPORT_FORMAT, "[PLSTUI]mmi_medply_util_is_service_support_format. is_video: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_FILE_FORMAT, "[PLSTUI]file_format: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SUPPORT_FORMAT, "[PLSTUI]support_format: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_UTIL_FILL_IDEAL_DISPLAY_STR, "[PLSTUI]mmi_medply_util_fill_idle_display_str")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENCODING_TYPE_CHANGE_CALLBACK, "[PLSTUI]list mmi_medply_encoding_type_change_callback !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_NOTIFY_FILE_NOT_AVAILABLE, "[PLSTUI]mmi_medply_plst_notify_file_not_available.type. type:%d. count:%d. no_file:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DO_PICK_ERROR, "[PLSTUI]mmi_medply_plst_do_pick. last_err:%d!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_DO_PICK, "[PLSTUI]mmi_medply_plst_do_pick. total:%d, fail_cnt:%d, no_file:%d. repeat_mode:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MODULE_DEINIT, "[PLSTUI]mmi_medply_plst_module_deinit")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MODULE_DEINIT_ERROR, "[PLSTUI][WARNING]srv_cntx.mem_ptr is NULL, never inited!")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_ARTWORK_EX, "[PLSTUI]mmi_medply_plst_get_current_artwork_ex. media_id: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_ARTWORK_EX_RET, "[PLSTUI]mmi_medply_plst_get_current_artwork_ex. ret: %d, size:%d, media_id:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_CURRENT_DETAILS_DB, "[PLSTUI]mmi_medply_plst_get_current_details. Use DB value: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_CURRENT_DETAILS_TEMP, "[PLSTUI]mmi_medply_plst_store_rating_smart. Use temp value: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_SMART, "[PLSTUI]mmi_medply_plst_store_rating_smart. rating: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_FLASH_NO_CONTEXT, "[PLSTUI]mmi_medply_plst_store_rating_flush. No context !" )
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_FLASH_DO_NOTHING, "[PLSTUI]mmi_medply_plst_store_rating_flush. do nothing !")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_FLASH_STATE_WRONG, "[PLSTUI]mmi_medply_plst_store_rating_flush. state wrong. hdlr:%d. adm:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_FLASH, "[PLSTUI]mmi_medply_plst_store_rating_flush. rating: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_STORE_RATING_FLASH_RET, "[PLSTUI]mmi_medply_plst_store_rating. ret: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_GET_TOTAL, "[PLSTUI]mmi_medply_plst_curr_get_total: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_IMAGE_FLOW, "[PLSTUI]mmi_medply_listui_entry_image_flow set index: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EXIT_IMAGE_FLOW, "[PLSTUI]mmi_medply_listui_exit_image_flow set index: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_IMGFL_DELETE_CALLBACK, "[PLSTUI]mmi_medply_listui_imgfl_delete_callback set index: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_IMAGEFLOW_PLAY_BEGIN, "[PLSTUI]mmi_medply_listui_imgflow_play begin")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_IMAGEFLOW_PLAY_END, "[PLSTUI]mmi_medply_listui_imgflow_play end")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_MOTION_DIRECTION, "[PLSTUI][MOTION]direction:%d, action: %d, state:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_CHECK_MOTION_VALID, "[PLSTUI]mmi_medply_listui_check_motion_valid. ret:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SELECT_COVER_DONE, "[PLSTUI]mmi_medply_listui_select_cover_done. index:%d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EXIT_EDIT_ALBUM, "[PLSTUI]mmi_medply_listui_exit_edit_elbum")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_EXTAPP_STARTUP, "[PLSTUI]mmi_medply_list_extapp_startup")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_INIT_AND_RELOAD, "[PLSTUI] init and reload")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_SET_GOBACK_INEDNKEY, "[PLSTUI]mmi_medply_listui_set_goback_inendkey, flag: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_IS_GOBACK_INENDKEY, "[PLSTUI]mmi_medply_listui_is_goback_inendkey: %d")
TRC_MSG(MMI_TRC_MEDPLY_DB_ENABLE, "[MEDPLY][DB]enter instance. line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_DISABLE, "[MEDPLY][DB]exit instance. line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_INIT_INSTANCE, "[MEDPLY][DB]init instance.")
TRC_MSG(MMI_TRC_MEDPLY_DB_FREE_INSTANCE, "[MEDPLY][DB]free instance.")
TRC_MSG(MMI_TRC_MEDPLY_DB_TRANSACTION_BEGIN, "[MEDPLY][DB]Transaction - begin.")
TRC_MSG(MMI_TRC_MEDPLY_DB_TRANSACTION_COMMIT, "[MEDPLY][DB]Transaction - commit.")
TRC_MSG(MMI_TRC_MEDPLY_DB_TRANSACTION_ROLLBACK, "[MEDPLY][DB]Transaction - rollback.")
TRC_MSG(MMI_TRC_MEDPLY_DB_TRANSACTION_END, "[MEDPLY][DB]Transaction - end.")
TRC_MSG(MMI_TRC_MEDPLY_DB_OPEN, "[MEDPLY][DB]Open database.")
TRC_MSG(MMI_TRC_MEDPLY_DB_CLOSE, "[MEDPLY][DB]Close database.")
TRC_MSG(MMI_TRC_MEDPLY_DB_STEP, "[MEDPLY][DB]Step. line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_PREPARE, "[MEDPLY][DB]Prepare. [%s] | line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_EXECUTE, "[MEDPLY][DB]Execute. [%s] | line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_EXECUTE_FAIL, "[MEDPLY][DB]Execute failed error msg = [%s].")
TRC_MSG(MMI_TRC_MEDPLY_DB_FINALIZE, "[MEDPLY][DB]Finalize. line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_RESET, "[MEDPLY][DB]Reset.")
TRC_MSG(MMI_TRC_MEDPLY_DB_CHK_ERROR, "[MEDPLY][DB]DB_CHK error. error code:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_ERROR, "[MEDPLY][DB]DB_CHK error. error code:[%d], line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_DB_ACTION, "[MEDPLY][DB]Database action. type: ;%d;, line: ;%d;")
TRC_MSG(MMI_TRC_MEDPLY_DB_ACTION_RESULT, "[MEDPLY][DB]Database action result: ;%d;")
TRC_MSG(MMI_TRC_MEDPLY_DB_ACTION_COST, "[MEDPLY][DB]Database action costed time ;%d;")
TRC_MSG(MMI_TRC_MEDPLY_DB_RELEASE_MEM, "[MEDPLY][DB]Release db memory, before = %d, after = %d, line = %d.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_INIT, "[MEDPLY][PLST]Module init begin, instance_initialized:[%d], db_opend:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DEINIT, "[MEDPLY][PLST]Module deinit.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DEINIT_PLAYING, "[MEDPLY][PLST]Deinit playing context.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_OPEN_DB, "[MEDPLY][PLST]Open database, result:[%d]\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CLOSE_DB, "[MEDPLY][PLST]Close database.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CREATE_DB, "[MEDPLY][PLST]Create database, result:[%d]\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CREATE_LIST, "[MEDPLY][PLST]create new playlist, new id = [%d] \n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CLEAR_CONTEXT, "[MEDPLY][PLST]Clear context!\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CLEAR_GUI_BUFFER, "[MEDPLY][PLST]Clear gui buffer of screen:[%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_APPLY_BEGIN, "[MEDPLY][PLST]Apply picked file.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_APPLY_FAILED, "[MEDPLY][PLST]Apply picked file failed, ret = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SET_START, "[MEDPLY][PLST]Set start idx from [%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SET_PICK_IDX, "[MEDPLY][PLST]Set pick idx at [%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PRE_PICK, "[MEDPLY][PLST]Pre-pick, list id = %d, idx = %d.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_POST_PICK, "[MEDPLY][PLST]Post-pick, media id = %d, ret = %d.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SINGLE_APPLY_BEGIN, "[MEDPLY][PLST-single]Apply picked file.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SINGLE_APPLY_FAILED, "[MEDPLY][PLST-single]Apply picked file failed, ret = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CREATE_LIST_CACHE, "[MEDPLY][PLST]Create list cache.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_CREATE_LIST_CACHE_OK, "[MEDPLY][PLST]Create list cache successful, stack index = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_DESTORY_LIST_CACHE, "[MEDPLY][PLST]Destory list cache.\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_INVALID_PATH, "[MEDPLY][Details]Invalid path!\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_INVALID_PATH2, "[MEDPLY][Details]Invalid path! FS error = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_ENTER_INTERNAL, "[MEDPLY][Details]enter details from internal.\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_ENTER_EXTERNAL, "[MEDPLY][Details]enter details from external.\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_NO_MEMORY, "[MEDPLY][Details]allocate meory failed. line:[%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_PREPARE_DATA, "[MEDPLY][Details]Prepare data.\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_PREPARE_AUDIO, "[MEDPLY][Details]<Warning>Prepare audio data failed. ret = [%d], [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_PREPARE_COMMON, "[MEDPLY][Details]<Warning>Prepare common data failed. ret = [%d], [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_PREPARE_META, "[MEDPLY][Details]<Warning>Got error from Meta parser. ret = [%d], [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_DETAILS_PREVIEW, "[MEDPLY][Details]enter preview screen!\n")
TRC_MSG(MMI_TRC_MEDPLY_META_CREATE_FAIL, "[MEDPLY][META]Create meta parser failed, ret = [%d], line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_META_PARSE_FAIL, "[MEDPLY][META]Parser file failed, ret = [%d], line:[%d].")
TRC_MSG(MMI_TRC_MEDPLY_META_GET_COVER_FAIL, "[MEDPLY][META]Get artwork failed, ret = [%d], line:[%d].")	
TRC_MSG(MMI_TRC_MEDPLY_EDITOR_CREATE, "[MEDPLY][PLSTUI]Create editor, type = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_EDITOR_ENTRY, "[MEDPLY][PLSTUI]entry editor screen.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_NO_MEMORY, "[MEDPLY][PLSTUI]allocate meory failed. line:[%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_BMK, "[MEDPLY][PLSTUI]entry bookmark.")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_BMK_OPT, "[MEDPLY][PLSTUI]entry bookmark opt.")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_LISTMGR, "[MEDPLY][PLSTUI]entry listmgr.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_LISTMGR_OPT, "[MEDPLY][PLSTUI]entry listmgr opt.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_PLST, "[MEDPLY][PLSTUI]entry playlist screen, id = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_PLST_OPT, "[MEDPLY][PLSTUI]entry playlist opt.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_MULTISELECT, "[MEDPLY][PLSTUI]entry multiselect screen.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_MULTISELECT_OPT, "[MEDPLY][PLSTUI]entry multiselect opt.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_ENTRY_ADDTO, "[MEDPLY][PLSTUI]entry Addto screen.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLSTUI_LOAD_CACHE_FAIL, "[MEDPLY][PLSTUI]load cache failed, ret = [%d], line = [%d].\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GEN_ENTRY_LAYER, "[MEDPLY][PLST]<Generate>entry generate memory layer.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GEN_INIT, "[MEDPLY][PLST]<Generate>init, initiate scr id = %d, type = %d.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GEN_DEINIT, "[MEDPLY][PLST]<Generate>deinit.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GEN_IN_SLEEP, "[MEDPLY][PLST]<Generate>in sleeping.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_GEN_IN_PHASE, "[MEDPLY][PLST]<Generate>in phase	[%d].")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SEARCH_ENTRY_LAYER, "[MEDPLY][PLST]<Search>entry memory layer.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SEARCH_INIT, "[MEDPLY][PLST]<Search>init, initiate scr id = %d.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SEARCH_DEINIT, "[MEDPLY][PLST]<Search>deinit.\n")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PARSE_META_COST, "[MEDPLY][PLST]Parse meta cost %d ms.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PARSE_BASE_COST, "[MEDPLY][PLST]Parse base info cost %d ms.")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SEARCH_RUN_MODE,"[MEDPLY][PLST]search_run mode = [%d] , search_cui_gid = [%d], at time = [%d] , at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_SEARCH_CLOSE_MODE,"[MEDPLY][PLST]search_close mode = [%d] ,search_cui_gid = [%d], at time = [%d] , at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_REFRESH_BEGIN,"[MEDPLY][PLST]Refresh list begins, at time = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_REFRESH_END,"[MEDPLY][PLST]Refresh list ends, at time = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ALL_AUDIO_IS_PLAYING,"[MEDPLY][PLST]all audio is playing , at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ALL_VIDEO_IS_PLAYING,"[MEDPLY][PLST]all audio is playing , at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_LISTMGR_OPEN,"[MEDPLY][PLST]mmi_medply_plst_listmgr_open , result = [%d], at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ALLOCATE_SCR_MEM,"[MEDPLY][PLST]allocate screen based memory ptr = [%d], size = [%d] at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_FREE_SCR_MEM,"[MEDPLY][PLST]free screen based memory ptr = [%d], at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_ALL_TRACKS_INIT,"[MEDPLY][PLST]mmi_medply_plst_all_media_list_init , result = [%d], at line = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_NOTIFY_FILE_NOT_AVAILABLE,"[MEDPLY][PLST]mmi_medply_plst_notify_file_not_available count: %d; type: %d; all_file_issue: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_APPLY_PICKED_FILE,"[MEDPLY][PLST]mmi_medply_plst_apply_picked_file pick_index = [%d] , current_list.fs_hdlr = [%d]")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MSDC_PLUG_IN,"[MEDPLY][PLST]mmi_medply_plst_msdc_plug_in_hdlr drv_num: %d, drv: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MSDC_PLUG_OUT,"[MEDPLY][PLST]mmi_medply_plst_msdc_plug_out_hdlr drv_num: %d, drv: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_MSDC_ENTRY_UNMOUNT,"[MEDPLY][PLST]mmi_medply_plst_msdc_entry_unmount drv: %d")
TRC_MSG(MMI_TRC_MEDPLY_PLST_USB_PLUG_IN,"[MEDPLY][PLST]mmi_medply_plst_usb_plug_in_hdlr ")
TRC_MSG(MMI_TRC_MEDPLY_PLST_USB_PLUG_OUT,"[MEDPLY][PLST]mmi_medply_plst_usb_plug_out_hdlr ")
TRC_MSG(MMI_TRC_MEDPLY_PLST_PRE_FORMAT,"[MEDPLY][PLST]mmi_medply_plst_pre_format_hdlr drv: %d")
#Not used
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_PREPARE, "[MEDPLY][MSCR] mmi_mscr_kuro_prepare")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_UNPREPARE, "[MEDPLY][MSCR] mmi_mscr_kuro_unprepare")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_UPDATE, "[MEDPLY][MSCR] mmi_mscr_kuro_update")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_DRAW_BACKGROUND, "[MEDPLY][MSCR] mmi_mscr_kuro_draw_background. image:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_UPDATE_LYRICS, "[MEDPLY][MSCR] mmi_mscr_kuro_update_lyrics. idxline:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_DRAW_LYRICS, "[MEDPLY][MSCR] mmi_mscr_kuro_draw_lyrics. idxline:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_DRAW, "[MEDPLY][MSCR] mmi_mscr_kuro_draw")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_CONFIG_REGION, "[MEDPLY][MSCR] mmi_mscr_kuro_config_region")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_START_TVOUT_FULL_SCREEN, "[MEDPLY][MSCR] mmi_mscr_start_tvout_full_screen")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_TVOUT_FULL_SCREEN, "[MEDPLY][MSCR] mmi_mscr_stop_tvout_full_screen")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_CLEAR_TVOUT_FULL_SCREEN, "[MEDPLY][MSCR] mmi_mscr_clear_tvout_full_screen. state:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_KURO_DRAW_TVOUT, "[MEDPLY][MSCR] mmi_mscr_kuro_draw_tvout")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_START_ANIMATION_TVOUT, "[MEDPLY][MSCR] mmi_mscr_start_animation_tvout")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_STOP_ANIMATION_TVOUT, "[MEDPLY][MSCR] mmi_mscr_stop_animation_tvout. redraw_f:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_LYRICS_TVOUT, "[MEDPLY][MSCR] mmi_mscr_draw_lyrics_tvout")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_NULL_TVOUT, "[MEDPLY][MSCR] mmi_mscr_draw_null_tvout")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_DRAW_MEMORY_TVOUT, "[MEDPLY][MSCR] mmi_mscr_draw_memory_tvout")
#   TRC_MSG(MMI_TRC_MEDPLY_MSCR_RESIZE_REGION_TVOUT, "[MEDPLY][MSCR] mmi_mscr_resize_region_tvout. x:%d, y:%d, w:%d, h:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_CONFIRM_EXIT, "[MEDPLY][CTL] kuro_display_confirm_exit_hdlr, type:%d, state:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_REJECT, "[MEDPLY][CTL] kuro_activate_reject, type:%d, state:%d, single:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_ACCEPT, "[MEDPLY][CTL] kuro_activate_accept, type:%d, state:%d, result:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_CONFIRM, "[MEDPLY][CTL] kuro_activate_confirm, type:%d, state:%d, result:%d, fee:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_TOTAL_FEE_CALLBACK, "[MEDPLY][CTL] kuro_total_fee_callback, song_num:%d, fee:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_ACTIVATE_ALL, "[MEDPLY][CTL] kuro_activate_all, result:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_GET_ACTIVATE_STATUS, "[MEDPLY][CTL] kuro_get_activate_status, result:%d, activated:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_SET_SMS_CB, "[MEDPLY][CTL] kuro_set_sms_callback, result:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_INIT, "[MEDPLY][CTL] kuro_init, result:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_DESTORY, "[MEDPLY][CTL] kuro_destory")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_GET_INFO, "[MEDPLY][CTL] kuro_get_informaion")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_REMOVAL_ENABLED, "[MEDPLY][CTL] kuro_vocal_removal_enabled:%d, single:%d")
#   TRC_MSG(MMI_TRC_MEDPLY_CTL_KURO_DOWNLOAD_INIT, "[MEDPLY][CTL] kuro_download_init:%d")
