/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *    T9Engine.c
 *
 * Project:
 * --------
 *   Maui_Software
 *
 * Description:
 * ------------
 * Adaptation layer for T9 Core for Alphabetic & Phonetic ambiguous & multitap inputs
 * for T9 Version 7 and 7.4
 *
 * Author:
 * -------
 * -------
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 * removed!
 * removed!
 * removed!
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/

#include "t9api.h"
#include "MMI_features.h"
#ifdef __MMI_T9_TR_CHINESE__
#include "l0104b00.h"
#include "l0104b01.h"
#include "l0104b08.h"
#include "l0104b09.h"
#include "l0104b10.h"
#include "l0104b17.h"
#include "l0104b18.h"
#include "l0104b25.h"
#include "l0104b26.h"
#include "l0104b27.h"
#include "l0104b37.h"
#include "l0104b41.h"
#include "l0104b42.h"
#include "l0104b46.h"
#include "l0104b47.h"
#include "l0104b48.h"
#include "l0104b49.h"
#endif
/* Ldbs for simplified chinese */

#ifdef __MMI_T9_SM_CHINESE__
#include "l0204b00.h"
#include "l0204b08.h"
#include "l0204b09.h"
#include "l0204b17.h"
#include "l0204b25.h"
#include "l0204b37.h"
#include "l0204b41.h"
#include "l0204b42.h"
#include "l0204b46.h"
#include "l0204b47.h"
#include "l0204b48.h"
#endif
/* Ldbs for hongkong chinese */

#ifdef __MMI_T9_HK_CHINESE__
#include "l0104b00.h"
#include "l0104b01.h"
#include "l0104b02.h"
#include "l0104b08.h"
#include "l0104b09.h"
#include "l0104b10.h"
#include "l0104b11.h"
#include "l0104b17.h"
#include "l0104b18.h"
#include "l0104b19.h"
#include "l0104b25.h"
#include "l0104b26.h"
#include "l0104b27.h"
#include "l0104b37.h"
#include "l0104b38.h"
#include "l0104b41.h"
#include "l0104b42.h"
#include "l0104b43.h"
#include "l0104b46.h"
#include "l0104b47.h"
#include "l0104b48.h"
#include "l0104b49.h"
#include "l0104b59.h"
#include "l0104b60.h"
#include "l0104b61.h"
#include "l0104b64.h"
#endif


/* Data pointers for traditional CHINESE */

#ifdef __MMI_T9_TR_CHINESE__

T9ChineseData const T9FARDATA l0104 = {
    0x43,
    0x6F,
    0x70,
    0x79,
    0x72,
    0x69,
    0x67,
    0x68,
    0x74,
    0x20,
    0xA9,
    0x20,
    0x32,
    0x30,
    0x30,
    0x33,
    0x20,
    0x54,
    0x65,
    0x67,
    0x69,
    0x63,
    0x20,
    0x43,
    0x6F,
    0x6D,
    0x6D,
    0x2E,
    0x20,
    0x20,
    0x20,
    0x00,
    0x01,
    0x08,
    0x34,
    0x12,
    0x04,
    0x01,
    0x03,
    0x00,
    0x5C,
    0x4E,
    0xC8,
    0x04,
    0x94,
    0x3E,
    0x61,
    0x01,
    0x00,
    0x01,
    0x25,
    0x57,
    0x52,
    0x50,
    0x56,
    0x05,
    0x0B,
    0x27,
    0x1B,
    0x63,
    0x80,
    0x3F,
    0xA8,
    0x3D,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x05,
    0x80,
    0x3F,
    0xA8,
    0x3D,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x3F,
    0xA8,
    0x3D,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x3F,
    0x80,
    0x3F,
    0x50,
    0x07,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x98,
    0x3E,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0xB8,
    0x3F,
    0x88,
    0x0E,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0xE8,
    0x08,
    0xF8,
    0x3E,
    0x00,
    0x2D,
    0xD0,
    0x3C,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    (T9U8 const T9FARDATA *)l0104b00,
    (T9U8 const T9FARDATA *)l0104b01,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b08,
    (T9U8 const T9FARDATA *)l0104b09,
    (T9U8 const T9FARDATA *)l0104b10,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b17,
    (T9U8 const T9FARDATA *)l0104b18,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b25,
    (T9U8 const T9FARDATA *)l0104b26,
    (T9U8 const T9FARDATA *)l0104b27,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b37,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b41,
    (T9U8 const T9FARDATA *)l0104b42,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b46,
    (T9U8 const T9FARDATA *)l0104b47,
    (T9U8 const T9FARDATA *)l0104b48,
    (T9U8 const T9FARDATA *)l0104b49,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};
#endif

#ifdef __MMI_T9_SM_CHINESE__
/* Data pointers for Simplified Chinese */
T9ChineseData const T9FARDATA l0204 = {
    0x43,
    0x6F,
    0x70,
    0x79,
    0x72,
    0x69,
    0x67,
    0x68,
    0x74,
    0x20,
    0xA9,
    0x20,
    0x32,
    0x30,
    0x30,
    0x32,
    0x20,
    0x54,
    0x65,
    0x67,
    0x69,
    0x63,
    0x20,
    0x43,
    0x6F,
    0x6D,
    0x6D,
    0x2E,
    0x20,
    0x20,
    0x20,
    0x00,
    0x01,
    0x08,
    0x34,
    0x12,
    0x04,
    0x02,
    0x03,
    0x00,
    0x5C,
    0x4E,
    0x14,
    0x62,
    0x23,
    0x1B,
    0x61,
    0x01,
    0x00,
    0x02,
    0x29,
    0x53,
    0x54,
    0x51,
    0x52,
    0x05,
    0x08,
    0x27,
    0x04,
    0x92,
    0x48,
    0x36,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x38,
    0x04,
    0x48,
    0x36,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x48,
    0x36,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x98,
    0x1F,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x28,
    0x1B,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0xC0,
    0x3F,
    0x80,
    0x0E,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x40,
    0x0A,
    0x38,
    0x36,
    0x68,
    0x26,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    (T9U8 const T9FARDATA *)l0204b00,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b08,
    (T9U8 const T9FARDATA *)l0204b09,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b17,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b25,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b37,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b41,
    (T9U8 const T9FARDATA *)l0204b42,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0204b46,
    (T9U8 const T9FARDATA *)l0204b47,
    (T9U8 const T9FARDATA *)l0204b48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};
#endif

#ifdef __MMI_T9_HK_CHINESE__


/* Data pointers for traditional CHINESE */
T9ChineseData const T9FARDATA l0104 = {
    0x43,
    0x6F,
    0x70,
    0x79,
    0x72,
    0x69,
    0x67,
    0x68,
    0x74,
    0x20,
    0xA9,
    0x20,
    0x32,
    0x30,
    0x30,
    0x33,
    0x20,
    0x54,
    0x65,
    0x67,
    0x69,
    0x63,
    0x20,
    0x43,
    0x6F,
    0x6D,
    0x6D,
    0x2E,
    0x20,
    0x20,
    0x20,
    0x00,
    0x01,
    0x08,
    0x34,
    0x12,
    0x04,
    0x01,
    0x03,
    0x00,
    0x5C,
    0x4E,
    0x43,
    0x34,
    0x69,
    0x4F,
    0x61,
    0x01,
    0x00,
    0x21,
    0x36,
    0x57,
    0x52,
    0x50,
    0x55,
    0x05,
    0x0B,
    0x27,
    0x1B,
    0x63,
    0x80,
    0x3F,
    0x80,
    0x3F,
    0xD8,
    0x1F,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x60,
    0x06,
    0x80,
    0x3F,
    0x80,
    0x3F,
    0xD8,
    0x1F,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x3F,
    0x80,
    0x3F,
    0xD8,
    0x1F,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x3F,
    0x80,
    0x3F,
    0x28,
    0x2E,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x80,
    0x3F,
    0xF0,
    0x0F,
    0x00,
    0x00,
    0x00,
    0x00,
    0xB8,
    0x3F,
    0xB8,
    0x3F,
    0xE8,
    0x1C,
    0x00,
    0x00,
    0x00,
    0x00,
    0xE8,
    0x08,
    0xF8,
    0x3E,
    0x00,
    0x2D,
    0xD0,
    0x3C,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0xE8,
    0x08,
    0x80,
    0x3F,
    0xF0,
    0x0F,
    0x00,
    0x00,
    0x00,
    0x00,
    0xB8,
    0x27,
    0x00,
    0x00,
    (T9U8 const T9FARDATA *)l0104b00,
    (T9U8 const T9FARDATA *)l0104b01,
    (T9U8 const T9FARDATA *)l0104b02,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b08,
    (T9U8 const T9FARDATA *)l0104b09,
    (T9U8 const T9FARDATA *)l0104b10,
    (T9U8 const T9FARDATA *)l0104b11,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b17,
    (T9U8 const T9FARDATA *)l0104b18,
    (T9U8 const T9FARDATA *)l0104b19,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b25,
    (T9U8 const T9FARDATA *)l0104b26,
    (T9U8 const T9FARDATA *)l0104b27,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b37,
    (T9U8 const T9FARDATA *)l0104b38,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b41,
    (T9U8 const T9FARDATA *)l0104b42,
    (T9U8 const T9FARDATA *)l0104b43,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b46,
    (T9U8 const T9FARDATA *)l0104b47,
    (T9U8 const T9FARDATA *)l0104b48,
    (T9U8 const T9FARDATA *)l0104b49,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b59,
    (T9U8 const T9FARDATA *)l0104b60,
    (T9U8 const T9FARDATA *)l0104b61,
    0,
    0,
    (T9U8 const T9FARDATA *)l0104b64,
    0,
};
#endif

