[APP NAME] = TETHERING SRV
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_CONN_APP

#start trace
TRC_MSG(TRC_SRV_TETHERING_INIT, "[TETHERING][SRV] srv_tethering_init()")
TRC_MSG(TRC_SRV_TETHERING_DEINIT, "[TETHERING][SRV] srv_tethering_deinit()")
TRC_MSG(TRC_SRV_TETHERING_SWITCH_ON, "[TETHERING][SRV] srv_tethering_switch_on(), curr_status = %Msrv_tethering_status_enum")
TRC_MSG(TRC_SRV_TETHERING_SWITCH_OFF, "[TETHERING][SRV] srv_tethering_switch_off(), curr_status = %Msrv_tethering_status_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE, "[TETHERING][SRV] srv_tethering_reactivate()")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_AGAIN, "[TETHERING][SRV] reactivate again")
TRC_MSG(TRC_SRV_TETHERING_SAVE_DTCNT, "[TETHERING][SRV] srv_tethering_save_dtcnt(), sim_type = %Msrv_dtcnt_sim_type_enum, data_account_id = 0x%x")
TRC_MSG(TRC_SRV_TETHERING_RESET_DTCNT, "[TETHERING][SRV] srv_tethering_reset_dtcnt(), sim_type = %Msrv_dtcnt_sim_type_enum")
TRC_MSG(TRC_SRV_TETHERING_SET_STATUS, "[TETHERING][SRV] srv_tethering_set_status(), tethering_type = %Msrv_tethering_type_enum, status = %Msrv_tethering_status_enum")
TRC_MSG(TRC_SRV_TETHERING_SET_EXT_STATUS, "[TETHERING][SRV] srv_tethering_set_ext_status(), tethering_type = %Msrv_tethering_type_enum, ext_status = %Msrv_tethering_ext_status_enum")
TRC_MSG(TRC_SRV_TETHERING_SET_CONN_INFO, "[TETHERING][SRV] srv_tethering_set_conn_info(), common_account_id= 0x%x, used_sim = %Mcbm_sim_id_enum")
TRC_MSG(TRC_SRV_TETHERING_SET_STA_NUM, "[TETHERING][SRV] srv_tethering_set_sta_num(), tethering_type = %Msrv_tethering_type_enum, sta_num = %d")
TRC_MSG(TRC_SRV_TETHERING_UPDATE_SETTINGS, "[TETHERING][SRV] srv_tethering_abm_update_settings(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_SEND_ACTIVATE_REQ, "[TETHERING][SRV] srv_tethering_abm_send_activate_req(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_CHECK_SIM_UNAVAILABLE, "[TETHERING][SRV] no sim available")
TRC_MSG(TRC_SRV_TETHERING_ACTIVATE_CNF, "[TETHERING][SRV] srv_tethering_abm_activate_cnf_hdlr(), result = %d")
TRC_MSG(TRC_SRV_TETHERING_MODE_SWITCH_ALL_OFF, "[TETHERING][SRV] mode switch all off(flight mode)")
TRC_MSG(TRC_SRV_TETHERING_DEACTIVATE_REQ, "[TETHERING][SRV] srv_tethering_abm_send_deactivate_req(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_DEACTIVATE_CNF, "[TETHERING][SRV] srv_tethering_abm_deactivate_cnf_hdlr(), result = %d, ext_status = %Msrv_tethering_ext_status_enum")
TRC_MSG(TRC_SRV_TETHERING_REPORT_APP_SWITCH_CNF, "[TETHERING][SRV] srv_tethering_report_app_switch_cnf(), tethering_type = %Msrv_tethering_type_enum, dest_status = %Msrv_tethering_status_enum, result = %d")
TRC_MSG(TRC_SRV_TETHERING_BEARER_SHARE_QUERY_REQ, "[TETHERING][SRV] srv_tethering_abm_send_bearer_share_query_req(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_BEARER_SHARE_QUERY_CNF, "[TETHERING][SRV] srv_tethering_abm_bearer_share_query_cnf_hdlr()")
TRC_MSG(TRC_SRV_TETHERING_DTCNT_CHANGED_HDLR, "[TETHERING][SRV] srv_tethering_dtcnt_changed_hdlr()")
TRC_MSG(TRC_SRV_TETHERING_MODE_SWITCH_NOTIFY_HDLR, "[TETHERING][SRV] srv_tethering_mode_swich_notify_hdlr(), curr_flight_mode = %Msrv_mode_switch_state_enum, dest_flight_mode = %Msrv_mode_switch_state_enum")
TRC_MSG(TRC_SRV_TETHERING_CONN_INFO_CHANGED_NOTIFY, "[TETHERING][SRV] srv_tethering_conn_info_changed_notify(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_DISCONNECT_HDLR, "[TETHERING][SRV] srv_tethering_disconnect_hdlr(), tethering_type = %Msrv_tethering_type_enum, status = %Msrv_tethering_status_enum")
TRC_MSG(TRC_SRV_TETHERING_DISCONNECT_NOTIFY_APP, "[TETHERING][SRV] srv_tethering_disconnect_notify_app(), tethering_type = %Msrv_tethering_type_enum, cause = %Msrv_tethering_disconn_cause_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_START_TIMER, "[TETHERING][SRV] srv_tethering_reactivate_start_timer(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_TIMEOUT_HDLR, "[TETHERING][SRV] srv_tethering_reactivate_timeout_hdlr(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_STOP_TIMER, "[TETHERING][SRV] srv_tethering_reactivate_stop_timer(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_RETRY, "[TETHERING][SRV] srv_tethering_reactivate_retry(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_REACTIVATE_RETRY_TIMEOUT_HDLR, "[TETHERING][SRV] srv_tethering_reacivate_defer_timeout_hdlr(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_STOP, "[TETHERING][SRV] srv_tethering_stop(), tethering_type = %Msrv_tethering_type_enum")
TRC_MSG(TRC_SRV_TETHERING_STOP_ALL, "[TETHERING][SRV] srv_tethering_stop_all()")
TRC_MSG(TRC_SRV_TETHERING_TURN_OFF_WLAN, "[TETHERING][SRV] Turn off wlan.")
TRC_MSG(TRC_SRV_TETHERING_TURN_OFF_WLAN_CB, "[TETHERING][SRV] srv_tethering_wifi_turn_off_wlan_cb(), res = %Msrv_dtcnt_wlan_req_res_enum")
TRC_MSG(TRC_SRV_TETHERING_FORCE_STOP_STATUS, "[TETHERING][SRV] Force stop status.")
TRC_MSG(TRC_SRV_TETHERING_RUN_CB, "[TETHERING][SRV] srv_tethering_run_cb_func(), tethering_type = %Msrv_tethering_type_enum, result = %d")
TRC_MSG(TRC_SRV_TETHERING_USB_CABLE_DISCONN, "[TETHERING][SRV] srv_tethering_usb_cable_disconnect_notify_hdlr()")
TRC_MSG(TRC_SRV_TETHERING_COMPOSE_PROXY_STR, "[TETHERING][SRV] srv_tethering_compose_proxy_str(), proxy = %s, ret = %d")
TRC_MSG(TRC_SRV_TETHERING_LAUNCH_CAPAB, "[TETHERING][SRV] srv_tethering_check_launch_capab(), tethering_type = %Msrv_tethering_type_enum, result = %Msrv_tethering_launch_result_enum")
TRC_MSG(TRC_SRV_TETHERING_LAUNCH_CAPAB_COMMON, "[TETHERING][SRV] srv_tethering_check_launch_capab_common(), tethering_type = %Msrv_tethering_type_enum, result = %Msrv_tethering_launch_result_enum")
TRC_MSG(TRC_SRV_TETHERING_LAUNCH_CAPAB_NW, "[TETHERING][SRV] srv_tethering_check_launch_capab_nw(), sim = %d, result = %Msrv_tethering_launch_result_enum")
TRC_MSG(TRC_SRV_TETHERING_LAUNCH_CAPAB_ACCT, "[TETHERING][SRV] srv_tethering_check_launch_capab_acct(), tethering_type = %Msrv_tethering_type_enum, data_account_id = 0x%x, auto_account_id = 0x%x, result = %Msrv_tethering_launch_result_enum")
TRC_MSG(TRC_SRV_TETHERING_CHARBAT_NOTIFY_HDLR, "[TETHERING][SRV] srv_tethering_charbat_notify_hdlr(), type = %d")
TRC_MSG(TRC_SRV_TETHERING_WIFI_CHANGE_POWER, "[TETHERING][SRV] srv_tethering_wifi_change_power(), orig_type = %Msrv_tethering_wifi_power_change_type_enum, dest_type = %Msrv_tethering_wifi_power_change_type_enum")
TRC_MSG(TRC_SRV_TETHERING_WIFI_SET_POWER, "[TETHERING][SRV] srv_tethering_wifi_hs_set_power(), power_db = %d, power_dbm = %d")

