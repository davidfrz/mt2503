[APP NAME] = UNIFIED_MESSAGE
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_COMMON_APP
TRC_MSG(TRC_SRV_UM_PEEK_MSG_CALLBACK, "[UM] srv_um_peeak_msg_call_back")
TRC_MSG(TRC_SRV_UM_CHECK_MSG_INFO, "[UM] srv_um_check_msg_info, found = %d, peek_msg = %d, msg_number = %d")
TRC_MSG(TRC_SRV_UM_CREATE_PROCESS, "[UM] srv_um_create_process, pid = 0x%x, process_type = <%Mums_process_type_enum>")
TRC_MSG(TRC_SRV_UM_START_PROCESS, "[UM] srv_um_start_process, result = <%Msrv_um_result_enum>")
TRC_MSG(TRC_SRV_UM_SCHEDULER_1, "[UM] srv_um_scheduler, is running")
TRC_MSG(TRC_SRV_UM_SCHEDULER_2, "[UM] srv_um_scheduler, indx = %d, pid = 0x%x, type = <%Mums_process_type_enum>")
TRC_MSG(TRC_SRV_UM_SCHEDULER_DONE, "[UM] srv_um_scheduler finish")
TRC_MSG(TRC_SRV_UM_SCHEDULER, "[UM] srv_um_scheduler, pid = 0x%x, process_status = <%Mums_process_status_enum>, process_type = <%Mums_process_type_enum>")
TRC_MSG(TRC_SRV_UM_REQ_HANDLER, "[UM] srv_um_request_handler, pid = 0x%x, result = 0x%x")
TRC_MSG(TRC_SRV_UM_REQ_HANDLER_FIRST_ENTER_FAIL, "[UM] srv_um_request_handler: fail at first enter 0x%x")
TRC_MSG(TRC_SRV_UM_RSP_HANDLER, "[UM] srv_um_response_handler, pid = 0x%x, process_status = <%Mums_process_status_enum>, process_type = <%Mums_process_type_enum>, result = 0x%x")
TRC_MSG(TRC_SRV_UM_CANCEL_PROCESS, "[UM] srv_um_cancel_process, pid = 0x%x, process_status = <%Mums_process_status_enum>")
TRC_MSG(TRC_SRV_UM_READY_IND_NOT_READY_P1, "[UM]srv_um_ready_ind  F, maybe mms terminate %d")
TRC_MSG(TRC_SRV_UM_SORT_BY_INSERTION, "[UM] srv_um_sort_message_list_by_insertion. Sort type: %d, Order: %d")
TRC_MSG(TRC_SRV_UM_TRAVERSE_BASE_FUNC, "[UM] srv_um_traverse_base_func, msg_id: %u, result : 0x%x")
TRC_MSG(TRC_SRV_UM_CHECK_THREAD_INFO, "[UM] srv_um_check_thread_info, found = %d, peek_msg = %d, msg_number = %d")
TRC_MSG(TRC_SRV_UM_CACHE_TSFR_ADDRESS_TO_THREAD_ID_1, "[UM] srv_um_tsfr_address_to_thread_id, type = <%Msrv_um_addr_enum>, sim_id = <%Msrv_um_sim_enum>, addr_length = %d")
TRC_MSG(TRC_SRV_UM_CACHE_TSFR_ADDRESS_TO_THREAD_ID_2, "[UM] srv_um_tsfr_address_to_thread_id, thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_CACHE_TSFR_ADDRESS_TO_THREAD_ID_3, "[UM] srv_um_tsfr_address_to_thread_id, thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_CACHE_TSFR_ADDRESS_TO_THREAD_ID_4, "[UM] srv_um_tsfr_address_to_thread_id, thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_CACHE_ADD,     "[UM] srv_um_cache_add, msg_detail_pool[i] = 0x%x, msg_id = %u, msg_type = <%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>")
TRC_MSG(TRC_SRV_UM_CACHE_DELETE,  "[UM] srv_um_cache_delete, msg_detail_pool[i] = 0x%x, msg_id = %u, msg_type = <%Msrv_um_msg_enum>")
TRC_MSG(TRC_SRV_UM_CACHE_CLEAN,   "[UM] srv_um_cache_clean, clean all cache")
TRC_MSG(TRC_SRV_UM_CACHE_CLEAN_1, "[UM] srv_um_cache_clean, msg_detail_pool[i] = 0x%x, msg_id = %u, msg_box_type = <%Msrv_um_msg_box_enum>")
TRC_MSG(TRC_SRV_UM_CACHE_INIT,    "[UM] srv_um_cache_init, entry init")
TRC_MSG(TRC_SRV_UM_CACHE_MEMORY_BORROW,   "[UM] srv_um_cache_memory_borrow, borrow ok")
TRC_MSG(TRC_SRV_UM_CACHE_MEMORY_RETURN,   "[UM] srv_um_cache_memory_return, return ok")
TRC_MSG(TRC_SRV_UM_LISTMGR_CREATE, "[UM] srv_um_listmgr_create, list_cid = 0x%x")
TRC_MSG(TRC_SRV_UM_LISTMGR_DELETE, "[UM] srv_um_listmgr_delete, list_cid = 0x%x")
TRC_MSG(TRC_SRV_UM_LISTMGR_CLEAN_CALLBACK, "[UM] srv_um_listmgr_clean callback")
TRC_MSG(TRC_SRV_UM_LISTMGR_CLEAN, "[UM] srv_um_listmgr_clean, msg_type = <%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>")
TRC_MSG(TRC_SRV_UM_LISTMGR_REGISTER, "[UM] srv_um_listmgr_register, cb original function")
TRC_MSG(TRC_SRV_UM_LISTMGR_REGISTER_1, "[UM] srv_um_listmgr_register, list_cid = 0x%x")
TRC_MSG(TRC_SRV_UM_LISTMGR_UNREGISTER, "[UM] srv_um_listmgr_unregister, list_cid = 0x%x")
TRC_MSG(TRC_SRV_UM_LISTMGR_SEARCH, "[UM] srv_um_listmgr_search, list_type = %d, msg_type = <%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>")
TRC_MSG(TRC_SRV_UM_LISTMGR_UPDATE_CNTX, "[UM] srv_um_listmgr_search, list_cid = %d, msg_number = %d, msg_type = <%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>")
TRC_MSG(TRC_SRV_UM_LISTMGR_UPDATE_CNTX_1, "[UM] srv_um_listmgr_search, thread_id_type = <%Msrv_um_hash_enum>, thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI, "[UM] srv_um_clear_msg_info_cache, peek_msg_pid = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_1, "[UM] srv_um_cancel_request, pid = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_2, "[UM] srv_um_get_request_progress, pid = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_3, "[UM] srv_um_check_msg_info_by_ref, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, start_entry = %d, msg_number = %d")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_4, "[UM] srv_um_check_msg_info_by_ref, msg_type =<%Msrv_um_msg_enum>, msg_id = %u, this_msg_info_p = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_5, "[UM] srv_um_check_msg_info, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, start_entry = %d, msg_number = %d")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_6, "[UM] srv_um_check_msg_info, msg_type =<%Msrv_um_msg_enum>, msg_id = %u, this_msg_info_p = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_7, "[UM] srv_um_check_list, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, callback func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_8, "[UM] srv_um_check_msg_num, result =<%Msrv_um_result_enum>, request_msg_type =<%Msrv_um_msg_enum>, return_msg_type =<%Msrv_um_msg_enum>")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_9, "[UM] srv_um_get_msg_num,  msg_type =<%Msrv_um_msg_enum>, sim_id =<%Msrv_um_sim_enum>, pid = 0x%x, callback func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_10, "[UM] srv_um_get_list, list_type =<%Msrv_um_list_type_enum>, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, pid = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_11, "[UM] srv_um_get_list, get list callback func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_12, "[UM] srv_um_release_list, list_cid = 0x%x, out_of_date = %d")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_13, "[UM] srv_um_get_msg_info, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, msg_number = %d, pid = 0x%x, callback func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_14, "[UM] srv_um_traverse_msg, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, msg_number = %d, pid = 0x%x, traverse_func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_15, "[UM] srv_um_check_thread_info, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, start_entry = %d, thread_number = %d")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_16, "[UM] srv_um_check_thread_info, thread_id = 0x%x %x, this_thread_info_p = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_17, "[UM] srv_um_get_thread_info, msg_type =<%Msrv_um_msg_enum>, msg_box_type = <%Msrv_um_msg_box_enum>, thread_number = %d, pid = 0x%x, callback func = 0x%x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_18, "[UM] srv_um_update_thread_id, original thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_19, "[UM] srv_um_update_thread_id, updated thread_id = 0x%x %x")
TRC_MSG(TRC_SRV_UM_INTERFACE_FOR_MMI_20, "[UM] srv_um_receive_event, language change call srv_um_clear_msg_info_cache")
TRC_MSG(TRC_SRV_UM_CHECK_READY, "[UM] srv_um_check_ready, support_type = 0x%x, ready_type = 0x%x")



