[APP NAME] = UNIFIED_MESSAGE
[SCOPE] = PLUTO
[MODULE] = MOD_MMI_COMMON_APP

/* UMAppearance.c */
/* UMCentralCtrl.c */
TRC_MSG(TRC_MMI_UM_UI_CC_CREATE_SCRN_CNTX, "[UM]mmi_um_ui_cc_create_scrn_cntx, Scrn id: %4d")
TRC_MSG(TRC_MMI_UM_UI_CC_GROUP_CNTX, "[UM]mmi_um_ui_cc_create_grp_id, Root group id: %4d, internal group id: %4d, Create New: %d")
TRC_MSG(TRC_MMI_UM_UI_CC_REQ_DATA_LIST, "[UM]mmi_um_ui_cc_req_data_list, Scrn id: %4d")
TRC_MSG(TRC_MMI_UM_UI_CC_SEND_EVENT, "[UM]mmi_um_ui_cc_send_event, Scrn id: %4d, Event=<%Mmmi_um_ui_event_enum>")
/* UMFsm.c */
TRC_MSG(TRC_MMI_UM_UI_FSM_ENTRY_LIST_STATE, "[UM]mmi_um_ui_fsm_state, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, state=<%Mmmi_um_ui_fsm_entry_list_enum>")
TRC_MSG(TRC_MMI_UM_UI_FSM_ENTRY_FOLDER_STATE, "[UM]mmi_um_ui_fsm_state, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, state=<%Mmmi_um_ui_fsm_entry_folder_enum>")
TRC_MSG(TRC_MMI_UM_UI_FSM_OPERATION_STATE, "[UM]mmi_um_ui_fsm_state, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, state=<%Mmmi_um_ui_fsm_operation_enum>")
TRC_MSG(TRC_MMI_UM_UI_FSM_EL_EVENT_HANDLER, "[UM]mmi_um_ui_fsm_event, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, State=<%Mmmi_um_ui_fsm_entry_list_enum>, Event=<%Mmmi_um_ui_fsm_event_enum>")
TRC_MSG(TRC_MMI_UM_UI_FSM_EF_EVENT_HANDLER, "[UM]mmi_um_ui_fsm_event, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, State=<%Mmmi_um_ui_fsm_entry_folder_enum>, Event=<%Mmmi_um_ui_fsm_event_enum>")
TRC_MSG(TRC_MMI_UM_UI_FSM_OP_EVENT_HANDLER, "[UM]mmi_um_ui_fsm_event, Scrn id: %4d, FSM=<%Mmmi_um_ui_fsm_type_enum>, State=<%Mmmi_um_ui_fsm_operation_enum>, Event=<%Mmmi_um_ui_fsm_event_enum>")
/* UMAdaptor.c */
TRC_MSG(TRC_MMI_UM_UI_ADP_ENTRY_MSG, "[UM]mmi_um_ui_adp_entry_msg, Msg_type: %2d, Msg_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_ADP_CHECK_REENTRY, "[UM]mmi_um_ui_adp_check_reentry, Msg_type: %2d, Reentry status: %2d")
TRC_MSG(TRC_MMI_UM_UI_ADP_CHECK_PENDING_ACTION, "[UM]mmi_um_ui_adp_check_pending_action, Msg_type: %2d, Pending action status: %2d")
TRC_MSG(TRC_MMI_UM_UI_ADP_CHECK_ACTION, "[UM]mmi_um_ui_adp_check_action, action=<%Mmmi_um_ui_tb_action_enum>, Msg_type: %2d, Msg_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_ADP_OPERATE_ACTION, "[UM]mmi_um_ui_adp_operate_aciton, action=<%Mmmi_um_ui_tb_action_enum>, Msg_typ: %2d, Msg_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_ADP_GET_VIEWER_PTR, "[UM]mmi_um_ui_adp_get_viewer_ptr, Msg_type: %2d")
TRC_MSG(TRC_MMI_UM_UI_ADP_GET_OPT_MENU_ID, "[UM]mmi_um_ui_adp_get_opt_menu_id, Msg_type: %2d, Msg_id: %2d")
TRC_MSG(TRC_MMI_UM_UI_ADP_OPT_CB, "[UM]mmi_um_ui_adp_opt_cb, Msg_type: %2d, Msg_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_ADP_CUI_LAUNCH_MENU_ID, "[UM]mmi_um_ui_adp_cui_launch_by_menu_id, Parent_group_id: %2d, Menu_id: %2d")
TRC_MSG(TRC_MMI_UM_UI_ADP_GET_MSG_BOX, "[UM]mmi_um_ui_adp_get_msg_box, Msg_type: %2d, Msg_id: %4d")
/* UMInterface.c */
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MAIN_MESSAGE, "[UM]mmi_um_ui_if_entry_main_message_center, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_WRITE_MESSAGE, "[UM]mmi_um_ui_if_entry_write_msg, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_FOLDER, "[UM]mmi_um_ui_if_entry_folder, Scrn_id: %4d, folder_type: <%Msrv_um_msg_box_enum>, msg_type: <%Msrv_um_msg_enum>, sim_id: <%Msrv_um_sim_enum>")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_DELETE_MESSAGES, "[UM]mmi_um_ui_if_entry_delete_messages, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_DELETE_FOLDER_PROCESS, "[UM]mmi_um_ui_if_entry_process_delete_folder, Scrn_id: %4d, folder_type: %2d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_TEMPLATE, "[UM]mmi_um_ui_if_entry_template, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_SETTING, "[UM]mmi_um_ui_if_entry_setting, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_PROCESS, "[UM]mmi_um_ui_if_entry_process, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MS_FOLDER, "[UM]mmi_um_ui_if_entry_ms_folder, Scrn_id: %4d, folder_type: <%Msrv_um_msg_box_enum>, msg_type: <%Msrv_um_msg_enum>, sim_id: <%Msrv_um_sim_enum>")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MS_OPTION, "[UM]mmi_um_ui_if_entry_ms_option_folder, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_CONVERSATION_BOX, "[UM]mmi_um_ui_if_entry_conversation_box, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_THREAD_FOLDER, "[UM]mmi_um_ui_if_entry_thread_folder, Scrn_id: %4d, type: %Msrv_um_hash_enum, value: %x")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_DELETE_THREAD_MSG, "[UM]mmi_um_ui_if_entry_delete_thrd_msg, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MOV2ARC_THREAD_MSG, "[UM]mmi_um_ui_if_entry_mov2arc_thrd_msg, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MS_CONVERSATION_BOX, "[UM]mmi_um_ui_if_entry_ms_conversation_box, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_MS_THREAD_FOLDER, "[UM]mmi_um_ui_if_entry_ms_thread_msg, Scrn_id: %4d, type: %Msrv_um_hash_enum, value: %x")
TRC_MSG(TRC_MMI_UM_UI_IF_ENTRY_SETTING_CS, "[UM]mmi_um_ui_if_entry_setting_cs, Scrn_id: %4d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_GET_ITEM, "[UM] mmi_um_ui_sh_thread_enhance_get_async_item(), start_index = %d, nubmer = %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_GET_ITEM_RESULT, "[UM] mmi_um_ui_sh_thread_enhance_get_async_item(), stage = %d, result = %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_CHECK_EACH, "[UM] mmi_um_ui_sms_check_sms_content(), messages[iter] = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_CHECK_RESULT, "[UM] mmi_um_ui_sms_check_sms_content(), check_result = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_GET_BY_ID, "[UM] mmi_um_ui_sms_get_manager_by_id(),msg_id = %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_GET_BY_ID_INDEX_GOT, "[UM] mmi_um_ui_sms_get_manager_by_id(), msg_index = %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_READ_CALLBACK, "[UM] mmi_um_ui_sms_content_manager_read_content_callback(), manger = %d, msg_dat = %d, manager_status %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_REFERSH, "[UM] mmi_um_ui_sms_content_manager_refresh_handler(), refresh_srv_ev->msg_type = %d")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_REQUEST_SCREEN, "[UM] mmi_um_ui_sms_content_manager_read_content_callback(), requester_scrn_id = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_REQUEST_SCREEN_CNTX, "[UM] mmi_um_ui_sms_content_manager_read_content_callback(), scrn_cntx = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_REQUEST_FSM_STATUS, "[UM] mmi_um_ui_sms_content_manager_read_content_callback(), fsm->action = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_OCCUPY_CONTENT_BUFFER, "[UM] mmi_um_ui_sms_content_manager_occupy_a_content_buffer(), occupier = %d, occupier->content_buffer = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_UNIT_STATUS, "[UM] mmi_um_ui_sms_get_manager_status(), content_status = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_QUERY_MANAGER_INDEX, "[UM] mmi_um_ui_sms_get_first_certain_content_manager(), index = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_QUERY_MANAGER, "[UM] mmi_um_ui_sms_get_first_certain_content_manager(), query_staus = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_RECYCLE, "[UM] mmi_um_ui_sms_recycle_a_single_manager(), manager_to_reuse = %d, i = %d ")
TRC_MSG(TRC_MMI_UM_UI_CONTENT_CACHE_USAGE_AMOUNT, "[UM] g_mmi_um_ui_sms_content_manager_queue.total_units_used = %d ")
TRC_MSG(TRC_MMI_UM_IS_AVAILABLE_WAP_BUSY, "[UM]mmi_um_is_available(), WAP is busy ")
TRC_MSG(TRC_MMI_UM_IS_AVAILABLE_SMS_BUSY, "[UM]mmi_um_is_available(), SMS is busy ")
TRC_MSG(TRC_MMI_UM_IS_AVAILABLE, "[UM] mmi_um_is_available(), UM is available ")