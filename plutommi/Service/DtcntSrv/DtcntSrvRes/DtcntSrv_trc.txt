#ifdef __TCPIP__
[APP NAME] = SRV_DTCNT
[SCOPE] = PLUTO,COSMOS
[MODULE] = MOD_MMI_CONN_APP

#start trace
TRC_MSG(SRV_DTCNT_CONTEXT_INIT, "[DA SRV MAIN] srv_dtcnt_context_init()")
TRC_MSG(SRV_DTCNT_ROUTINE_INIT, "[DA SRV MAIN] srv_dtcnt_routine_init()")
    
TRC_MSG(SRV_DTCNT_API_INIT, "[DA SRV API] srv_dtcnt_init()")
TRC_MSG(SRV_DAPP_INIT, "[DA SRV API] dtcnt_app_init() id = %d, result = %d")
TRC_MSG(SRV_DAPP_ADD_SIM_PROF, "[DA SRV API] add_sim_prof() prof_id = %d, result = %d")
TRC_MSG(SRV_DAPP_PROCESS_SIM_CHANGE, "[DA SRV API] process_sim_change() id = %d")
TRC_MSG(SRV_DAPP_ON_HOME_PLMN_CHANGED, "[DA SRV API] mmi_dtcnt_on_home_plmn_changed, gemini value = %d, process = %d, val = %d")
TRC_MSG(SRV_DAPP_DELETE_ANY_SIM_PROFILE, "[DA SRV API] mmi_dtcnt_delete_any_sim_profile, sim type = %d")
TRC_MSG(SRV_DAPP_ADD_CONFIG_ACCOUNT, "[DA SRV API] add_config_account() id = %d, sim_match = %d")
TRC_MSG(SRV_DAPP_GET_DEFAULT_ACCOUNT, "[DA SRV API] srv_dtcnt_get_default_account, sim_type = %d, default_account = %d, ret = %d")
TRC_MSG(SRV_DAPP_SIM_GET_SIM_PREFERENCE, "[DA SRV API] srv_dtcnt_get_sim_preference, sim_type = %d, ret = %d")
TRC_MSG(SRV_DAPP_SIM_SET_SIM_PREFERENCE, "[DA SRV API] srv_dtcnt_set_sim_preference, sim_type = %d, ret = %d")
TRC_MSG(SRV_DAPP_SIM_CARD_CHANGED, "[DA SRV API] is_sim_card_changed() id = %d, result = %d")
TRC_MSG(SRV_DAPP_GET_MNC_LEN_IN_EF_AD, "[DA SRV API] srv_sim_ctrl_get_mnc_len_in_ef_ad, digits_of_mnc = %d, sim = %d")
TRC_MSG(SRV_DAPP_GET_IMSI, "[DA SRV API] srv_sim_ctrl_get_imsi, imsi[4] = %c, imsi[5] = %c, digits_of_mnc = %d")
TRC_MSG(SRV_DTCNT_API_GET_BEARER_TYPE, "[DA SRV API] srv_dtcnt_get_bearer_type(), param: acc_id = [%d], idx = [%d]")
TRC_MSG(SRV_DTCNT_API_DECODE_ACC_ID, "[DA SRV API] decoded real account id = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_APN, "[DA SRV API] srv_dtcnt_get_apn(), param: acc_id = [%d], idx = [%d], out_apn = [%d]")
TRC_MSG(SRV_DTCNT_API_SET_HOMEPAGE, "[DA SRV API] srv_dtcnt_set_homepage(), param: acc_id = [%d], in_len = [%d], in_homepage = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_HOMEPAGE, "[DA SRV API] srv_dtcnt_get_homepage(), param: acc_id = [%d], idx = [%d], out_homepage = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_ACC_NAME, "[DA SRV API] srv_dtcnt_get_account_name(), param: acc_id = [%d], idx = [%d], out_acc_name = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_CSD_NUMBER, "[DA SRV API] srv_dtcnt_get_csd_number(), param: acc_id = [%d], idx = [%d], out_csd = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_PROXY_INFO, "[DA SRV API] srv_dtcnt_get_proxy_info(), param: acc_id = [%d], idx = [%d], out_proxy_info = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_PROXY_INFO_ZERO, "[DA SRV API] srv_dtcnt_get_proxy_info() -- proxy.addr = 0.0.0.0")
TRC_MSG(SRV_DTCNT_API_GET_AUTO_ACC_ID, "[DA SRV API] srv_dtcnt_get_auto_acc_id() -- param: acc_id = [%d], acc_id_out = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_AUTO_ACC_ID_ACC_NUM, "[DA SRV API] srv_dtcnt_get_auto_acc_id() -- acc_num encoded in passed acc_id = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_AUTO_ACC_ID_ORIGINAL, "[DA SRV API] srv_dtcnt_get_auto_acc_id() -- original acc_id = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_AUTO_ACC_ID_BEST_FIT, "[DA SRV API] srv_dtcnt_get_auto_acc_id() -- best fit acc_id = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_ACC_ID_BY_APN, "[DA SRV API] srv_dtcnt_get_acc_id_by_apn() -- param: apn = [%d], acc_id_out = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_AUTO_ACC_ID_EXT, "[DA SRV API] srv_dtcnt_get_auto_acc_id_ext() -- param: acc_id = [%d], acc_id_out = [%d], is_wifi_prefer = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_SIM_PREFERENCE, "[DA SRV API] srv_dtcnt_get_sim_preference() -- param: sim_type = [%d]")
TRC_MSG(SRV_DTCNT_API_PROV_DM_UPDATE_IND, "[DA SRV API] srv_dtcnt_prov_dm_update_ind()")
TRC_MSG(SRV_DTCNT_API_PROV_DM_RETRIEVE_IND, "[DA SRV API] srv_dtcnt_prov_dm_retrieve_ind()")
TRC_MSG(SRV_DTCNT_API_PROV_PROC_CCA_DOC, "[DA SRV API] srv_dtcnt_prov_proc_cca_doc()")
TRC_MSG(SRV_DTCNT_API_PROV_IS_CCA_TARGET, "[DA SRV API] srv_dtcnt_prov_is_cca_target()")
TRC_MSG(SRV_DTCNT_API_PROV_WLAN_PROC_CCA_DOC, "[DA SRV API] srv_dtcnt_prov_wlan_proc_cca_doc()")
TRC_MSG(SRV_DTCNT_API_PROV_WLAN_IS_CCA_TARGET, "[DA SRV API] srv_dtcnt_prov_wlan_is_cca_target()")
TRC_MSG(SRV_DTCNT_API_WLAN_STATUS, "[DA SRV API] srv_dtcnt_wlan_status()")
TRC_MSG(SRV_DTCNT_API_WLAN_HW_RESET_ON, "[DA SRV API] srv_dtcnt_wlan_hw_reset_on(), callback = [%d]")
TRC_MSG(SRV_DTCNT_API_WLAN_HW_RESET_OFF, "[DA SRV API] srv_dtcnt_wlan_hw_reset_off(), callback = [%d]")
TRC_MSG(SRV_DTCNT_API_WLAN_GET_AP_SSID, "[DA SRV API] srv_dtcnt_wlan_get_connected_ap_ssid(), ssid_out = [%d]")
TRC_MSG(SRV_DTCNT_API_WLAN_GET_AP_RSSI, "[DA SRV API] srv_dtcnt_wlan_get_connected_ap_rssi(), rssi_out = [%d]")
TRC_MSG(SRV_DTCNT_API_WLAN_GET_MAC_ADDRESS, "[DA SRV API] srv_dtcnt_wlan_get_mac_address(), mac_address_out = [%d]")
TRC_MSG(SRV_DTCNT_API_WLAN_IS_PROXY_EXCLUSIVE_IP_ADDR, "[DA SRV WLAN] srv_dtcnt_wlan_is_proxy_exclusive_ip_addr(), ip_addr = [%d.%d.%d.%d]")    

TRC_MSG(SRV_DTCNT_API_GET_CONN_TYPE, "[DA SRV API] srv_dtcnt_get_connection_type(), acc_id = [%d], out_conn_type = [%d]")
TRC_MSG(SRV_DTCNT_API_GET_SIM_INFO, "[DA SRV API] srv_dtcnt_get_sim_info(), acc_id = [%d], out_sim_info = [%d]")
TRC_MSG(SRV_DTCNT_API_ACCT_IS_READ_ONLY, "[DA SRV API] srv_dtcnt_acct_is_read_only(), acc_id = [%d]")
TRC_MSG(SRV_DTCNT_API_SET_SIM_PREFERENCE, "[DA SRV API] srv_dtcnt_set_sim_preference() -- param: sim_type = [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_CREATE, "[DA SRV API] srv_dtcnt_store_create()")
TRC_MSG(SRV_DTCNT_API_STORE_CREATE_DB_PATH_CREATE, "[DA SRV API] srv_dtcnt_store_create() -- DB PATH CREATE")
TRC_MSG(SRV_DTCNT_API_STORE_CREATE_CONF_FILE_CREATE, "[DA SRV API] srv_dtcnt_store_create() -- CONFIG FILE CREATE")
TRC_MSG(SRV_DTCNT_API_STORE_CREATE_END_CREATE_ATOMIC_OP, "[DA SRV API] srv_dtcnt_store_create() -- END CREATE ATOMIC OP")
TRC_MSG(SRV_DTCNT_API_STORE_CREATE_EXISTS, "[DA SRV API] srv_dtcnt_store_create() -- STORE EXISTS")
TRC_MSG(SRV_DTCNT_API_STORE_CONFIG, "[DA SRV API] srv_dtcnt_store_config(), prof_config = [%d], prof_type = [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_COMMIT, "[DA SRV API] srv_dtcnt_store_commit()")
TRC_MSG(SRV_DTCNT_API_STORE_OPEN, "[DA SRV API] srv_dtcnt_store_open()")
TRC_MSG(SRV_DTCNT_API_STORE_OPEN_FIRST_BOOTUP, "[DA SRV API] srv_dtcnt_store_open() - first bootup")
TRC_MSG(SRV_DTCNT_API_STORE_OPEN_FAILED_PATH_FILE_NOT_FOUND, "[DA SRV API] srv_dtcnt_store_open() - DB path and config file not found")
TRC_MSG(SRV_DTCNT_API_STORE_OPEN_FAILED_INFO_FILE_WRITE_FAIL, "[DA SRV API] srv_dtcnt_store_open() - write info file failed")
TRC_MSG(SRV_DTCNT_API_STORE_OPEN_END_ATOMIC_OP, "[DA SRV API] srv_dtcnt_store_open() - resume not finished atomic operation trans_type: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_QRY_IDS, "[DA SRV API] srv_dtcnt_store_qry_ids() - qry: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_QRY_PROF, "[DA SRV API] srv_dtcnt_store_qry_prof(), acc_prof_id: [%d], qry: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_ADD_PROF, "[DA SRV API] srv_dtcnt_store_add_prof(), acc_prof_id: [%d], prof: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_ADD_WLAN_PROF, "[DA SRV API] srv_dtcnt_store_add_wlan_prof(), acc_prof_id: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_UPDATE_PROF, "[DA SRV API] srv_dtcnt_store_update_prof(), acc_prof_id: [%d], prof: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_DELETE_PROF, "[DA SRV API] srv_dtcnt_store_delete_prof(), acc_prof_id: [%d], callback: [%d]")
TRC_MSG(SRV_DTCNT_API_STORE_DELETE_PROF_BY_QRY, "[DA SRV API] srv_dtcnt_store_delete_prof_by_qry(), qry: [%d], callback: [%d]")
TRC_MSG(SRV_DTCNT_API_SET_DEFAULT_ACC_ID, "[DA SRV API] srv_dtcnt_set_default_acc(), acc_id: [%d]")
TRC_MSG(SRV_DTCNT_API_CHANGE_TO_REAL_ACCOUNT,"[DA SRV API] real account is [%u]")

TRC_MSG(SRV_DTCNT_WLAN_INIT_REQ, "[DA SRV WLAN] srv_dtcnt_wlan_init(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_DEINIT_REQ, "[DA SRV WLAN] srv_dtcnt_wlan_deinit(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONNECT_REQ_BY_DB, "[DA SRV WLAN] srv_dtcnt_wlan_connect_by_db_prof(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONNECT_REQ_BY_AP, "[DA SRV WLAN] srv_dtcnt_wlan_connect_by_app_prof(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_SCAN_REQ, "[DA SRV WLAN]  srv_dtcnt_wlan_scan(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_SCAN_ABORT_REQ, "[DA SRV WLAN]  srv_dtcnt_wlan_scan_abort(), prev.state = [%d], state = [%d], jobid=[%d]")    
TRC_MSG(SRV_DTCNT_WLAN_DISCONNECT_REQ, "[DA SRV WLAN] srv_dtcnt_wlan_disconnect(), prev.state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_SET_POWER_MODE, "[DA SRV WLAN] srv_dtcnt_wlan_set_power_mode(), prev.state = [%d], state = [%d], pwr_mode = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_GET_POWER_MODE, "[DA SRV WLAN] srv_dtcnt_wlan_get_power_mode(), prev.state = [%d], state = [%d], out_pwr_mode = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_PROXY_EXCLUSIVE_IP_ADDR_NUM, "[DA SRV WLAN] g_srv_dtcnt_wlan_proxy_exclusive_ip_addr_list.num_ips = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_ADD_PROXY_EXCLUSIVE_IP_ADDR, "[DA SRV WLAN] srv_dtcnt_wlan_add_proxy_exclusive_ip_addr(), add_ip_addr = [%d.%d.%d.%d]")    
TRC_MSG(SRV_DTCNT_WLAN_DELETE_PROXY_EXCLUSIVE_IP_ADDR, "[DA SRV WLAN] srv_dtcnt_wlan_delete_proxy_exclusive_ip_addr(), delete_ip_addr = [%d.%d.%d.%d]")    
TRC_MSG(SRV_DTCNT_WLAN_QRY_PROXY_EXCLUSIVE_IP_ADDR, "[DA SRV WLAN] srv_dtcnt_wlan_qry_proxy_exclusive_ip_addr(), qry_list = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CHANGE_BEARER_TO_WLAN, "[DA SRV WLAN] srv_dtcnt_wlan_change_bearer_to_wlan()")    
TRC_MSG(SRV_DTCNT_WLAN_POST_CHANGE_BEARER_TO_WLAN, "[DA SRV WLAN] POST change bearer to wlan event to App")    
TRC_MSG(SRV_DTCNT_WLAN_POST_CHANGE_BEARER_TO_CELLULAR_NETWORK, "[DA SRV WLAN] POST change bearer to cellular network event to App")    
TRC_MSG(SRV_DTCNT_WLAN_DISCONNECT_REQ_APPEND_PROC_JOB, "[DA SRV WLAN] Add a proc job for abort!")
TRC_MSG(SRV_DTCNT_WLAN_INIT_STOP_TETHERING, "[DA SRV WLAN] srv_dtcnt_wlan_stop_wifi_tethering_callback_func(), result = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_INIT_CHECK_TETHERING, "[DA SRV WLAN] srv_dtcnt_wlan_init(), WiFi Tethering is on!")
TRC_MSG(SRV_DTCNT_WLAN_POST_SLEEP_EVT, "[DA SRV WLAN] srv_dtcnt_wlan_post_sleep_evt()")
TRC_MSG(SRV_DTCNT_WLAN_AWAKE_WIFI, "[DA SRV WLAN] awake wifi!")
TRC_MSG(SRV_DTCNT_WLAN_CHARBAT_NOTIFY_HDLR, "[DA SRV WLAN] charbat notify!")
TRC_MSG(SRV_DTCNT_WLAN_LCD_SLEEP_HDLR, "[DA SRV WLAN] LCD sleep! evt_id = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_NEED_AWAKE_CHECK, "[DA SRV WLAN] need awake flag = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_NEED_SLEEP_CHECK, "[DA SRV WLAN] srv_dtcnt_wlan_need_sleep() wifi status = [%d], sleep_mode = [%d], charger = [%d], is_used_by_app = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CBM_NOTIFICATION_EVT_HDL, "[DA SRV WLAN]srv_dtcnt_wlan_cbm_notification_evt_hdlr()")

    
TRC_MSG(SRV_DTCNT_WLAN_SEND_LOGIN_START_REQ_TO_ABM, "[DA SRV WLAN] srv_dtcnt_wlan_send_login_start_req(), app_id [%u]")    
TRC_MSG(SRV_DTCNT_WLAN_SEND_LOGIN_STOP_REQ_TO_ABM, "[DA SRV WLAN] srv_dtcnt_wlan_send_login_stop_req(), result [%u]")    
TRC_MSG(SRV_DTCNT_WLAN_SEND_LOGOUT_REQ_TO_ABM, "[DA SRV WLAN] srv_dtcnt_wlan_send_logout_req")    
TRC_MSG(SRV_DTCNT_WLAN_PORTAL_LOGIN_START_CNF, "[DA SRV WLAN] srv_dtcnt_wlan_login_start_hdlr()")    
TRC_MSG(SRV_DTCNT_WLAN_PORTAL_LOGIN_STOP_CNF, "[DA SRV WLAN] srv_dtcnt_wlan_login_stop_hdlr()")    
TRC_MSG(SRV_DTCNT_WLAN_PORTAL_LOGOUT_CNF, "[DA SRV WLAN] srv_dtcnt_wlan_logout_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_PORTAL_SWITCH, "[DA SRV WLAN] srv_dtcnt_wlan_set_portal_switch() switch [%u]")

TRC_MSG(SRV_DTCNT_OTA_SEND_CCA_SEND_RSP, "[DA SRV OTA] srv_dtcnt_send_cca_app_configure_rsp(), status: [%d]")
TRC_MSG(SRV_DTCNT_OTA_PROC_CCA_DOC, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_doc!") 
TRC_MSG(SRV_DTCNT_OTA_EVENT_CALLBACK, "[DA SRV OTA] srv_dtcnt_ota_event_callback(), user_data: [%d]")
TRC_MSG(SRV_DTCNT_OTA_IND_CALLBACK, "[DA SRV OTA] srv_dtcnt_ota_ind_callback(), cnf: [%d], replace_id: [%d]")
TRC_MSG(SRV_DTCNT_OTA_DM_RECEIVE_IND, "[DA SRV OTA] srv_dtcnt_ota_dm_retrieve_ind(), profid: [%d]") 
TRC_MSG(SRV_DTCNT_OTA_DM_UPDATE_IND, "[DA SRV OTA] srv_dtcnt_ota_dm_update_ind(), profid: [%d]")    
TRC_MSG(SRV_DTCNT_OTA_INSTALL_START, "[DA SRV OTA]  srv_dtcnt_ota_install_start()")
TRC_MSG(SRV_DTCNT_OTA_INSTALL_NOTIFY, "[DA SRV OTA]  srv_dtcnt_ota_install_notify(), replace_flag: [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_RSP_TO_CCA, "[DA SRV OTA] srv_dtcnt_ota_cca_rsp_handler()") 
TRC_MSG(SRV_DTCNT_OTA_INSTALL, "[DA SRV OTA] srv_dtcnt_ota_install()") 
TRC_MSG(SRV_DTCNT_OTA_REPLACE, "[DA SRV OTA] srv_dtcnt_ota_replace(), acc_id: [%d]")
TRC_MSG(SRV_DTCNT_OTA_SKIP, "[DA SRV OTA] srv_dtcnt_ota_skip()") 
TRC_MSG(SRV_DTCNT_OTA_DONE, "[DA SRV OTA] srv_dtcnt_ota_done_notify()")  
TRC_MSG(SRV_DTCNT_OTA_INTALL_ABORT, "[DA SRV OTA] srv_dtcnt_ota_abort_install()") 
TRC_MSG(SRV_DTCNT_OTA_RROC_PROFILE, "[DA SRV OTA] srv_dtcnt_ota_proc_profile(), profNum: [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_ADDRTYPE, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_proxy_node(), proxyAddrType: [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_PORT_AND_SERVICE, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_port_n_srv_params(), service_param: [%d], portNum: [%d]")    
TRC_MSG(SRV_DTCNT_OTA_UPDATE_CSD, "[DA SRV OTA] srv_dtcnt_ota_update_csd_item()")    
TRC_MSG(SRV_DTCNT_OTA_UPDATE_GPRS, "[DA SRV OTA] srv_dtcnt_ota_update_gprs_item()")  
TRC_MSG(SRV_DTCNT_OTA_INTALL_GPRS, "[DA SRV OTA] srv_dtcnt_ota_install_gprs_item()")           
TRC_MSG(SRV_DTCNT_OTA_INTALL_CSD, "[DA SRV OTA] srv_dtcnt_ota_install_csd_item()")           
TRC_MSG(SRV_DTCNT_OTA_INTALL_SIM_GPRS, "[DA SRV OTA] srv_dtcnt_ota_install_sim_gprs_item()")           
TRC_MSG(SRV_DTCNT_OTA_INTALL_SIM_CSD, "[DA SRV OTA] srv_dtcnt_ota_install_sim_csd_item()")  
TRC_MSG(SRV_DTCNT_OTA_DM_GEN_CSD_PROF, "[DA SRV OTA] srv_dtcnt_ota_gen_csd_prof_for_cca(), acct_id = [%d]")    
TRC_MSG(SRV_DTCNT_OTA_DM_GEN_GPRS_PROF, "[DA SRV OTA] srv_dtcnt_ota_gen_gprs_prof_for_cca(), acct_id = [%d]")    
TRC_MSG(SRV_DTCNT_OTA_INSTALL_SIM_PROF, "[DA SRV OTA] srv_dtcnt_ota_install_sim_profile(), bearer:[%d], csd_profnum:[%d], gprs_profnum:[%d]") 
TRC_MSG(SRV_DTCNT_OTA_DM_ACC_CHECK, "[DA SRV OTA] srv_dtcnt_ota_dm_acc_check(), profid:[%d], decoded_Acc_id:[%d]") 
TRC_MSG(SRV_DTCNT_OTA_DM_GEN_PROF, "[DA SRV OTA] srv_dtcnt_ota_gen_prof_for_cca(), bearer: [%d]")    
TRC_MSG(SRV_DTCNT_OTA_DM_GET_PROF, "[DA SRV OTA] srv_dtcnt_ota_get_prof_from_cca(), bearer = [%d]")    
TRC_MSG(SRV_DTCNT_OTA_PROC_DM_DOC, "[DA SRV OTA] srv_dtcnt_ota_proc_dm_doc!") 
TRC_MSG(SRV_DTCNT_OTA_DM_SAVE_PROF, "[DA SRV OTA] srv_dtcnt_ota_dm_save_prof(), bearer:[%d], acct_id:[%d]")    
TRC_MSG(SRV_DTCNT_OTA_INTALL_ERROR_AUTHTYPE, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Error AuthType!")
TRC_MSG(SRV_DTCNT_OTA_INTALL_ERROR_CALLTYPE, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Error CallType!") 
TRC_MSG(SRV_DTCNT_OTA_INTALL_ERROR_ADDR, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Error Address!") 
TRC_MSG(SRV_DTCNT_OTA_INTALL_ERROR_BEARER, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Error Bearer!") 
TRC_MSG(SRV_DTCNT_OTA_INTALL_BEARER_CSD, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Bearer = CSD!") 
TRC_MSG(SRV_DTCNT_OTA_INTALL_BEARER_GPRS, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_param() -- Bearer = GPRS!")
TRC_MSG(SRV_DTCNT_OTA_INTALL_BEARER_TYPE,"[DA SRV OTA] srv_dtcnt_ota_proc_cca_param()-- Bearer = [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_PORT_OTA_FLAG, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_port_node() - ota_proxy_flag = [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_PORT_DM_FLAG, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_port_node() - dm_proxy_flag = [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_AUTHINFO_OTA_FLAG, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_proxy_auth_node() - ota_proxy_flag = [%d]")
TRC_MSG(SRV_DTCNT_OTA_INTALL_PROXY_AUTHINFO_DM_FLAG, "[DA SRV OTA] srv_dtcnt_ota_proc_cca_proxy_auth_node() - dm_proxy_flag = [%d]") 

TRC_MSG(SRV_DTCNT_DB_STORE_INIT, "[DA SRV DB] srv_dtcnt_db_store_init()")
TRC_MSG(SRV_DTCNT_DB_STORE_INFO_FILE_OPEN, "[DA SRV DB] srv_dtcnt_db_store_info_file_open()")
TRC_MSG(SRV_DTCNT_DB_STORE_INFO_FILE_OPEN_FAIL, "[DA SRV DB] srv_dtcnt_db_store_info_file_open(), open fs_err: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_INFO_FILE_READ_FAIL, "[DA SRV DB] srv_dtcnt_db_store_info_file_open(), read fs_err: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_INFO_FILE_OPEN_DONE, "[DA SRV DB] srv_dtcnt_db_store_info_file_open(), store status: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_WLAN_IDS_QRY, "[DA SRV DB] srv_dtcnt_db_store_ids_qry() -- qry->ids_num = [%d], total_num = [%d]")    
TRC_MSG(SRV_DTCNT_DB_STORE_PROF_QRY, "[DA SRV DB] srv_dtcnt_db_store_prof_qry(), acc_id: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_PROF_QRY_FOUND, "[DA SRV DB] srv_dtcnt_db_store_prof_qry(), found normal account")
TRC_MSG(SRV_DTCNT_DB_STORE_PROF_QRY_FOUND_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_prof_qry(), found SIM csd account")
TRC_MSG(SRV_DTCNT_DB_STORE_PROF_QRY_FOUND_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_prof_qry(), found SIM gprs account")
TRC_MSG(SRV_DTCNT_DB_STORE_WLAN_PROF_QRY, "[DA SRV DB] srv_dtcnt_db_store_wlan_prof_qry(), prof_id: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_CHECK_ERR_SIM, "[DA SRV DB] srv_dtcnt_db_store_qry_check(), sim_info: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_CHECK_ERR_AP_TYPE, "[DA SRV DB] srv_dtcnt_db_store_qry_check(), app_type: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_CHECK_ERR_BEARER_TYPE, "[DA SRV DB] srv_dtcnt_db_store_qry_check(), bearer_type: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_CHECK_ERR_ACC_TYPE, "[DA SRV DB] srv_dtcnt_db_store_qry_check(), acc_type: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_CHECK_ERR,"[DA SRV DB] srv_dtcnt_db_store_qry_check(), sim_info: [%d],app_type: [%d],bearer_type: [%d],acc_type: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ATOMIC_BEGIN, "[DA SRV DB] srv_dtcnt_db_atomic_begin(), trans_type: [%d], acc_id: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ATOMIC_END, "[DA SRV DB] srv_dtcnt_db_atomic_end()")    
TRC_MSG(SRV_DTCNT_DB_ATOMIC_TERM_TRANS, "[DA SRV DB] srv_dtcnt_db_atomic_terminate_trans() -- trans_type = [%d], acc_id = [%d]")
TRC_MSG(SRV_DTCNT_DB_ATOMIC_TERM_TRANS_FOUND, "[DA SRV DB] srv_dtcnt_db_atomic_terminate_trans(), Found One!")
TRC_MSG(SRV_DTCNT_DB_ATOMIC_TERM_TRANS_FS_ERR, "[DA SRV DB] srv_dtcnt_db_atomic_terminate_trans() -- fs_err = [%d]")
TRC_MSG(SRV_DTCNT_DB_ATOMIC_TERM_TRANS_DONE, "[DA SRV DB] srv_dtcnt_db_atomic_terminate_trans(), Done!")
TRC_MSG(SRV_DTCNT_DB_STORE_LOAD_PROF_FOPEN_FS_ERR, "[DA SRV DB] srv_dtcnt_db_store_load_prof() -- FOpen: fs_err = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_LOAD_PROF_FSIZE_FS_ERR, "[DA SRV DB] srv_dtcnt_db_store_load_prof() -- FSize: fs_err = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_LOAD_PROF_FREAD_FS_ERR, "[DA SRV DB] srv_dtcnt_db_store_load_prof() -- FRead: fs_err = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ADD_DM_PROF, "[DA SRV DB] srv_dtcnt_db_store_add_prof() -- DM profile Added, index:[%d], bearer:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ADD_NORMAL_PROF, "[DA SRV DB] srv_dtcnt_db_store_add_prof() -- Normal profile Added, index:[%d], bearer:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_PARSE_PROF_FILE_ERR, "[DA SRV DB] srv_dtcnt_db_store_load_prof() -- Field = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DETAIL_PROFUPDATE_CHECK_FILE_CORRUPT, "[DA SRV DB] srv_dtcnt_db_store_detail_prof_update_check() -- Field = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DETAIL_PROF_UPDATE_CHECK_NO_CHANGE, "[DA SRV DB] srv_dtcnt_db_store_detail_prof_update_check() -- No Change")
TRC_MSG(SRV_DTCNT_DB_STORE_DETAIL_PROF_UPDATE_CHECK_FILE_NOT_FOUND, "[DA SRV DB] srv_dtcnt_db_store_detail_prof_update_check() -- File Not Found")
TRC_MSG(SRV_DTCNT_DB_STORE_DETAIL_PROF_UPDATE_CHECK_CHANGE_REQUIRED, "[DA SRV DB] srv_dtcnt_db_store_detail_prof_update_check() -- Update detail profile")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_PROF_BACKUP_FILE_ERR, "[DA SRV DB] srv_dtcnt_db_store_update_prof() -- backup files for resume failed")    
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_PROF_RESUME, "[DA SRV DB] srv_dtcnt_db_store_update_prof() -- failed-> resume")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_PROF_NOT_FOUND, "[DA SRV DB] srv_dtcnt_db_store_update_prof() -- not found matched profile -> failed")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_PROF_DONE, "[DA SRV DB] srv_dtcnt_db_store_update_prof() -- update successful")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_WLAN_PROF_WARNING, "[DA SRV DB] srv_dtcnt_db_store_update_wlan_prof_val() -- update profile net_type without updating priority")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_WLAN_PROF, "[DA SRV DB] srv_dtcnt_db_store_del_wlan_profile(), profile_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_WLAN_PROF_FOUND, "[DA SRV DB] srv_dtcnt_db_store_del_wlan_profile(), found specified wlan profile")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_ACCOUNT, "[DA SRV DB] srv_dtcnt_db_store_del_account(), acc_id:[%d], callback:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_DEFAULT_ACCOUNT, "[DA SRV DB] srv_dtcnt_db_store_del_account(), delete default account id")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_DEFAULT_ACCOUNT_SWITCH_SAME_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_del_account(), switch to same sim gprs, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_DEFAULT_ACCOUNT_SWITCH_SAME_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_del_account(), switch to same sim csd, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_DEFAULT_ACCOUNT_SWITCH_DIFF_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_del_account(), switch to diff sim gprs, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_DELETE_DEFAULT_ACCOUNT_SWITCH_DIFF_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_del_account(), switch to diff sim csd, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_FILEIO_WRITE_INFO_FILE_ERROR, "[DA SRV DB] srv_dtcnt_db_fileio_write_store_info_file(), fs_err:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SEND_ABM_ACC_INFO, "[DA SRV DB] srv_dtcnt_db_store_send_abm_acc_info(), opcode:[%d], sim_id:[%d], acc_id:[%d], bearer:[%d], sim_changed:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_ABM_ACC_INFO, "[DA SRV DB] srv_dtcnt_db_store_update_abm_acc_info(), acc_num:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_ABM_ACC_INFO_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_update_abm_acc_info(), SIM CSD acc_num:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_ABM_ACC_INFO_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_update_abm_acc_info(), SIM GPRS acc_num:[%d]")    
TRC_MSG(SRV_DTCNT_DB_STORE_UPDATE_ACC_APINFO, "[DA SRV DB] srv_dtcnt_store_update_acc_apinfo(), g_var_sync_done:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), need_proxy_flag:[%d], no_proxy_flag:[%d], skip_csd:[%d], app_idx:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_APP_TYPE_MATCH, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), found specified app_type account id:[%d], sim_id:[%d], prefer_sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_DEFAULT_MATCH, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), select default id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_SAME_SIM_DB_GPRS, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), select same sim gprs id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_SAME_SIM_DB_CSD, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), select same sim csd id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_DIFF_SIM_DB_GPRS, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), select diff sim gprs id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_DIFF_SIM_DB_CSD, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), select diff sim csd id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_SMART_ACC_CONN_TYPE_MISMATCH, "[DA SRV DB] srv_dtcnt_db_store_smart_acct(), can't find connection type matched account")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_MMS_ACC_SAME_SIM_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_find_best_mms_sim_acct(), select same sim card gprs id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_MMS_ACC_SAME_SIM_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_find_best_mms_sim_acct(), select same sim card csd id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_MMS_ACC_DIFF_SIM_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_find_best_mms_sim_acct(), select diff sim card gprs id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_MMS_ACC_DIFF_SIM_SIM_CSD, "[DA SRV DB] srv_dtcnt_db_store_find_best_mms_sim_acct(), select diff sim card csd id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_DEFAULT_ACC_INFO, "[DA SRV DB] srv_dtcnt_db_store_get_def_acc_info(), default account idx: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), ap_id: [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_INVALID_INPUT_N_APP_TYPE_NULL, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), ap_id invalid or app_type = 0")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_DEFAULT, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), return default acc_id:[%d], default acct sim id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_ANY_GPRS, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), no default, return any gprs acc_id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_ANY_CSD, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), no default, return any csd acc_id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_ANY_SIM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), no default, return any sim card gprs acc_id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_DM_GPRS, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), AP[DM] query, return dm gprs acc_id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_DM_CSD, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), AP[DM] query, return dm csd acc_id:[%d], sim_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_RET_APP_TYPE_MATCH_ACC, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), return app_type matched acc_id:[%d]")    
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_APP_TYPE_EXIST, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), found app info")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_APP_TYPE_SKIP_CSD, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), app type skip csd account enabled!")
TRC_MSG(SRV_DTCNT_DB_STORE_FIND_BEST_ACC_APP_TYPE_NO_PROXY, "[DA SRV DB] srv_dtcnt_db_store_find_best_fit_acct(), app type require no proxy account enabled!")
TRC_MSG(SRV_DTCNT_DB_STORE_BEARER_INIT_IND_HDLR, "[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr()")    
TRC_MSG(SRV_DTCNT_DB_STORE_BEARER_DEINIT_IND_HDLR, "[DA SRV DB] srv_dtcnt_db_store_bearer_deinit_ind_hdlr()")    
TRC_MSG(SRV_DTCNT_DB_STORE_PROFILE_QUERY_IND_HDLR, "[DA SRV DB] srv_dtcnt_db_store_prof_query_ind_hdlr()")
TRC_MSG(SRV_DTCNT_DB_STORE_PROFILE_PROXY_INFO_REQ_HDLR, "[DA SRV DB] srv_dtcnt_db_store_prof_proxy_info_req_hdlr()")
TRC_MSG(SRV_DTCNT_DB_STORE_STATUS_CHECK, "[DA SRV DB] srv_dtcnt_db_store_status_check(), store_status:[%d], acc_num:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_ACC_INFO_SUCCESS, "[DA SRV DB] srv_dtcnt_db_store_get_acc_info(), FOUND!!")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_ACC_INFO_FAILED, "[DA SRV DB] srv_dtcnt_db_store_get_acc_info(), NOT FOUND!!")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_ACC_INFO_BY_APN_SUCCESS, "[DA SRV DB] srv_dtcnt_db_store_get_acc_info_by_apn(), FOUND!!")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_ACC_INFO_BY_APN_FAILED, "[DA SRV DB] srv_dtcnt_db_store_get_acc_info_by_apn(), NOT FOUND!!")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_SIM_ACC_INFO_CSD, "[DA SRV DB] srv_dtcnt_db_store_qry_sim_acc_info(), SIM CSD FOUND!!, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_SIM_ACC_INFO_GPRS, "[DA SRV DB] srv_dtcnt_db_store_qry_sim_acc_info(), SIM GPRS FOUND!!, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_QRY_SIM_ACC_INFO_FAILED, "[DA SRV DB] srv_dtcnt_db_store_qry_sim_acc_info(), NOT FOUND!!, acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ADD_SIM_PROF, "[DA SRV DB] srv_dtcnt_db_store_add_sim_prof(), bearer:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ADD_SIM_CSD_PROF_DONE, "[DA SRV DB] srv_dtcnt_db_store_add_sim_prof(), installed csd acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_ADD_SIM_GPRS_PROF_DONE, "[DA SRV DB] srv_dtcnt_db_store_add_sim_prof(), installed gprs acc_id:[%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_SIM_CSD_ACC_INFO_SUCCESS, "[DA SRV DB] srv_dtcnt_db_store_get_sim_acc_info(), FOUND CSD SIM account!!")
TRC_MSG(SRV_DTCNT_DB_STORE_GET_SIM_GPRS_ACC_INFO_SUCCESS, "[DA SRV DB] srv_dtcnt_db_store_get_sim_acc_info(), FOUND GPRS SIM account!!")    
TRC_MSG(SRV_DTCNT_DB_STORE_GET_SIM_ACC_INFO_FAILED, "[DA SRV DB] srv_dtcnt_db_store_get_sim_acc_info(), NOT FOUND!!")
TRC_MSG(SRV_DTCNT_BEARER_INIT_HDLR_WIFI_PREFER, "[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr(), WIFI Prefer check")
TRC_MSG(SRV_DTCNT_BEARER_INIT_HDLR_WIFI_PREFER_APPTYPE_NOT_APPLY, "[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr(), APP not apply Wifi prefer")
TRC_MSG(SRV_DTCNT_BEARER_INIT_HDLR_WIFI_PREFER_APPTYPE_WIFI_PREFER, "[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr(), APP apply Wifi prefer")
TRC_MSG(SRV_DTCNT_DB_STORE_WIFI_PREFER_CHECK, "[DA SRV DB] srv_dtcnt_db_store_wifi_prefer_acct_check(), WIFI Prefer check")
TRC_MSG(SRV_DTCNT_DB_STORE_WIFI_PREFER_CHECK_APPTYPE_NOT_APPLY, "[DA SRV DB] srv_dtcnt_db_store_wifi_prefer_acct_check(), APP not apply Wifi prefer")
TRC_MSG(SRV_DTCNT_DB_STORE_WIFI_PREFER_CHECK_APPTYPE_WIFI_PREFER, "[DA SRV DB] srv_dtcnt_db_store_wifi_prefer_acct_check(), APP apply Wifi prefer")
TRC_MSG(SRV_DTCNT_DB_STORE_WIFI_PREFER_CHECK_NO_APPTYPE, "[DA SRV DB] srv_dtcnt_db_store_wifi_prefer_acct_check(), APP type not found")
TRC_MSG(SRV_DTCNT_POST_CHANGE_REAL_ACCT_IND, "[DA SRV DB] POST change real acct ind event to App, ori_acct_id:[%d], rel_acct_id:[%d]")    
TRC_MSG(SRV_DTCNT_BEARER_INIT_WLAN_AP_QUERY_IND_CALLBACK, "[DA SRV DB] srv_dtcnt_bearer_init_wlan_ap_query_ind_callback(), bearer_type:[%d] account_id:[%d]")    
TRC_MSG(SRV_DTCNT_POST_BEARER_INIT_WLAN_AP_QUERY_IND, "[DA SRV DB] POST bearer init wlan AP query ind event to App")    
TRC_MSG(SRV_DTCNT_POST_BEARER_DEINIT_WLAN_AP_QUERY_IND, "[DA SRV DB] POST bearer deinit wlan AP query ind event to App")
TRC_MSG(SRV_DTCNT_UPDATE_REAL_ACCT,"[DA SRV DB]update a real account map!")
TRC_MSG(SRV_DTCNT_ADD_REAL_ACCT,"[DA SRV DB]add a real account map!")
TRC_MSG(SRV_DTCNT_REAL_ACCT_IS_FULL,"[DA SRV DB]real account map is full!")
TRC_MSG(SRV_DTCNT_RECORD_REAL_ACCOUNT,"[DA SRV DB] srv_dtcnt_db_record_real_account(), ori_acct_id=[%u], real_acct_id=[%u]")
TRC_MSG(SRV_DTCNT_GET_APP_NAME_STR,"[DA SRV DB] srv_dtcnt_db_get_app_str(),acct_id=[%u]")
TRC_MSG(SRV_DTCNT_GET_APP_NAME_ERR,"[DA SRV DB] srv_dtcnt_db_get_app_str(),get app err!")
TRC_MSG(SRV_DTCNT_GET_APP_NAME,"[DA SRV DB] srv_dtcnt_db_get_app_str(),app_str_id=[%u], app_icon_id=[%u]")
TRC_MSG(SRV_DTCNT_USER_SELECT_WIFI,"[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr(),user select wifi!")
TRC_MSG(SRV_DTCNT_ORI_ACCOUNT,"[DA SRV DB] srv_dtcnt_db_store_bearer_init_ind_hdlr(), ori_account=[%u]")    
TRC_MSG(SRV_DTCNT_GET_REAL_ACCT_FROM_CBM,"[DA SRV DB] srv_dtcnt_get_real_acct(), acct from cbm =[%u], final acct = [%u]")
TRC_MSG(SRV_DTCNT_DB_ACCOUNT_NUM, "[DA SRV DB] srv_dtcnt_get_account_num() sim_id = [%d] account num = [%d]")
TRC_MSG(SRV_DTCNT_DB_STORE_NO_WAP, "[DA SRV DB] srv_dtcnt_db_store_smart_acct_check() Opera can't use wap protocol!")

TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_INIT, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION[ INIT ]")    
TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_DEINIT, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION[ DEINIT ]")
TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_CONNECT, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION[ CONNECT ]")
TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_DISCONNECT, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION[ DISCONNECT ]")
TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_SCAN, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION[ SCAN ]")
TRC_MSG(SRV_DTCNT_WLAN_DO_ACTION_NOT_DONE, "[DA SRV WLAN] srv_dtcnt_wlan_do_action() -- ACTION NOT DONE, pre_status = [%d], status = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CONN_NULL_ENCODE_FAIL, "[DA SRV WLAN] srv_dtcnt_wlan_connect_req(NULL)-- encode profile failed, i = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CONN_NULL_PROF, "[DA SRV WLAN] srv_dtcnt_wlan_connect_req(NULL) -- profile_num == 0, total_num = [%d], i = [%d], j = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CONN_NULL_GEN_PROF_FAIL, "[DA SRV WLAN] srv_dtcnt_wlan_connect_req(NULL) -- gen profiles failed")
TRC_MSG(SRV_DTCNT_WLAN_INIT_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_init_cnf_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_DEINIT_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_deinit_cnf_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONNECT_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_conn_cnf_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_DISCONNECT_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_disc_cnf_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONNECT_IND_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_conn_ind_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_IPADDR_CHANGE_CNF_HDLR,"[DA SRV WLAN] srv_dtcnt_wlan_ipaddr_change_cnf_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_NEED_PORTAL_VERIFY,"[DA SRV WLAN] srv_dtcnt_wlan_ipaddr_change_req() need login verify [%d]")
TRC_MSG(SRV_DTCNT_WLAN_DISCONNECT_IND_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_disc_ind_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_LIST_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_list_cnf_hdlr() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_SET_PS_MODE_CNF_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_set_ps_mode_cnf_hdlr() -- pre_state = [%d], state = [%d], ps_mode = [%d], status = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_WIFI_AP_LIST_QUERY_IND_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_ap_list_query_ind_hdlr()")    
TRC_MSG(SRV_DTCNT_WLAN_POST_AP_LIST_QUERY_IND, "[DA SRV WLAN] POST AP list query ind event to App")    
TRC_MSG(SRV_DTCNT_WLAN_AP_LIST_QUERY_IND_CALLBACK, "[DA SRV WLAN] srv_dtcnt_wlan_ap_list_query_ind_callback(), ap_num: [%d]")
TRC_MSG(SRV_DTCNT_WLAN_LOGOUT_CALLBACK, "[DA SRV WLAN] srv_dtcnt_wlan_logout_callback(), rsp = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_DELETE_ACTION, "[DA SRV WLAN] srv_dtcnt_wlan_delete_action(), delete option = [%d], action = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_POST_SCAN_RESULT, "[DA SRV WLAN] POST scan result event to App")    
TRC_MSG(SRV_DTCNT_WLAN_CONN_PROF, "[DA SRV WLAN] srv_dtcnt_wlan_post_conn_prof_event(), prof num:[%d], connect type:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_POST_CONN_RESULT, "[DA SRV WLAN] POST connect result event to App")    
TRC_MSG(SRV_DTCNT_WLAN_POST_STATE_EVENT, "[DA SRV WLAN] POST WLAN STATE event id : [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_POST_WLAN_BEARER_STATUS_EVENT, "[DA SRV WLAN] srv_dtcnt_wlan_post_bearer_status_event(), status : [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONN_ACTION_NOT_DONE, "[DA SRV WLAN] srv_dtcnt_wlan_connect_req() -- pre_state = [%d], state = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONN_ACTION_NUM_PROFS, "[DA SRV WLAN] srv_dtcnt_wlan_connect_req() -- num_profs = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_CONTEXT_INIT, "[DA SRV WLAN] srv_dtcnt_wlan_context_init(), num_profs = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CONTEXT_READ_FROM_NVRAM, "[DA SRV WLAN] srv_dtcnt_wlan_setting_struct's size - %d infra = [%d] adhoc = [%d] profile id count = [%d] start on bootup = [%d] power mode = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_ADD_ACTION, "[DA SRV WLAN] srv_dtcnt_wlan_add_action(), action = [%d], job = [%d], state = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_NEW_SCAN_JOB, "[DA SRV WLAN] srv_dtcnt_wlan_new_scan_job(), callback = [%d], scan state = [%d], state = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_ABORT_SCAN_JOB, "[DA SRV WLAN] srv_dtcnt_wlan_abort_scan_job(), scan_job_id = [%d], scan state = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_CLEAR_SCAN_ACTION, "[DA SRV WLAN] srv_dtcnt_wlan_clear_scan_job()")
TRC_MSG(SRV_DTCNT_WLAN_ABORT_SCAN_JOB_FOUND, "[DA SRV WLAN] found scan job to abort, scan state = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_POST_INIT_RESULT, "[DA SRV WLAN] POST init result event to App")    
TRC_MSG(SRV_DTCNT_WLAN_POST_DEINIT_RESULT, "[DA SRV WLAN] POST deinit result event to App")    
TRC_MSG(SRV_DTCNT_WLAN_POST_DISC_RESULT, "[DA SRV WLAN] POST disc result event to App")    
TRC_MSG(SRV_DTCNT_WLAN_AUTO_PW_ON, "[DA SRV WLAN] srv_dtcnt_wlan_auto_pw_on()")
TRC_MSG(SRV_DTCNT_WLAN_AUTO_PW_ON_DB_CONN, "[DA SRV WLAN] srv_dtcnt_wlan_auto_pw_on(), connect saved ap list")
TRC_MSG(SRV_DTCNT_WLAN_AUTO_PW_ON_INIT, "[DA SRV WLAN] srv_dtcnt_wlan_auto_pw_on(), no saved profiles --> init")
TRC_MSG(SRV_DTCNT_WLAN_HW_RESET_ON_CONNECT, "[DA SRV WLAN] srv_dtcnt_wlan_hw_reset(), connect saved ap list")
TRC_MSG(SRV_DTCNT_WLAN_HW_RESET_ON_INIT, "[DA SRV WLAN] srv_dtcnt_wlan_hw_reset(), no saved profiles --> init")
TRC_MSG(SRV_DTCNT_WLAN_HW_RESET_OFF_DEINIT, "[DA SRV WLAN] srv_dtcnt_wlan_hw_reset(), off --> deinit")
TRC_MSG(SRV_DTCNT_WLAN_SAVE_PROFILES, "[DA SRV WLAN] srv_dtcnt_wlan_save_profiles(), i:[%d], replace:[%d], old_network:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_SAVE_PROFILES_VALUES, "[DA SRV WLAN] srv_dtcnt_wlan_save_profiles(), adhoc_num:[%d], infra_num:[%d], prof_id_cnt:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_IPADDR_CHANGE_REQ, "[DA SRV WLAN] srv_dtcnt_wlan_ipaddr_change_req(), use_dhcp:[%d], wlan_state:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_CURR_AP_INFO_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_curr_ap_info_ind_hdlr(), wlan_state:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_IPADDR_UPDATE_IND_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_ipaddr_update_ind_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_IPADDR_CONFLICT_IND_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_ipaddr_conflict_ind_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_WPS_INFO_HDLR, "[DA SRV WLAN] srv_dtcnt_wlan_wps_info_ind_hdlr(), wlan_state:[%d]")
TRC_MSG(SRV_DTCNT_WLAN_SHUTDOWN_REQ, "[DA SRV WLAN] srv_dtcnt_wlan_shutdown_req(), state: [%d]")
TRC_MSG(SRV_DTCNT_WLAN_AUTO_CONN_NUM, "[DA SRV WLAN] srv_dtcnt_wlan_auto_conn_num() = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_SEARCH_AP_OPEN_IND_CALLBACK, "[DA SRV WLAN] srv_dtcnt_wlan_search_ap_open_ind_callback(), rsp: [%d]")
TRC_MSG(SRV_DTCNT_WLAN_POST_SEARCH_AP_OPEN_IND, "[DA SRV WLAN] POST search AP open event to App")    
TRC_MSG(SRV_DTCNT_WLAN_POST_SEARCH_AP_CLOSE_IND, "[DA SRV WLAN] POST search AP close event to App")
TRC_MSG(SRV_DTCNT_WLAN_POST_LOGOUT_IND, "[DA SRV WLAN] POST logout event to App")
TRC_MSG(SRV_DTCNT_WLAN_CONTEXT_INIT_PROXY_EXCLUSIVE_IP_ADDR, "[DA SRV WLAN] srv_dtcnt_wlan_context_init(), exclusive_ip_addr = [%d.%d.%d.%d]")
TRC_MSG(SRV_DTCNT_WLAN_WIFI_ACTIVATE_REQ_IND, "[DA SRV WLAN] srv_dtcnt_wlan_wifi_activate_req_ind_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_SAME_SSID, "[DA SRV WLAN] Same ssid, so doesn't send ipaddr change request!")
TRC_MSG(SRV_DTCNT_WLAN_NET_STATUS_IND, "[DA SRV WLAN] srv_dtcnt_net_satus_ind_hdlr()!")

TRC_MSG(SRV_DTCNT_WLAN_CONN_ACTION_CBM_FLAGS, "[DA SRV WLAN] connect req cbm flags, aa_conn_flag = [%d], init_by_aa = [%d], aa_before_conn_flag = [%d], pre_conn_by_aa = [%d]")    
TRC_MSG(SRV_DTCNT_WLAN_PRE_ALWAYS_ASK_CONNECT_FLAG, "[DA SRV WLAN] pre_connect_by_always_ask = [%d], location is [%d]")	
TRC_MSG(SRV_DTCNT_SET_WLAN_SCAN_FLAG, "[DA SRV WLAN] srv_dtcnt_wlan_set_scan_flag(), scan flag = [%d]")
TRC_MSG(SRV_DTCNT_WLAN_SCAN_DISABLE, "[DA SRV WLAN] srv_dtcnt_wlan_scan() scan flag is false!")

TRC_MSG(SRV_DTCNT_WLAN_OTAP_INSTALL, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_install()")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_INSTALL_START, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_install_start()")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_INSTALL_NEXT, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_install_next()")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_INSTALL_PROFILES, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_install_profiles(), num_installed: [%d]")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_REPLACE, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_replace(), replace_idx : %d")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_SKIP, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_skip()")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_DONE, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_otap_done_notify(), num_installed : %d")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_ENCRYPT, "[DA SRV WLAN OTAP]  WIFI OTA FAIL ENCRYPT!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_ENCRYPT_SWITCH, "[DA SRV WLAN OTAP]  WIFI OTA FAIL ENCRYPT_SWITCH!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_AUTH, "[DA SRV WLAN OTAP]  WIFI OTA FAIL AUTH!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_AUTH_SWITCH, "[DA SRV WLAN OTAP]  WIFI OTA FAIL AUTH SWITCH!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_SSID, "[DA SRV WLAN OTAP]  WIFI OTA FAIL SSID!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_SSID_FORMAT, "[DA SRV WLAN OTAP]  WIFI OTA FAIL SSID FORMAT!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_NW_KEY, "[DA SRV WLAN OTAP]  WIFI OTA FAIL NW KEY!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_NW_KEY_FORMAT, "[DA SRV WLAN OTAP]  WIFI OTA FAIL NW_KEY_FORMAT!")      
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_WEP_KEY_LEN, "[DA SRV WLAN OTAP]  WIFI OTA FAIL WEP_KEY_LEN!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_FAIL_INDEX_INSTALL, "[DA SRV WLAN OTAP]  WIFI OTA FAIL Index of install!")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_RROV_IND_CALLBACK, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_prov_ind_callback(), cnf: [%d], replace_idx: [%d]")  
TRC_MSG(SRV_DTCNT_WLAN_OTAP_RECV_DOC, "[DA SRV WLAN OTAP] Start WLAN OTAP.")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_SEND_RSP, "[DA SRV WLAN OTAP] Finish WLAN OTAP, result: %d")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_ENCRYPTION, "[DA SRV WLAN OTAP] encryption: %d")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_AUTHENTICATION, "[DA SRV WLAN OTAP] authentication: %d")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_PRE_DISCARD_PROF, "[DA SRV WLAN OTAP] Discard profile during document extraction.")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_POST_DISCARD_PROF, "[DA SRV WLAN OTAP] Discard profile during post validation.")
TRC_MSG(SRV_DTCNT_WLAN_OTAP_EVENT_CALLBACK, "[DA SRV WLAN OTAP]  srv_dtcnt_wlan_event_callback(), result_evt: [%d], user_data: [%d]")  

TRC_MSG(SRV_DTCNT_WLAN_ADD_SNIF_JOB, "[DA SRV WLAN] Add sniffer job: %x, action: %d.")
TRC_MSG(SRV_DTCNT_WLAN_GET_SNIF_JOB, "[DA SRV WLAN] Get sniffer job: %x, action: %d.")
TRC_MSG(SRV_DTCNT_WLAN_SNIF_AP_INFO_HDL, "[DA SRV WLAN] srv_dtcnt_wlan_sniffer_ap_info_ind_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_MODE_CNF, "[DA SRV WLAN] srv_dtcnt_wlan_set_sniffer_mode_cnf_hdlr()")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_OFF_CNF, "[DA SRV WLAN] Sniffer off cnf. result: %d")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_ON_CNF, "[DA SRV WLAN] Sniffer on cnf. result: %d")
TRC_MSG(SRV_DTCNT_WLAN_WAIT_AP_INFO, "[DA SRV WLAN] Wait for AP information gathered by sniffer")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_OFF_REQ, "[DA SRV WLAN] Sniffer off req")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_ON_NP_REQ, "[DA SRV WLAN] Sniffer on req without param")
TRC_MSG(SRV_DTCNT_WLAN_SET_SNIF_ON_WP_REQ, "[DA SRV WLAN] Sniffer on req with param")

TRC_MSG(SRV_DTCNT_API_PROXY_PORT, "[DA SRV API]proxy is: %s, port is: %u")
TRC_MSG(SRV_DTCNT_API_QUERY_URL, "[DA SRV API]query URL: %s")
TRC_MSG(SRV_DTCNT_API_ADD_URL, "[DA SRV API]add URL: %s")
TRC_MSG(SRV_DTCNT_API_DEL_URL, "[DA SRV API]delete URL: %s")

TRC_MSG(SRV_DTCNT_WLAN_DEL_URL, "[DA SRV WLAN]read URL: %s")





#endif