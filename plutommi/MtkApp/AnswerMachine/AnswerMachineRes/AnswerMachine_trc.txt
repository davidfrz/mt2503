[APP NAME] = Auto Answer Machine
[SCOPE] = PLUTO
[MODULE] = MOD_MMI_MEDIA_APP
#start trace


TRC_MSG(MMI_TRC_AUTOAM_GET_PICKUP_DURATION, "[AUTOAM] mmi_autoam_get_pickup_duration time: %d")
TRC_MSG(MMI_TRC_AUTOAM_CHEC_SWITCH_ON, "[AUTOAM] mmi_autoam_check_switch_on value: %d")
TRC_MSG(MMI_TRC_AUTOAM_END_NOTIFY, "[AUTOAM] mmi_autoam_end_answer_notify result: %d")
TRC_MSG(MMI_TRC_AUTOAM_QUIT_SCREEN, "[AUTOAM] mmi_autoam_quit_screen")
TRC_MSG(MMI_TRC_AUTOAM_START_INCOMING, "[AUTOAM] mmi_autoam_start_answer_incoming")
TRC_MSG(MMI_TRC_AUTOAM_LOAD_FILE, "[AUTOAM] mmi_autoam_file_load_incall")
TRC_MSG(MMI_TRC_AUTOAM_LOAD_FILE_EXIST, "[AUTOAM] mmi_autoam_file_load_incall. File exist")
TRC_MSG(MMI_TRC_AUTOAM_LOAD_FILE_UNEXIST, "[AUTOAM] mmi_autoam_file_load_incall. File not exist. FS_ERROR: %d")
TRC_MSG(MMI_TRC_AUTOAM_CHECK_FORMAT_OK, "[AUTOAM] mmi_autoam_file_check_format ok. Total Msg: %d")
TRC_MSG(MMI_TRC_AUTOAM_CHECK_FORMAT_ERROR, "[AUTOAM] mmi_autoam_file_check_format fail. Last error: %d")
TRC_MSG(MMI_TRC_AUTOAM_FILE_RENEW_OK, "[AUTOAM] mmi_autoam_file_renew ok")
TRC_MSG(MMI_TRC_AUTOAM_FILE_RENEW_ERROR, "[AUTOAM] mmi_autoam_file_renew fail. Last error: %d")
TRC_MSG(MMI_TRC_AUTOAM_LOAD_FILE_FAIL, "[AUTOAM] mmi_autoam_file_load_incall Failed !!")
TRC_MSG(MMI_TRC_AUTOAM_RECORD_STATE, "[AUTOAM] mmi_autoam_record_state_switch state: %d")
TRC_MSG(MMI_TRC_AUTOAM_LOGIN_STATE, "[AUTOAM] mmi_autoam_login_state_switch state: %d")
TRC_MSG(MMI_TRC_AUTOAM_REMOTE_STATE, "[AUTOAM] mmi_autoam_remote_state_switch state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_PROMPT_ENTRY, "[AUTOAM] entry mmi_autoam_play_prompt. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_PROMPT_ID, "[AUTOAM] mmi_autoam_play_prompt get audio id: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_PROMPT_END, "[AUTOAM] mmi_autoam_play_prompt send request. result: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_DITONE_ENTRY, "[AUTOAM] entry mmi_autoam_play_di_tone. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_DITONE_END, "[AUTOAM] mmi_autoam_play_di_tone end")
TRC_MSG(MMI_TRC_AUTOAM_RESET_PLAY_CNXT, "[AUTOAM] mmi_autoam_reset_play_cnxt. state: %d, total number: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_FIND_NEXT, "[AUTOAM] mmi_autoam_play_find_next. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_FIND_NEXT_RET, "[AUTOAM] mmi_autoam_play_find_next. result: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_MSG_CALLBACK, "[AUTOAM] mmi_autoam_play_msg_callback. result: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_BG_CALLBACK, "[AUTOAM] mmi_autoam_play_bg_callback. result: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_START_KEY_DETECT, "[AUTOAM] mmi_autoam_start_key_detection. Timeout: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_STOP_KEY_DETECT, "[AUTOAM] mmi_autoam_stop_key_detection. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_FILE_CHECK_UNREAD, "[AUTOAM] mmi_autoam_file_check_unread. total msg num: %d")
TRC_MSG(MMI_TRC_AUTOAM_FILE_CHECK_UNREAD_ERROR, "[AUTOAM] mmi_autoam_file_check_unread has FS error!!. get last error: %d")
TRC_MSG(MMI_TRC_AUTOAM_FILE_CHECK_UNREAD_RET, "[AUTOAM] mmi_autoam_file_check_unread. unread msg num: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_RECORD_MSG, "[AUTOAM] mmi_autoam_play_record_msg. Play index: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_RECORD_MSG_FMT_ERROR, "[AUTOAM] mmi_autoam_play_record_msg. Get last eror: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_RECORD_MSG_RET, "[AUTOAM] mmi_autoam_play_record_msg. result: %d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_GREETING_CALLBACK, "[AUTOAM] mmi_autoam_play_greeting_callback. result: %d, state :%d")
TRC_MSG(MMI_TRC_AUTOAM_PLAY_DITONE_CALLBACK, "[AUTOAM] mmi_autoam_play_ditone_callback. result: %d")
TRC_MSG(MMI_TRC_AUTOAM_KEY_DETECT_CALLBACK, "[AUTOAM] mmi_autoam_key_detection_callback. Key: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_KEY_DETECT_TIMEOUT, "[AUTOAM] mmi_autoam_key_detection_timeout. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_RECORD_CALLBACK, "[AUTOAM] mmi_autoam_record_callback. result: %d, state: %d")
TRC_MSG(MMI_TRC_AUTOAM_WRITE_NEW_MSG, "[AUTOAM] mmi_autoam_file_write_new_msg begin. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_WRITE_NEW_MSG_1, "[AUTOAM] mmi_autoam_play_record_msg. pos: %d, msg_len: %d")
TRC_MSG(MMI_TRC_AUTOAM_WRITE_NEW_MSG_2, "[AUTOAM] mmi_autoam_play_record_msg. write file length: %d")
TRC_MSG(MMI_TRC_AUTOAM_PASSWD_CHECK, "[AUTOAM] mmi_autoam_login_passwd_check.")
TRC_MSG(MMI_TRC_AUTOAM_PASSWD_CHECK_1, "[AUTOAM] user input passwd tail error. input_buf: %d%d%d%d%d")
TRC_MSG(MMI_TRC_AUTOAM_PASSWD_CHECK_2, "[AUTOAM] mmi_autoam_login_passwd_check OK!")
TRC_MSG(MMI_TRC_AUTOAM_PASSWD_CHECK_3, "[AUTOAM] user input passwd error. input_buf: %d%d%d%d|%d%d%d%d%d")
TRC_MSG(MMI_TRC_AUTOAM_ANSWER_BY_HAND, "[AUTOAM] mmi_autoam_quit_screen. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_END_INCOMING, "[AUTOAM] mmi_autoam_end_answer_incoming. state: %d")
TRC_MSG(MMI_TRC_AUTOAM_RECORD_IN_CALL, "[AUTOAM] mmi_autoam_record_in_call.")
TRC_MSG(MMI_TRC_AUTOAM_RECORD_IN_CALL_1, "[AUTOAM] mmi_autoam_record_in_call. record request: %d")
TRC_MSG(MMI_TRC_AUTOAM_CHECK_SWITCH_DELETEING, "[AUTOAM] mmi_autoam_check_switch_on. Delete flag is on.")
TRC_MSG(MMI_TRC_AUTOAM_CHECK_SWITCH_DRIVE_PUBLIC, "[AUTOAM] mmi_autoam_check_switch_on. Public drive not valid.")
TRC_MSG(MMI_TRC_AUTOAM_CHECK_SWITCH_DRIVE_SETTING, "[AUTOAM] mmi_autoam_check_switch_on. Setting drive not valid.")
TRC_MSG(MMI_TRC_AUTOAM_SET_MUTE, "[AUTOAM] mmi_autoam_set_mute.")
TRC_MSG(MMI_TRC_AUTOAM_SET_UNMUTE, "[AUTOAM] mmi_autoam_set_unmute.")
TRC_MSG(MMI_TRC_AUTOAM_GREETING_SCREEN_DELETE_CALLBACK, "[AUTOAM] mmi_autoam_greeting_delete_callback.")
TRC_MSG(MMI_TRC_AUTOAM_AUDIO_SWAP2BT, "[AUTOAM] mmi_autoam_set_unmute. Audio swap to BT")
TRC_MSG(MMI_TRC_AUTOAM_CTM_IS_OPEN, "[AUTOAM] mmi_autoam_loud_option. CTM is ON")