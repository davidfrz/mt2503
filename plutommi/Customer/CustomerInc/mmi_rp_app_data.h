/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *   mmi_rp_app_data.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   Resource populate function generated by XML resgen
 *
 * Author:
 * -------
 * -------
 *
 *******************************************************************************/    
#ifndef __MMI_RP_APP_DATA_H__
#define __MMI_RP_APP_DATA_H__

#include "MMI_features.h"
#include "MMIDataType.h"
#include "vfx_sys_config.h"
#include "FileMgrGProt.h"
#include "IdleMemCfg.h"
#include "Watch_barrel.h"
#include "vmopt.h"
#include "VdoplyGprot.h"
#include "ImgViewerConfig.h"
#include "med_global.h"
#include "..\\plutommi\\CUI\FSEditorCui\\FSEditorCui.h"
#include "gdi_const.h"
#include "..\\plutommi\\CUI\\InlineCui\\InlineCui.h"

#undef max
#undef min

/* __SKIP_MACRO_EXPANSION__ is used in objcheck.pl to get more readable output */
#ifdef __SKIP_MACRO_EXPANSION__
// undef macro to skip here
#else
#define max(_a, _b) (((_a) > (_b)) ? (_a) : (_b))
#define max1(_1) (_1)
#define max2(_1, _2) max(_1, _2)
#define max3(_1, _2, _3) max(_1, max(_2, _3))
#define max4(_1, _2, _3, _4) max(_1, max3(_2, _3, _4))
#define max5(_1, _2, _3, _4, _5) max(_1, max4(_2, _3, _4, _5))
#define max6(_1, _2, _3, _4, _5, _6) max(_1, max5(_2, _3, _4, _5, _6))
#define max7(_1, _2, _3, _4, _5, _6, _7) max(_1, max6(_2, _3, _4, _5, _6, _7))
#define max8(_1, _2, _3, _4, _5, _6, _7, _8) max(_1, max7(_2, _3, _4, _5, _6, _7, _8))
#define max9(_1, _2, _3, _4, _5, _6, _7, _8, _9) max(_1, max8(_2, _3, _4, _5, _6, _7, _8, _9))
#define max10(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10) max(_1, max9(_2, _3, _4, _5, _6, _7, _8, _9, _10))
#define max11(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11) max(_1, max10(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11))
#define max12(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12) max(_1, max11(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12))
#define max13(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13) max(_1, max12(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13))
#define max14(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14) max(_1, max13(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14))
#define max15(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15) max(_1, max14(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15))
#define max16(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16) max(_1, max15(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16))
#define max17(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17) max(_1, max16(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17))
#define max18(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18) max(_1, max17(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18))
#define max19(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19) max(_1, max18(_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19))
#define min(_a, _b) (((_a) > (_b)) ? (_b) : (_a))
#define ASM_FG_EXTRA(_vrt_mem_factor)	((U32)(((_vrt_mem_factor)*VRT_MEM_UNIT_SIZE)+0.5))
#endif /* __SKIP_MACRO_EXPANSION__ */

enum {
    /* undefined features */
    ASM_BASE_SIZE_APP_CAMERA = (0),
    ASM_FG_SIZE_APP_CAMERA = (0),
    ASM_TOTAL_SIZE_APP_CAMERA = (0),

    ASM_BASE_SIZE_APP_MEDPLY = (0),
    ASM_FG_SIZE_APP_MEDPLY = (0),
    ASM_TOTAL_SIZE_APP_MEDPLY = (0),

    ASM_BASE_SIZE_APP_OPERA = (0),
    ASM_FG_SIZE_APP_OPERA = (0),
    ASM_TOTAL_SIZE_APP_OPERA = (0),

    ASM_BASE_SIZE_APP_VENUS_SCREEN_LOCK_KEY = (0),
    ASM_FG_SIZE_APP_VENUS_SCREEN_LOCK_KEY = (0),
    ASM_TOTAL_SIZE_APP_VENUS_SCREEN_LOCK_KEY = (0),

    ASM_BASE_SIZE_APP_VENUS_WALLPAPER = (0),
    ASM_FG_SIZE_APP_VENUS_WALLPAPER = (0),
    ASM_TOTAL_SIZE_APP_VENUS_WALLPAPER = (0),

    ASM_BASE_SIZE_CUI_CAMERACUI = (0),
    ASM_FG_SIZE_CUI_CAMERACUI = (0),
    ASM_TOTAL_SIZE_CUI_CAMERACUI = (0),

    ASM_BASE_SIZE_CUI_IMAGE_CLIP = (0),
    ASM_FG_SIZE_CUI_IMAGE_CLIP = (0),
    ASM_TOTAL_SIZE_CUI_IMAGE_CLIP = (0),

    ASM_BASE_SIZE_SRV_MDI_STREAMING = (0),
    ASM_FG_SIZE_SRV_MDI_STREAMING = (0),
    ASM_TOTAL_SIZE_SRV_MDI_STREAMING = (0),

    /* APP_FILEMANAGER */
    ASM_HEAP_SIZE_APP_FILEMANAGER = (MMI_FMGR_APP_MEM_SIZE),
    ASM_BASE_SIZE_APP_FILEMANAGER = (ASM_HEAP_SIZE_APP_FILEMANAGER),
    ASM_FG_SIZE_APP_FILEMANAGER = (0),
    ASM_TOTAL_SIZE_APP_FILEMANAGER = (ASM_BASE_SIZE_APP_FILEMANAGER + ASM_FG_SIZE_APP_FILEMANAGER),

    /* APP_GB_WINGUO */
    ASM_HEAP_SIZE_APP_GB_WINGUO = (0),
    ASM_BASE_SIZE_APP_GB_WINGUO = (300*1024),
    ASM_APP_FG_SIZE_APP_GB_WINGUO = (ASM_FG_EXTRA(VFX_SYS_APP_DEFAULT_VRT_CACHE_FACTOR)),
    ASM_FG_SIZE_APP_GB_WINGUO = (ASM_APP_FG_SIZE_APP_GB_WINGUO),
    ASM_TOTAL_SIZE_APP_GB_WINGUO = (ASM_BASE_SIZE_APP_GB_WINGUO + ASM_FG_SIZE_APP_GB_WINGUO),

    /* APP_IDLE */
    ASM_HEAP_SIZE_APP_IDLE = (IDLE_ASM_HEAP_SIZE + ASM_BASE_SIZE_APP_VENUS_WALLPAPER),
    ASM_BASE_SIZE_APP_IDLE = (ASM_HEAP_SIZE_APP_IDLE),
    ASM_APP_FG_SIZE_APP_IDLE = (VFX_SYS_MEM_VRT_SIZE+IDLE_ASM_FG_SIZE + ASM_FG_EXTRA(IDLE_ASM_VRT_MEM_FACTOR)),
    ASM_FG_SIZE_APP_IDLE = (ASM_APP_FG_SIZE_APP_IDLE),
    ASM_TOTAL_SIZE_APP_IDLE = (ASM_BASE_SIZE_APP_IDLE + ASM_FG_SIZE_APP_IDLE),

    /* APP_IDLE_SWATCH */
    ASM_HEAP_SIZE_APP_IDLE_SWATCH = (SMART_WATCH_MAINMENU_MEM_SIZE),
    ASM_BASE_SIZE_APP_IDLE_SWATCH = (ASM_HEAP_SIZE_APP_IDLE_SWATCH),
    ASM_FG_SIZE_APP_IDLE_SWATCH = (0),
    ASM_TOTAL_SIZE_APP_IDLE_SWATCH = (ASM_BASE_SIZE_APP_IDLE_SWATCH + ASM_FG_SIZE_APP_IDLE_SWATCH),

    /* APP_IMAGEVIEWER */
    ASM_HEAP_SIZE_APP_IMAGEVIEWER = (0),
    ASM_HEAP_SIZE_CUI_IMAGEVIEWER = (MAX_FS_SORT_MEM_SIZE),
    ASM_BASE_SIZE_CUI_IMAGEVIEWER = (ASM_HEAP_SIZE_CUI_IMAGEVIEWER),
    ASM_CUI_BASE_SIZE_APP_IMAGEVIEWER = (ASM_BASE_SIZE_CUI_IMAGEVIEWER),
    ASM_BASE_SIZE_APP_IMAGEVIEWER = (ASM_CUI_BASE_SIZE_APP_IMAGEVIEWER),
    ASM_APP_FG_SIZE_CUI_IMAGEVIEWER = (IV_TOTAL_SCREEN_MEMORY_SIZE + IV_TOTAL_MED_MEMORY_SIZE),
    ASM_FG_SIZE_CUI_IMAGEVIEWER = (ASM_APP_FG_SIZE_CUI_IMAGEVIEWER),
    ASM_CUI_FG_SIZE_APP_IMAGEVIEWER = (ASM_FG_SIZE_CUI_IMAGEVIEWER),
    ASM_FG_SIZE_APP_IMAGEVIEWER = (ASM_CUI_FG_SIZE_APP_IMAGEVIEWER),
    ASM_TOTAL_SIZE_APP_IMAGEVIEWER = (ASM_BASE_SIZE_APP_IMAGEVIEWER + ASM_FG_SIZE_APP_IMAGEVIEWER),

    /* APP_MRE */
    ASM_HEAP_SIZE_APP_MRE = (MRE_SYS_ASM_APP_MEMPOOL_SIZE),
    ASM_BASE_SIZE_APP_MRE = (ASM_HEAP_SIZE_APP_MRE),
    ASM_FG_SIZE_APP_MRE = (0),
    ASM_TOTAL_SIZE_APP_MRE = (ASM_BASE_SIZE_APP_MRE + ASM_FG_SIZE_APP_MRE),

    /* APP_PHONEBOOK */
    ASM_HEAP_SIZE_APP_PHONEBOOK = (0),
    ASM_CUI_BASE_SIZE_APP_PHONEBOOK = (max(0,0)),
    ASM_BASE_SIZE_APP_PHONEBOOK = (ASM_CUI_BASE_SIZE_APP_PHONEBOOK),
    ASM_CUI_FG_SIZE_APP_PHONEBOOK = (max(max(0,0), ASM_CUI_BASE_SIZE_APP_PHONEBOOK)-ASM_CUI_BASE_SIZE_APP_PHONEBOOK),
    ASM_FG_SIZE_APP_PHONEBOOK = (ASM_CUI_FG_SIZE_APP_PHONEBOOK),
    ASM_TOTAL_SIZE_APP_PHONEBOOK = (ASM_BASE_SIZE_APP_PHONEBOOK + ASM_FG_SIZE_APP_PHONEBOOK),

    /* APP_VDOPLY */
    ASM_HEAP_SIZE_APP_VDOPLY = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY = (MED_VDOPLY_BASE_MEM),
    ASM_EXTRA_BASE_SIZE_APP_VDOPLY = (max(ASM_BASE_SIZE_SRV_MDI_VDOPLY, ASM_BASE_SIZE_SRV_MDI_STREAMING)),
    ASM_BASE_SIZE_APP_VDOPLY = (ASM_HEAP_SIZE_APP_VDOPLY + ASM_EXTRA_BASE_SIZE_APP_VDOPLY),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY = (MED_VDOPLY_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY),
    ASM_APP_FG_SIZE_APP_VDOPLY = (VDOPLY_OSD_BUFFER_SIZE + max(ASM_FG_SIZE_SRV_MDI_VDOPLY, ASM_FG_SIZE_SRV_MDI_STREAMING) + ASM_FG_EXTRA(VFX_SYS_APP_DEFAULT_VRT_CACHE_FACTOR)),
    ASM_FG_SIZE_APP_VDOPLY = (ASM_APP_FG_SIZE_APP_VDOPLY),
    ASM_TOTAL_SIZE_APP_VDOPLY = (ASM_BASE_SIZE_APP_VDOPLY + ASM_FG_SIZE_APP_VDOPLY),

    /* CUI_IMAGEVIEWER */
    ASM_TOTAL_SIZE_CUI_IMAGEVIEWER = (ASM_BASE_SIZE_CUI_IMAGEVIEWER + ASM_FG_SIZE_CUI_IMAGEVIEWER),

    /* SRV_FULLSCREEN_EDITOR */
    ASM_HEAP_SIZE_SRV_FULLSCREEN_EDITOR = (0),
    ASM_BASE_SIZE_SRV_FULLSCREEN_EDITOR = (FSEditor_DATA_ASM_SIZE),
    ASM_FG_SIZE_SRV_FULLSCREEN_EDITOR = (0),
    ASM_TOTAL_SIZE_SRV_FULLSCREEN_EDITOR = (ASM_BASE_SIZE_SRV_FULLSCREEN_EDITOR + ASM_FG_SIZE_SRV_FULLSCREEN_EDITOR),

    /* SRV_GDI */
    ASM_HEAP_SIZE_SRV_GDI = (0),
    ASM_BASE_SIZE_SRV_GDI = (GDI_ASM_MEM_SIZE),
    ASM_APP_FG_SIZE_SRV_GDI = (0),
    ASM_FG_SIZE_SRV_GDI = (ASM_APP_FG_SIZE_SRV_GDI),
    ASM_TOTAL_SIZE_SRV_GDI = (ASM_BASE_SIZE_SRV_GDI + ASM_FG_SIZE_SRV_GDI),

    /* SRV_INLINE_EDITOR */
    ASM_HEAP_SIZE_SRV_INLINE_EDITOR = (0),
    ASM_BASE_SIZE_SRV_INLINE_EDITOR = (INLINE_CUI_INSTANCE_SIZE),
    ASM_FG_SIZE_SRV_INLINE_EDITOR = (0),
    ASM_TOTAL_SIZE_SRV_INLINE_EDITOR = (ASM_BASE_SIZE_SRV_INLINE_EDITOR + ASM_FG_SIZE_SRV_INLINE_EDITOR),

    /* SRV_MDI_AUDPLY */
    ASM_HEAP_SIZE_SRV_MDI_AUDPLY = (0),
    ASM_BASE_SIZE_SRV_MDI_AUDPLY = (MED_AUD_PLY_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_AUDPLY = (MED_AUD_PLY_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_AUDPLY = (ASM_APP_FG_SIZE_SRV_MDI_AUDPLY),
    ASM_TOTAL_SIZE_SRV_MDI_AUDPLY = (ASM_BASE_SIZE_SRV_MDI_AUDPLY + ASM_FG_SIZE_SRV_MDI_AUDPLY),

    /* SRV_MDI_AUD_INFO */
    ASM_HEAP_SIZE_SRV_MDI_AUD_INFO = (0),
    ASM_BASE_SIZE_SRV_MDI_AUD_INFO = (MED_AUD_INFO_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_AUD_INFO = (MED_AUD_INFO_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_AUD_INFO = (ASM_APP_FG_SIZE_SRV_MDI_AUD_INFO),
    ASM_TOTAL_SIZE_SRV_MDI_AUD_INFO = (ASM_BASE_SIZE_SRV_MDI_AUD_INFO + ASM_FG_SIZE_SRV_MDI_AUD_INFO),

    /* SRV_MDI_VDOPLY */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY = (0),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY = (ASM_BASE_SIZE_SRV_MDI_VDOPLY + ASM_FG_SIZE_SRV_MDI_VDOPLY),

    /* SRV_MDI_VDOPLY_A */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_A = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_A = (MED_VDOPLY_A_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_A = (MED_VDOPLY_A_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_A = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_A),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_A = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_A + ASM_FG_SIZE_SRV_MDI_VDOPLY_A),

    /* SRV_MDI_VDOPLY_CIF */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_CIF = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_CIF = (MED_VDOPLY_CIF_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_CIF = (MED_VDOPLY_CIF_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_CIF = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_CIF),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_CIF = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_CIF + ASM_FG_SIZE_SRV_MDI_VDOPLY_CIF),

    /* SRV_MDI_VDOPLY_INFO */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_INFO = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_INFO = (MED_VDOPLY_INFO_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_INFO = (MED_VDOPLY_INFO_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_INFO = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_INFO),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_INFO = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_INFO + ASM_FG_SIZE_SRV_MDI_VDOPLY_INFO),

    /* SRV_MDI_VDOPLY_MP4 */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_MP4 = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_MP4 = (MED_VDOPLY_MP4_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_MP4 = (MED_VDOPLY_MP4_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_MP4 = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_MP4),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_MP4 = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_MP4 + ASM_FG_SIZE_SRV_MDI_VDOPLY_MP4),

    /* SRV_MDI_VDOPLY_PREVIEW */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_PREVIEW = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_PREVIEW = (MED_VDOPLY_PREVIEW_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_PREVIEW = (MED_VDOPLY_PREVIEW_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_PREVIEW = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_PREVIEW),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_PREVIEW = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_PREVIEW + ASM_FG_SIZE_SRV_MDI_VDOPLY_PREVIEW),

    /* SRV_MDI_VDOPLY_QVGA */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_QVGA = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_QVGA = (MED_VDOPLY_QVGA_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_QVGA = (MED_VDOPLY_QVGA_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_QVGA = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_QVGA),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_QVGA = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_QVGA + ASM_FG_SIZE_SRV_MDI_VDOPLY_QVGA),

    /* SRV_MDI_VDOPLY_QVGA_MPEG4SP */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP = (MED_VDOPLY_QVGA_MPEG4SP_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP = (MED_VDOPLY_QVGA_MPEG4SP_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP + ASM_FG_SIZE_SRV_MDI_VDOPLY_QVGA_MPEG4SP),

    /* SRV_MDI_VDOPLY_SUBTITLE */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_SUBTITLE = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_SUBTITLE = (MED_VDOPLY_SUBTITLE_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_SUBTITLE = (MED_VDOPLY_SUBTITLE_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_SUBTITLE = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_SUBTITLE),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_SUBTITLE = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_SUBTITLE + ASM_FG_SIZE_SRV_MDI_VDOPLY_SUBTITLE),

    /* SRV_MDI_VDOPLY_V */
    ASM_HEAP_SIZE_SRV_MDI_VDOPLY_V = (0),
    ASM_BASE_SIZE_SRV_MDI_VDOPLY_V = (MED_VDOPLY_V_BASE_MEM),
    ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_V = (MED_VDOPLY_V_FG_MEM),
    ASM_FG_SIZE_SRV_MDI_VDOPLY_V = (ASM_APP_FG_SIZE_SRV_MDI_VDOPLY_V),
    ASM_TOTAL_SIZE_SRV_MDI_VDOPLY_V = (ASM_BASE_SIZE_SRV_MDI_VDOPLY_V + ASM_FG_SIZE_SRV_MDI_VDOPLY_V),

    /* total number of APP declared */
    ASM_TOTAL_NUM_APP = (26),

    /* concurrent info */
    ASM_CONC_TOTAL_SIZE_APP_CAMERA_APP_IMAGEVIEWER = (max(ASM_BASE_SIZE_APP_CAMERA + ASM_FG_SIZE_APP_CAMERA, ASM_BASE_SIZE_APP_CAMERA + ASM_BASE_SIZE_APP_IMAGEVIEWER + ASM_FG_SIZE_APP_IMAGEVIEWER)),

    ASM_CONC_TOTAL_SIZE_APP_OPERA_APP_MEDPLY = (max(ASM_BASE_SIZE_APP_OPERA + ASM_FG_SIZE_APP_OPERA, ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_MEDPLY + ASM_FG_SIZE_APP_MEDPLY)),

    ASM_CONC_TOTAL_SIZE_APP_OPERA_APP_MEDPLY_APP_VENUS_SCREEN_LOCK_KEY = (max(ASM_BASE_SIZE_APP_OPERA + ASM_FG_SIZE_APP_OPERA, max(ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_MEDPLY + ASM_FG_SIZE_APP_MEDPLY, ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_MEDPLY + ASM_BASE_SIZE_APP_VENUS_SCREEN_LOCK_KEY + ASM_FG_SIZE_APP_VENUS_SCREEN_LOCK_KEY))),

    ASM_CONC_TOTAL_SIZE_APP_OPERA_APP_VDOPLY = (max(ASM_BASE_SIZE_APP_OPERA + ASM_FG_SIZE_APP_OPERA, ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_VDOPLY + ASM_FG_SIZE_APP_VDOPLY)),

    ASM_CONC_TOTAL_SIZE_APP_OPERA_APP_VDOPLY_APP_VENUS_SCREEN_LOCK_KEY = (max(ASM_BASE_SIZE_APP_OPERA + ASM_FG_SIZE_APP_OPERA, max(ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_VDOPLY + ASM_FG_SIZE_APP_VDOPLY, ASM_BASE_SIZE_APP_OPERA + ASM_BASE_SIZE_APP_VDOPLY + ASM_BASE_SIZE_APP_VENUS_SCREEN_LOCK_KEY + ASM_FG_SIZE_APP_VENUS_SCREEN_LOCK_KEY))),

    ASM_SIZE_ENUM_MAX
};

#include "mmi_rp_app_data_def.h"
#endif /* __MMI_RP_APP_DATA_H__ */

