[APP NAME] = BTNOTI
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_CONN_APP
TRC_MSG(TRC_SRV_BT_NOTIFY_NOT_PARSER,                    "[BTNOTIFYSRV]Don't need to parse this part")
TRC_MSG(TRC_SRV_BT_NOTIFY_ELEM_END,                      "[BTNOTIFYSRV]srv_bt_notify_elem_end_hdlr(), error = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_END,                      "[BTNOTIFYSRV]srv_bt_notify_data_hdlr() error = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_ELEM_CALLBACK,                 "[BTNOTIFYSRV]srv_bt_notify_elem_end_hdlr(), callback = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_CALLBACK,                 "[BTNOTIFYSRV]srv_bt_notify_data_hdlr() callback = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_PARSE_BEFORE_START,        "[BTNOTIFYSRV]srv_bt_notify_xml_parse() is_run = %d, para_flag = %d, callback = %x, data = %x")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_PARSE_START,               "[BTNOTIFYSRV]srv_bt_notify_xml_parse() start, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_PARSE_DONE,                "[BTNOTIFYSRV]srv_bt_notify_xml_parse() done, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_GEN_HEADER,                "[BTNOTIFYSRV]srv_bt_notify_xml_gen_header() category = %d, subtype = %d, msg_id = %d, action = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_BEFORE_GEN,                "[BTNOTIFYSRV]srv_bt_notify_xml_generator() before start")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_GEN,                       "[BTNOTIFYSRV]srv_bt_notify_xml_generator() xml_gen_handle = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_GEN_RES,                   "[BTNOTIFYSRV]srv_bt_notify_xml_generator() ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_XML_PARSE_ICON,                "[BTNOTIFYSRV]srv_bt_notify_node_icon() fs_error = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_CAPC_NOTIFYAPP,                "[BTNOTIFYSRV]recv_cap_notify_app_with_retcode() retcode = %d, isnumber = %d ")
TRC_MSG(TRC_SRV_BT_NOTIFY_CAPC_NOTIFYAPP_USERDATA,       "[BTNOTIFYSRV]recv_cap_notify_app_with_userdata() user_data = %x, retcode = %d, isnumber = %d ")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_INIT_DONE,                "[BTNOTIFYSRV]srv_bt_noti_recv_init() Done")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_XML_CALLBACK,       "[BTNOTIFYSRV]recv_parse_xml_callback() para_flag = %d, data = %x, chnl_num = %d, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_HEADER_BEGIN,       "[BTNOTIFYSRV]recv_parse_data() Begin, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_ERR_1,              "[BTNOTIFYSRV]recv_parse_data() error: xml file not exist, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_ERR_2,              "[BTNOTIFYSRV]recv_parse_data() error: parse header error, package lost, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_ERR_3,              "[BTNOTIFYSRV]recv_parse_data() error: xml file integrity check error, chnl_num = %d, expected size = %d, parse size = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_HEADER_END,         "[BTNOTIFYSRV]recv_parse_data() End, chnl_num = %d, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SEND_VERN_CMD,            "[BTNOTIFYSRV]srv_bt_noti_send_cmd_ext() chnl_num = %d, send version cmd ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_IDLE_HLDR_ERR_1,          "[BTNOTIFYSRV]recv_fsm_idle_hldr() error: failed to find sync bytes, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_IDLE_HLDR_OK,             "[BTNOTIFYSRV]recv_fsm_idle_hldr() find sync bytes, chnl_num = %d, buf_len = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_DATA_CMD_HLDR_OK,         "[BTNOTIFYSRV]recv_fsm_data_cmd_hldr() chnl_num = %d, xml_file_size = %d, counter = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MAPD_CMD_HLDR_OK,         "[BTNOTIFYSRV]recv_fsm_mapd_hldr() cmd_type = %d, para_count = %d, file_ext_type = %d, file_size = %d, ret = %d, counter = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CAPC_CMD_HLDR_OK,         "[BTNOTIFYSRV]recv_fsm_capc_hldr() chnl_num = %d, cmd_type = %d, para_count = %d, file_size = %d, ret = %d, counter = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MAPX_CMD_HLDR_OK,         "[BTNOTIFYSRV]recv_fsm_mapx_hldr() chnl_num = %d, ret_code = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_REQV_CMD_HLDR_OK,         "[BTNOTIFYSRV]srv_bt_noti_recv_fsm_reqv_cmd_hldr() chnl_num = %d, ret_code = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_EXT_CMD_HLDR,             "[BTNOTIFYSRV]recv_fsm_ext_cmd_hldr() chnl_num = %d, parse_ret = %d, err_code = %d, data_type = %d, data_len = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SAVE_FILE,           	 "[BTNOTIFYSRV]recv_save_data() start_pos = %d, recv = %d, written = %d, to_write = %d, write_done = %d, fs_err = %d, xml_file_len = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SAVE_EXT_DATA,          	 "[BTNOTIFYSRV]recv_save_ext_buffer() start_pos = %d, recv_len = %d, wrritten_size = %d, data_len = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_EXT_CMD_HLDR_ERR,         "[BTNOTIFYSRV]recv_fsm_ext_cmd_hldr() chnl_num = %d, data length overcome max buffer length, service will save data to file")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MREE_FILE_DONE,           "[BTNOTIFYSRV]installer_data_notify() chnl_num = %d, total mre file size = %d, received file size = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MREE_FILE_START,		     "[BTNOTIFYSRV]installer_data_notify() chnl_num = %d, receiving, size = %d, quota left = %d, fs_ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_START_INSTALL_MREE_FILE,  "[BTNOTIFYSRV]installer_data_notify() chnl_num = %d, start install, srv error = %d, install result = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_EXT_DATA_CALLBACK,        "[BTNOTIFYSRV]recv_send_ext_data_notify() callback chnl_num = %d, data_type = %d, data_len = %d, error = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_REGISTER_CALLBACK,        "[BTNOTIFYSRV]srv_bt_noti_register_callback() idx = %d, cb = %x, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CMD_HLDR_ERR_1,           "[BTNOTIFYSRV]recv_fsm_cmd_hldr() error: chnl_num = %d, cmd_buf_invalid")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CMD_HLDR_ERR_2,           "[BTNOTIFYSRV]recv_fsm_cmd_hldr() error: chnl_num = %d, cmd_buf_len > %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CMD_HLDR_ERR_3,           "[BTNOTIFYSRV]recv_fsm_cmd_hldr() error: chnl_num = %d, cmd_parse_ret = %d, is_sync = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FSM_HDLR_IN,              "[BTNOTIFYSRV]recv_receive_data_fsm() chnl_num = %d, status = %d <--")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FSM_HDLR_OUT,             "[BTNOTIFYSRV]recv_receive_data_fsm() chnl_num = %d, status = %d -->")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_RECEIVE_DATA,             "[BTNOTIFYSRV]recv_receive_data() chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CONNECT_SUCCESS,          "[BTNOTIFYSRV]recv_handle_connect_ind() chnl_num = %d, conn_id = %d, result = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_DISCONNECT,               "[BTNOTIFYSRV]recv_handle_disconnect_ind() chnl_num = %d, connect_id = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_READY_TO_READ,            "[BTNOTIFYSRV]recv_handle_ready_to_read_ind() chnl_num = %d, conn_id = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_READY_TO_WRITE,           "[BTNOTIFYSRV]recv_handle_ready_to_write_ind() chnl_num = %d, conn_id = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_EVENT_HDLR,               "[BTNOTIFYSRV]recv_event_handler() evt_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SYNC_TIME,                "[BTNOTIFYSRV]recv_update_time() time = %4d-%2d-%2d %2d:%2d:%2d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_SYNC_TIME, 	     "[BTNOTIFYSRV]recv_parse_time_sync() ret = %d, time = %d, timezone = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PARSE_ALARM_TIME, 	     "[BTNOTIFYSRV]recv_parse_alarm_setting() ret = %d, idx = %d, weekday = %d, hour = %d, min = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SYNC_TIME_START,          "[BTNOTIFYSRV]recv_sync_device_start() chnl_num=%d,cur_tz=%d,rmt_tz=%d,cur_time=%d,rmt_time=%d,time_gap=%dsec.")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SYNC_TIME_CALLBACK,       "[BTNOTIFYSRV]recv_sync_device_callback() chnl_num = %d, need_sync = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SYNC_FINISHED,            "[BTNOTIFYSRV]sync device finished, chnl_num = %d, result = %d, send comfirm cmd back to remote device")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SEND_DATA_ERROR, 	     "[BTNOTIFYSRV]recv_write_data() status error, chnl_num = %d, connect state = %d, sync state = %d, ver_send_state = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SEND_XML_DATA_FINISHED, 	 "[BTNOTIFYSRV]recv_send_xml() chnl_num = %d, pre_header = %d bytes, header = %d, xml_file = %d, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_SEND_CMD_DATA_FINISHED, 	 "[BTNOTIFYSRV]srv_bt_noti_recv_send_cmd() chnl_num = %d, pre_header:%d, header:%d, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MOVE_BUFFER_TO_HEAD, 	 "[BTNOTIFYSRV]recv_move_buffer_to_head() chnl_num = %d, pos:%d, recv_len:%d, left:%d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_MAX_SYNCED_CHANNLE_REACHED, 	    "[BTNOTIFYSRV]max synced channle reached %d!")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CHECK_CONNECTION, 	            "[BTNOTIFYSRV]srv_bt_noti_check_connection() is_connect:%d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CHECK_SYNC_CONNECTION, 	        "[BTNOTIFYSRV]srv_bt_noti_check_sync_connection() is_connect:%d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_GET_CONNECTION_NUM, 	            "[BTNOTIFYSRV]get_connection_number() num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_GET_BT_ADDR_BY_CONN_INDEX, 	    "[BTNOTIFYSRV]get_bt_device_addr_by_conn_index(() index =%d, total_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CHECK_CONNECTION_EXT, 	        "[BTNOTIFYSRV]srv_bt_noti_check_connection_ext() is_connect:%d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_CHECK_SYNC_CONNECTION_EXT_BY_SRC,"[BTNOTIFYSRV]check_sync_connection_ext_by_source(), source = %d, is_connect = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_GET_SYNC_CONNECTION_NUM, 	    "[BTNOTIFYSRV]get_sync_connection_number() num = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_PRINT_CONTEXT_CHANNEL, 	        "[BTNOTIFYSRV]chnnel_num = %d, is_vern = %d, is_sync = %d, is_connect = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FIND_CONTEXT_CHANNEL, 	        "[BTNOTIFYSRV]find_cntx_channel_by_device_addr() chnnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FIND_CONTEXT_CHANNEL_BY_SOURCE, 	        "[BTNOTIFYSRV]find_cntx_channel_by_device_addr_and_source() chnnl_num = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FIND_SYNC_CONTEXT_CHANNEL, 	        "[BTNOTIFYSRV]find_synced_cntx_channel_by_device_addr() chnnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_RECV_FIND_CONNECT_CONTEXT_CHANNEL, 	        "[BTNOTIFYSRV]find_connected_cntx_channel_by_device_addr() chnnl_num = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_DISP_SET_INTERRUPT_EVENT_HANDLER,           "[BTNOTIFYSRV]disp_set_interrupt_event_handler() event_id = %d, category = %d, event_func = 0x%x, curr_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DISP_CLEAR_INTERRUPT_EVENT_HANDLER,         "[BTNOTIFYSRV]disp_clear_interrupt_event_handler() event_id = %d, event_func = 0x%x, curr_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DISP_EXEC_INTERRUPT_EVENT_HANDLER,          "[BTNOTIFYSRV]disp_exec_interrupt_event() event_id = %d, category = %d, curr_num = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_GET_MSG_NUM,              "[BTNOTIFYSRV]data_get_msg_num() chnl_num = %d, msg_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_GET_MSG_INFO,             "[BTNOTIFYSRV]data_get_msg_info() chnl_num = %d, index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_GET_MSG_INFO_REF,         "[BTNOTIFYSRV]data_get_msg_info_ref() chnl_num = %d, index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_DELETE_MSG,               "[BTNOTIFYSRV]data_delete_msg() chnl_num = %d, index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_DELETE_MSG_BY_NOTI_ID,    "[BTNOTIFYSRV]data_delete_msg() chnl_num = %d, noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_DELETE_ALL,               "[BTNOTIFYSRV]data_delete_all() chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_UPDATE_REMOTE_BLOCK_DELETE_MSG,    "[BTNOTIFYSRV]data_block_remote_notification() delete msg sent from appId = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_UPDATE_REMOTE_BLOCK_PARSE_RESULT,  "[BTNOTIFYSRV]data_block_remote_notification() parse_ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_SEND_SMS_PARSE_RESULT,    "[BTNOTIFYSRV]data_send_sms() parse_ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_PARSE_XML_CALLBACK,       "[BTNOTIFYSRV]data_parse_xml_callback() chnl_num = %d, para_flag = %d, data = %x, user_data = %x, ret = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_PARSE_XML_CALLBACK_ERR_1, "[BTNOTIFYSRV]data_parse_xml_callback() Error: chnl_num = %d, invalid node index, package lost")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_PARSE_XML_CALLBACK_ERR_2, "[BTNOTIFYSRV]data_parse_xml_callback() Error: chnl_num = %d, fail to rename icon file")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_NEW_MSG,           "[BTNOTIFYSRV]data_handle_new_msg() chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_NEW_MSG_ERR_1,     "[BTNOTIFYSRV]data_handle_new_msg() Error: busy parse body, package lost, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_NEW_MSG_ERR_2,     "[BTNOTIFYSRV]data_handle_new_msg() Error: parse category error, unknown category, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_NEW_MSG_ERR_3,     "[BTNOTIFYSRV]data_handle_new_msg() Error: fail to rename xml file, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_NEW_MSG_ERR_4,     "[BTNOTIFYSRV]data_handle_new_msg() Error: parse body error, chnl_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_DEL_MSG,           "[BTNOTIFYSRV]data_handle_del_msg() chnl_num = %d, msg_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_ADD_MSG,           "[BTNOTIFYSRV]data_handle_add_msg() chnl_num = %d, source = %d, ANCS_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_HANDLE_CONNECTED,         "[BTNOTIFYSRV]data_handle_connected() chnl_num = %d, source = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_GET_NOTI_ID_BY_ANCS_ID,   "[BTNOTIFYSRV]data_get_noti_id_by_ancs_id() ancs_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_GET_NOTI_ID_BY_ANCS_ID_RESULT,   "[BTNOTIFYSRV]data_get_noti_id_by_ancs_id() noti_id = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_SEND_REFRESH,             "[BTNOTIFYSRV]data_send_refresh() refresh_type = %d, noti_id = %d, refresh_reason = %d, is_listmgr = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_EVENT_HDLR,               "[BTNOTIFYSRV]data_event_hdlr() evt_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_EXT_EVENT_HDLR,           "[BTNOTIFYSRV]data_ext_event_hdlr() evt_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_MISSED_CALL_COUNT,		 "[BTNOTIFYSRV]data_notify_missed_call() missed_call_count=%d")
TRC_MSG(TRC_SRV_BT_NOTIFY_UPDATE_REMOTE_MISSED_CALL_PARSE_RESULT,  "[BTNOTIFYSRV]update_remote_missed_call() parse_ret = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_CHANNEL_INDEX_ERROR, 		 "[BTNOTIFYSRV] check_channel_valid() channel index is out of range = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_NULL_BT_DEVICE_ADDR, 		 "[BTNOTIFYSRV] get_bt_device_addr() null bt device address")

TRC_MSG(TRC_SRV_BT_NOTIFY_NEW_SMS,		 "[BTNOTIFYSRV]data_notify_new_sms()")


TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_MSG_NUM,                 "[BTNOTIFYSRV]data_lismgr_get_msg_num() msg_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_MSG_INFO_REF_BY_ID,      "[BTNOTIFYSRV]data_listmgr_get_msg_info_ref_by_id() noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_MSG_INFO_REF,            "[BTNOTIFYSRV]data_listmgr_get_msg_info_ref() index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_MSG_INFO,                "[BTNOTIFYSRV]data_listmgr_get_msg_info() index = %d, msg_num = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_MSG_INFO_FOUND,          "[BTNOTIFYSRV]data_listmgr_get_msg_info() found! chnnl_num = %d, node_index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_INDEX_BY_NOTI_ID,        "[BTNOTIFYSRV]data_listmgr_get_index_by_noti_id() noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_INDEX_BY_NOTI_ID_FOUND,  "[BTNOTIFYSRV]data_listmgr_get_index_by_noti_id() found! index = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_INVALID_NOTI_ID,             "[BTNOTIFYSRV]data_listmgr error:INVALID noti_id!")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_INVALID_INDEX,               "[BTNOTIFYSRV]data_listmgr error:INVALID index %d!")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_LOCATE_NODE,                "[BTNOTIFYSRV]data_listmgr_locate_by_noti_id: noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_LOCATE_NODE_RESULT,         "[BTNOTIFYSRV]result: unified_index:%d, solo_index:%d, bt_addr:%x, chnnl_num:%d")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_SET_READ,                    "[BTNOTIFYSRV]data_listmgr_set_read_status() noti_id = %d, is_read = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_SET_ALL_READ,                "[BTNOTIFYSRV]data_listmgr_set_all_as_read()")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_READ,                    "[BTNOTIFYSRV]data_listmgr_get_read_status() noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_GET_READ_RESULT,             "[BTNOTIFYSRV]data_listmgr_get_read_status() is_read = %d")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_DELETE_MSG,                  "[BTNOTIFYSRV]data_listmgr_delete_msg() noti_id = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_DELETE_ALL,                  "[BTNOTIFYSRV]data_listmgr_delete_all() ")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_SEND_REFRESH,                "[BTNOTIFYSRV]data_listmgr_send_refresh() refresh_type = %d, noti_id = %d, refresh_reason = %d, is_listmgr = %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_REFRESH_DATA,                "[BTNOTIFYSRV]data_listmgr_refresh_data()")

TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_PRINT_CHANNLE_DATA,          "[BTNOTIFYSRV]Channle:%d, Num;%d, Index: %d %d %d %d %d")
TRC_MSG(TRC_SRV_BT_NOTIFY_DATA_LISTMGR_PRINT_LISTMGR_DATA,          "[BTNOTIFYSRV]ListMgr Num:%d [%d %d] Index: %d %d %d %d %d")