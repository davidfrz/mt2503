/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*******************************************************************************
 * Filename:
 * ---------
 *   mmi_rp_srv_prof_def.h
 *
 * Project:
 * --------
 *   MAUI
 *
 * Description:
 * ------------
 *   Resource populate function generated by XML resgen
 *
 * Author:
 * -------
 * -------
 *
 *******************************************************************************/


#ifndef _MMI_RP_SRV_PROF_DEF_H
#define _MMI_RP_SRV_PROF_DEF_H




/******************** String resource IDs - begin ********************/
typedef enum
{
    STR_ID_SRV_PROF_TONE_1 = 7763 + 1, /* BASE_ID + 1 */
    STR_ID_SRV_PROF_TONE_2,
    STR_ID_SRV_PROF_TONE_3,
    STR_ID_SRV_PROF_TONE_4,
    STR_ID_SRV_PROF_TONE_5,
    STR_ID_SRV_PROF_RING_1,
    STR_ID_SRV_PROF_RING_2,
    STR_ID_SRV_PROF_RING_3,
    STR_ID_SRV_PROF_RING_4,
    STR_ID_SRV_PROF_RING_5,
    MMI_RP_SRV_PROF_STR_MAX
}mmi_rp_srv_prof_str_enum;
/******************** String resource IDs - finish ********************/


/******************** Timer resource IDs - begin ********************/
typedef enum
{
    SRV_PROF_STORE_CUR_TIMER = 7763 + 1, /* BASE_ID + 1 */
    SRV_PROF_STORE_BUF_TIMER,
    MMI_RP_SRV_PROF_TIMER_MAX
}mmi_rp_srv_prof_timer_enum;
/******************** Timer resource IDs - finish ********************/


/******************** Events resource IDs - begin ********************/
typedef enum
{
    EVT_ID_SRV_PROF_PROFILE_SWITCHED = 7763 + 1, /* BASE_ID + 1 */
    EVT_ID_SRV_PROF_IS_PLAYING,
    EVT_ID_SRV_PROF_VOL_CHANGED,
    MMI_RP_SRV_PROF_EVENT_MAX
}mmi_rp_srv_prof_event_enum;
/******************** Events resource IDs - begin ********************/


/******************** Audio resource IDs - begin ********************/
typedef enum
{
    AUD_ID_PROF_INTERNAL_BEGIN = 7763 + 1, /* BASE_ID + 1 */
    AUD_ID_PROF_TONE_BEGIN,
    AUD_ID_PROF_TONE1,
    AUD_ID_PROF_TONE2,
    AUD_ID_PROF_TONE3,
    AUD_ID_PROF_TONE4,
    AUD_ID_PROF_TONE5,
    AUD_ID_PROF_TONE_END,
    AUD_ID_PROF_RING_BEGIN,
    AUD_ID_PROF_RING1,
    AUD_ID_PROF_RING2,
    AUD_ID_PROF_RING3,
    AUD_ID_PROF_RING4,
    AUD_ID_PROF_RING5,
    AUD_ID_PROF_RING_END,
    AUD_ID_PROF_INTERNAL_END,
    AUD_ID_PROF_EXT_BEGIN,
    AUD_ID_PROF_EXT1,
    AUD_ID_PROF_EXT2,
    AUD_ID_PROF_EXT3,
    AUD_ID_PROF_EXT4,
    AUD_ID_PROF_EXT5,
    AUD_ID_PROF_EXT6,
    AUD_ID_PROF_EXT7,
    AUD_ID_PROF_EXT8,
    AUD_ID_PROF_EXT9,
    AUD_ID_PROF_EXT10,
    AUD_ID_PROF_EXT11,
    AUD_ID_PROF_EXT12,
    AUD_ID_PROF_EXT13,
    AUD_ID_PROF_EXT14,
    AUD_ID_PROF_EXT15,
    AUD_ID_PROF_EXT16,
    AUD_ID_PROF_EXT17,
    AUD_ID_PROF_EXT18,
    AUD_ID_PROF_EXT19,
    AUD_ID_PROF_EXT20,
    AUD_ID_PROF_EXT_END,
    MMI_RP_SRV_PROF_AUD_MAX
}mmi_rp_srv_prof_aud_enum;
/******************** Audio resource IDs - finish ********************/
/******************** Template resource IDs - Begin ********************/
/******************** Template resource IDs - End ********************/


/******************** MMI Cache IDs - Begin ********************/
typedef enum
{
    NVRAM_PROFILES_ACTIVATED = 7763 + 1, /* BASE_ID + 1 */     /*         BYTE */ 
    NVRAM_PROFILES_LASTACTIVATED,                               /*         BYTE */ 
    NVRAM_SRV_PROF_EXT_MELODY_BITS,                             /*       DOUBLE */ 
    MMI_RP_SRV_PROF_MMI_CACHE_MAX
} mmi_rp_srv_prof_mmi_cache_enum;
/******************** MMI Cache IDs - End ********************/


#endif /* _MMI_RP_SRV_PROF_DEF_H */
