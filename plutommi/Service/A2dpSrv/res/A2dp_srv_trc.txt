[APP NAME] = A2DP srv
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_CONN_APP


#BTMMIA2DPScr.c
TRC_MSG(MMI_AV_BT_TRC_IS_OUTPUT_TO_BT,"[A2DPMMI] is_output_to_bt, bt_power_on=%d, in_flight_mode=%d, output_to_bt=%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_POWER_OFF_CALLBACK,"[A2DPMMI] bt_power_off_callback, success:%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_OUTPUT_CHANGE_CALLBACK,"[A2DPMMI] bt_output_change_callback, on_off:%d")
TRC_MSG(MMI_AV_BT_TRC_CHECK_SET_DEFAULT_EARPHONE,"[A2DPMMI] check_set_default_earphone")
TRC_MSG(MMI_AV_BT_TRC_SET_DEFAULT_EARPHONE_REJECT,"[A2DPMMI] set_default_earphone_reject")
TRC_MSG(MMI_AV_BT_TRC_SET_DEFAULT_EARPHONE_ACCEPT,"[A2DPMMI] set_default_earphone_accept")
TRC_MSG(MMI_AV_BT_TRC_SETTING_POWER_ON_CALLBACK,"[A2DPMMI] bt_power_on_callback, success:%d")
TRC_MSG(MMI_AV_BT_TRC_SETTING_DONE,"[A2DPMMI] setting_done, output:%d, tep_headset:%d, valid:%d")
TRC_MSG(MMI_AV_BT_TRC_ENTRY_MAIN,"[A2DPMMI] entry_bluetooth_settings")

#A2DP service common trace
TRC_MSG(MMI_TRC_A2DP_SRV_BT_ADDRESS,"[A2DPSRV] address=0x%x:0x%x:0x%x, line=%d")

#A2dpSrvUtil.c
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_ACTIVATE_REQ,"[A2DPSRV] btmtk_a2dp_send_activate_req")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_DEACTIVATE_REQ,"[A2DPSRV] btmtk_a2dp_send_deactivate_req")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_OPEN_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_open_req, role=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_START_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_start_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_PAUSE_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_pause_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_ABORT_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_abort_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_RECONFIG_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_reconfig_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_CLOSE_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_close_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_START_SINK_CODEC_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_start_sink_codec_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_OPEN_RES,"[A2DPSRV] btmtk_a2dp_send_stream_open_res, stream_handle=%d, accept=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_START_RES,"[A2DPSRV] btmtk_a2dp_send_stream_start_res, stream_handle=%d, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_PAUSE_RES,"[A2DPSRV] btmtk_a2dp_send_stream_pause_res, stream_handle=%d, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_CLOSE_RES,"[A2DPSRV] btmtk_a2dp_send_stream_close_res, stream_handle=%d, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_ABORT_RES,"[A2DPSRV] btmtk_a2dp_send_stream_abort_res, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_RECONFIG_RES,"[A2DPSRV] btmtk_a2dp_send_stream_reconfig_res, stream_handle=%d, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SEND_AUDIO_SYNC_REQ,"[A2DPSRV] btmtk_a2dp_send_stream_sync_req(), sync=%d, state=%d")

#A2dpSrv.c
TRC_MSG(MMI_TRC_A2DP_SRV_ACTIVE_REQ,"[A2DPSRV] mmi_a2dp_active_req")
TRC_MSG(MMI_TRC_A2DP_SRV_ACTIVE_CNF,"[A2DPSRV] mmi_a2dp_active_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_DEACTIVE_REQ,"[A2DPSRV] mmi_a2dp_deactive_req, count=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_DEACTIVE_CNF,"[A2DPSRV] mmi_a2dp_deactive_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_OPENE_CNF,"[A2DPSRV] mmi_a2dp_stream_open_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_OPENE_CNF_INFO,"[A2DPSRV] mmi_a2dp_stream_open_cnf, role=%d, state=%d, waitting=%d, reverse_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_OPEN_IND,"[A2DPSRV] mmi_a2dp_stream_open_ind, local_role=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_START_CNF,"[A2DPSRV] mmi_a2dp_stream_start_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_START_CNF_INFO,"[A2DPSRV] mmi_a2dp_stream_start_cnf, role=%d, state=%d, waitting=%d, reverse_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_START_IND,"[A2DPSRV] mmi_a2dp_stream_start_ind")
TRC_MSG(MMI_TRC_A2DP_SRV_START_IND_INFO,"[A2DPSRV] mmi_a2dp_stream_start_ind, role=%d, state=%d, waitting=%d, reverse_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_PAUSE_CNF,"[A2DPSRV] mmi_a2dp_stream_pause_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_QUIRY_STREAMING,"[A2DPSRV] mmi_a2dp_quiry_streaming_dev, streaming_dev=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_QUIRY_BY_ROLE,"[A2DPSRV] srv_a2dp_quiry_by_role, dev_index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_QUIRY_BY_HANDLE,"[A2DPSRV] mmi_a2dp_quiry_by_handle, dev_index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_QUIRY_BY_ADDRESS,"[A2DPSRV] mmi_a2dp_quiry_by_address, dev_index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_ALLOC_RES,"[A2DPSRV] mmi_a2dp_alloc_resource, no resource, src_num=%d, snk_num=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_ALLOC_RES_SUCCESS,"[A2DPSRV] mmi_a2dp_alloc_resource, resource_index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_NOTIFY_APP,"[A2DPSRV] mmi_a2dp_notify, event=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_NOTIFY_CM_BEGIN,"[A2DPSRV] mmi_a2dp_notify_cm() BEGIN, address: 0x%x, 0x%x, 0x%x")
TRC_MSG(MMI_TRC_A2DP_SRV_NOTIFY_CM_END,"[A2DPSRV] mmi_a2dp_notify_cm() END, result=%d, is_connect=%d, is_indicate=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_AVRCP_CB,"[A2DPSRV] mmi_a2dp_connect_avrcp_cb, AVRCP connect result: %d")
TRC_MSG(MMI_TRC_A2DP_SRV_CONNECT_AVRCP,"[A2DPSRV] mmi_a2dp_connect_avrcp, connect avrcp REQ, role=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_OPEN_CODEC,"[A2DPSRV] mmi_a2dp_open_codec, role=%d, opened=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CLOSE_CODEC,"[A2DPSRV] mmi_a2dp_close_codec, role=%d, opened=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_GLOBAL_STATE,"[A2DPSRV] mmi_a2dp_global_state, global_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_RESET_DEV,"[A2DPSRV] mmi_a2dp_reset_dev_info, index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_RESET_CTX,"[A2DPSRV] mmi_a2dp_reset_ctx, index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CMP_ADDRESS,"[A2DPSRV] mmi_a2dp_cmp_address, same_dev?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_ALLOC_INDEX,"[A2DPSRV] open alloc index, index=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CM_CONNECT_SRC,"[A2DPSRV] srv_bt_a2dp_src_cm_connect_req")
TRC_MSG(MMI_TRC_A2DP_SRV_CM_CONNECT_SINK,"[A2DPSRV] srv_bt_a2dp_sink_cm_connect_req")
TRC_MSG(MMI_TRC_A2DP_SRV_CM_DISCONNECT,"[A2DPSRV] srv_bt_a2dp_cm_disconnect_req")
TRC_MSG(MMI_TRC_A2DP_SRV_DISCONNECT,"[A2DPSRV] srv_bt_a2dp_disconnect_req(), conn_id=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_GET_ROLE,"[A2DPSRV] srv_a2dp_get_role, role=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SRC_CONNECTED,"[A2DPSRV] srv_a2dp_is_connected, SRC SEP connected?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_DEV_CONNECTED,"[A2DPSRV] srv_a2dp_is_connected_ex, connected?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SRC_STREAMING,"[A2DPSRV] srv_a2dp_is_streaming, SRC dev streaming?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_DEV_STREAMING,"[A2DPSRV] srv_a2dp_is_streaming_ex, connected?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_SRC_CLOSE,"[A2DPSRV] srv_a2dp_close")
TRC_MSG(MMI_TRC_A2DP_SRV_DEV_CLOSE,"[A2DPSRV] srv_a2dp_close_ex")
TRC_MSG(MMI_TRC_A2DP_SRV_SRC_OPEN,"[A2DPSRV] srv_a2dp_open")
TRC_MSG(MMI_TRC_A2DP_SRV_DEV_OPEN,"[A2DPSRV] srv_a2dp_open_ex")
TRC_MSG(MMI_TRC_A2DP_SRV_INIT,"[A2DPSRV] srv_a2dp_init")
TRC_MSG(MMI_TRC_A2DP_SRV_OPEN_SOURCE,"[A2DPSRV] srv_a2dp_open_source")
TRC_MSG(MMI_TRC_A2DP_SRV_OPEN_SINK,"[A2DPSRV] srv_a2dp_open_sink")
TRC_MSG(MMI_TRC_A2DP_SRV_OPEN_BY_ROLE,"[A2DPSRV] mmi_a2dp_open_by_role, local_role=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_RECONFIG_REQ,"[A2DPSRV] mmi_a2dp_reconfig_req, dev_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_START_REQ,"[A2DPSRV] mmi_a2dp_start_req, dev_state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CODEC_CLOSE_IND,"[A2DPSRV] mmi_a2dp_aud_close_codec_ind, codec_opened?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_STOP_SINK_CODEC_REQ,"[A2DPSRV]btmtk_a2dp_send_stream_stop_sink_codec_req, stream_handle=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CLOSE_IND,"[A2DPSRV] mmi_a2dp_stream_close_ind")
TRC_MSG(MMI_TRC_A2DP_SRV_CLOSE_CNF,"[A2DPSRV] mmi_a2dp_stream_close_cnf, result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CLOSE_CNF_INFO,"[A2DPSRV] mmi_a2dp_stream_close_cnf, state=%d, waitting=%d, reverse_state=%d")

TRC_MSG(MMI_TRC_A2DP_SRV_BT_CALL_INTERRUPT_HDLR,"[A2DPSRV] srv_a2dp_sink_dialer_call_interrupt_hdlr, suspend_by_call?=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_GSM_CALL_IND,"[A2DPSRV] srv_a2dp_sink_handle_gsm_call_ind, event=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_STRAT_STREAM,"[A2DPSRV] srv_a2dp_start_stream")
TRC_MSG(MMI_TRC_A2DP_SRV_PAUSE_STREAM,"[A2DPSRV] srv_a2dp_pause_stream")
TRC_MSG(MMI_TRC_A2DP_SRV_SET_DEFAULT_CALLBACK,"[A2DPSRV]srv_a2dp_set_default_callback, handle = 0x%x")
TRC_MSG(MMI_TRC_A2DP_SRV_SET_APP_CALLBACK,"[A2DPSRV]srv_a2dp_set_app_callback, handle = 0x%x")
TRC_MSG(MMI_TRC_A2DP_SRV_DELETE_APP_CALLBACK,"[A2DPSRV]srv_a2dp_delete_app_callback, handle = 0x%x")
TRC_MSG(MMI_TRC_A2DP_SRV_SINK_INTERRUPT,"[A2DPSRV] srv_a2dp_sink_avrcp_interface, event=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_CONFIG_AUDIO_CAP,"[A2DPSRV] config_audio_cap, codec_type=%d") 
TRC_MSG(MMI_TRC_A2DP_SRV_GET_AUDIO_CFG,"[A2DPSRV] srv_a2dp_get_aud_cfg(), result=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_GET_AUDIO_CFG_FORMAT,"[A2DPSRV] srv_a2dp_get_aud_cfg(), format=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_GET_AUDIO_CFG_SBC,"[A2DPSRV] srv_a2dp_get_aud_cfg() sbc, min_bit_pool=%d, max_bit_pool=%d, sample_rate=%d, channel_mode=%d") 
TRC_MSG(MMI_TRC_A2DP_SRV_GET_AUDIO_CFG_MP3,"[A2DPSRV] srv_a2dp_get_aud_cfg() mp3, bit_rate=%d, layer=%d, sample_rate=%d, channel_mode=%d, VBR=%d, MPF=%d") 
TRC_MSG(MMI_TRC_A2DP_SRV_GET_AUD_CFG_EX,"[A2DPSRV] srv_a2dp_get_aud_cfg_ex, min_bit_pool=%d, max_bit_pool=%d, sample_rate=%d, channel_mode=%d") 
TRC_MSG(MMI_TRC_A2DP_SRV_COMPARE_AUDIO_CFG,"[A2DPSRV]srv_a2dp_cmp_aud_cfg(), result = %d")

TRC_MSG(MMI_TRC_A2DP_SRV_MSG_REPORT, "[A2DPSRV]<MESSAGE> <LINE:%d> VAL:%d")
TRC_MSG(MMI_TRC_A2DP_SRV_ENABLE_STREAM, "[A2DPSRV]srv_a2dp_enable_stream, is_disable=%d, state=%d")
TRC_MSG(MMI_TRC_A2DP_SRV_DISABLE_STREAM, "[A2DPSRV]srv_a2dp_disable_stream")
TRC_MSG(MMI_TRC_A2DP_SRV_BT_STREAM_RECONFI_START,"[A2DPSRV]srv_a2dp_reconfig_start_streaming(), addr=0x%04x:%02x:%06x,filename(0x%08x)")
TRC_MSG(MMI_TRC_A2DP_SRV_BT_STREAM_RECONFI_START_CODEC,"[A2DPSRV]srv_a2dp_reconfig_start_streaming(), codec=%d")