[APP NAME] = SRV_UPP
[SCOPE] = COSMOS, PLUTO
[MODULE] = MOD_MMI_INET_APP

#starttrace

TRC_MSG(TRC_MMI_WAP_PROF_INIT_ENTER, "[WAP_PROF]mmi_wap_prof_init() ENTER")
TRC_MSG(TRC_MMI_WAP_PROF_INIT_EXIT, "[WAP_PROF]mmi_wap_prof_init() EXIT")
TRC_MSG(TRC_MMI_WAP_PROF_SET_ACTIVE_INDEX, "[WAP_PROF]Set Active index SIM = %d, APP = %d, index = %d, commit = %d")
TRC_MSG(TRC_MMI_WAP_PROF_NVRAM_WRITE_ACTIVE_INDEX, "[WAP_PROF]Nvram write active index, APP = %d, index = %d")
TRC_MSG(TRC_MMI_WAP_PROF_NVRAM_READ_ACTIVE_INDEX, "[WAP_PROF]Nvram read active index. APP = %d")
TRC_MSG(TRC_MMI_WAP_PROF_NVRAM_READ_RETURN_INDEX, "[WAP_PROF]Nvram read returned index. index = %d")
TRC_MSG(TRC_MMI_WAP_PROF_NVRAM_READ_ERROR, "[WAP_PROF]Nvram read error, no = %d")
TRC_MSG(TRC_MMI_WAP_PROF_NVRAM_WRITE_ERROR, "[WAP_PROF]Nvram write error, no = %d")
TRC_MSG(TRC_MMI_WAP_PROF_RESET_STATUS, "[WAP_PROF]Reset status.")
TRC_MSG(TRC_MMI_WAP_PROF_GET_PROFILE, "[WAP_PROF]GET_PROFILE. sim_id = %d, app_id = %d, index = %d, status = %d")
TRC_MSG(TRC_MMI_WAP_PROF_GET_PROFILE_MODULE_NOT_READY_ERROR, "[WAP_PROF]GET_PROFILE, ERROR no callback and Module not ready.")
TRC_MSG(TRC_MMI_WAP_PROF_ACTIVATE_PROFILE, "[WAP_PROF]Activate profile index = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ADD_JOB, "[WAP_PROF]Add job, count = %d, type = %d")
TRC_MSG(TRC_MMI_WAP_PROF_DELETE_JOB, "[WAP_PROF]Delete job, count = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROCESS_JOB, "[WAP_PROF]Process job, count = %d, type = %d")
TRC_MSG(TRC_MMI_WAP_PROF_JOB_GET_PROFILE_CONTENT_CALLBACK_RSP, "[WAP_PROF]Job, Get profile content callback reponse, mod = %d")
TRC_MSG(TRC_MMI_WAP_PROF_UI_SHOW_PROFILE_LIST, "[WAP_PROF]UI, show profile list, sim_id = %d, APP = %d")
TRC_MSG(TRC_MMI_WAP_PROF_UI_DTCNT_BEARER_SCOPE_ALL, "[WAP_PROF]UI, Bearer scope all.")
TRC_MSG(TRC_MMI_WAP_PROF_UI_DTCNT_BEARER_SCOPE_GPRS_AND_CSD, "[WAP_PROF]UI, Bearer scope GPRS and CSD.")
TRC_MSG(TRC_MMI_WAP_PROF_ACTIVE_PROFILE_CHANGED_ENTER, "[WAP_PROF] Active profile changed. ENTER")
TRC_MSG(TRC_MMI_WAP_PROF_ERR_ACTIVE_PROFILE_CHANGED_CALLBACK_NULL, "[WAP_PROF] Err, Active profile changed. callback NULL.")
TRC_MSG(TRC_MMI_WAP_PROF_ACTIVE_PROFILE_CHANGED_CONFIRMATION_ENTER, "[WAP_PROF] Active profile changed confirmation. ENTER, result = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ACTIVE_PROFILE_CHANGED_COMMIT_CHANGES, "[WAP_PROF] Active profile changed commit changes")
TRC_MSG(TRC_MMI_WAP_PROF_ACTIVE_PROFILE_CHANGED_REVERT_CHANGES, "[WAP_PROF] Active profile changed revert changes")

TRC_MSG(TRC_MMI_WAP_PROF_PROV_NEW_DOC, "[WAP_PROF][PROV] New doc, APP = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_PROXY_TAG, "[WAP_PROF][PROV] Proxy tag. proxy_number = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DATA_ACCOUNT_ID, "[WAP_PROF][PROV] Data account ID. primary = %d, secondary = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_RCVD_PORT_N_SERVICE_VALUE, "[WAP_PROF][PROV] Recevied port = %d, service = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_APPLICATION_TAG, "[WAP_PROF][PROV] Application tag. app_number = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_MMS_SETTING_TAG, "[WAP_PROF][PROV] MMS setting tag. type = %d, value = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_RESOURCE_STARTPAGE_TAG, "[WAP_PROF][PROV] Resouce startpage tag.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_CREATE_BKM_MMS_SETTING, "[WAP_PROF][PROV] Create bookmarks and mms setting.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ALLOCATE_PROFILE, "[WAP_PROF][PROV] Allocate profile. count = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_PROFILE_BKM_COUNT, "[WAP_PROF][PROV] Profile bkm count = %d.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_PROFILE_MMS_SETTING_EXISTS, "[WAP_PROF][PROV] MMS setting exists.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_FREE_APP_PROXY_NODES, "[WAP_PROF][PROV] Free application and proxy nodes.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DISPLAY_INFO_SCREEN_ENTER, "[WAP_PROF][PROV] Display info screen enter.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_END_KEY_PRESSED, "[WAP_PROF][PROV] End key pressed. scr_deleted = %d, status_sent = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_INSTALL_BOOKMARK, "[WAP_PROF][PROV] Install bookmark, index = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_INSTALL_BOOKMARK_NULL_CALLBACK, "[WAP_PROF][PROV] Err, Add bookmark NULL callback.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_INSTALL_BOOKMARK_RESULT, "[WAP_PROF][PROV] Add bookmark, result = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_INSTALL_MMS_SETTING, "[WAP_PROF][PROV] Install MMS setting.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_INSTALL_MMS_SETTING_NO_CALLBACK, "[WAP_PROF][PROV] Err, Install MMS setting, No callback.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_INSTALL_MMS_SETTING_RESULT, "[WAP_PROF][PROV] Install MMS setting, result = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_DONE_SRC_ERROR, "[WAP_PROF][PROV] Err, Provisioning done, src error. src = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DM_CHECK_RESULT, "[WAP_PROF][PROV] DM check result = %d, APP = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_DM_CHECK_ACTIVE_PROFILE_IN_USE_NO_CALLBACK, "[WAP_PROF][PROV] Err, DM check active profile in use. No callback.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DM_CHECK_ACTIVE_PROFILE_IN_USE_RESULT, "[WAP_PROF][PROV] DM check active profile in use. result = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_DM_UPDATE_IND_INVALID_PROFILE_ID, "[WAP_PROF][PROV] Err, DM update profile indication. wrong Profile ID = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_DM_UPDATE_IND_INVALID_APP_ID, "[WAP_PROF][PROV] Err, DM update profile indication. wrong App ID = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DM_UPDATE_RSP_DONE, "[WAP_PROF][PROV] DM update done, RSP.")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_ERR_DM_UPDATE_RSP_DONE, "[WAP_PROF][PROV] Err, DM update done, RSP. result = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_DM_RECV_IND, "[WAP_PROF][PROV] DM recv ind, profile_id = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ERR_KILL_PROFILE, "[WAP_PROF] Profile killed abruptly. axn = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ERR_PROCESS_JOB_FAIL_PROFILE_BUSY, "[WAP_PROF] Process job fail, Profile is busy status = %d")
TRC_MSG(TRC_MMI_WAP_PROF_MEM_ALLOCATED, "[WAP_PROF][MEM] Allocated = %d, at ADD = %x")
TRC_MSG(TRC_MMI_WAP_PROF_MEM_RELEASED, "[WAP_PROF][MEM] Released ADD = %x")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_BKM_CNT, "[WAP_PROF][PROV] BKM count = %d")
TRC_MSG(TRC_MMI_WAP_PROF_PROV_IS_NOT_IN_CALL, "[WAP_PROF] Remaining Profiles = %d, and is not in call")
TRC_MSG(TRC_MMI_WAP_PROF_REENTRY_CHECK, "[WAP_PROF] Profile reentry, module status = %d")
TRC_MSG(TRC_MMI_WAP_PROF_IS_DTCNT_VALID, "[WAP_PROF] is dtcnt valid sim_id = %d, app_id = %d, profile_id = %d, result = %d")
 
    
TRC_MSG(TRC_MMI_WAP_PROF_ENTRY_DTCNT_CUI, "[WAP_PROF] Entry dtcnt cui, dtcnt_validty_status = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ENTRY_ACTIVE_CONN_TYPE, "[WAP_PROF] Active connection type: dtcnt id = %d")
    
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_HDLR, "[WAP_PROF] Data Account deleted handler, account_total = %d")
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_BRW_HDLR, "[WAP_PROF] dtcnt deleted browser hdlr")
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_MMS_HDLR, "[WAP_PROF] dtcnt deleted mms hdlr")
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_TOTAL_COUNT, "[WAP_PROF] Data Account struct count, account_count = %d")
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_BRW_NOT_READY, "[WAP_PROF] dtcnt deleted brw not ready")  
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_MMS_NOT_READY, "[WAP_PROF] dtcnt deleted mms not ready")    
TRC_MSG(TRC_MMI_WAP_PROF_DTCNT_DELETED_ACTIVATED_CONFIRMATION, "[WAP_PROF]dtcnt deleted activated conf,index = %d, count = %d")
TRC_MSG(TRC_MMI_WAP_PROF_ERR_CBM_DECODE, "[WAP_PROF] CBM decode API error.")



TRC_MSG(TRC_MMI_PROV_RECEIVE_DA_FILE_ENTER, "[PROVS]mmi_prov_receive_da_file(), ENTER")
TRC_MSG(TRC_MMI_PROV_RECEIVE_DA_FILE_ERR_MAX_SIZE_EXCEED, "[PROVS]mmi_prov_receive_da_file(), Max size exceed: %d")
TRC_MSG(TRC_MMI_PROV_RECEIVE_DA_FILE_EXIT, "[PROVS]mmi_prov_receive_da_file(), EXIT")
TRC_MSG(TRC_MMI_PROV_CCA_AUTH_REQ, "[PROVS]PIN REQ: status=%d")
TRC_MSG(TRC_MMI_PROV_AUTH_RSP_FAIL, "[PROVS]PIN RSP FAIL")
TRC_MSG(TRC_MMI_PROV_ERROR_SEC_VALUE, "[PROVS]Error Sec value: %d")
TRC_MSG(TRC_MMI_PROV_ERROR_IMSI_VALIDATION_FAIL, "[PROVS]NETWPIN, IMSI validation failed")
TRC_MSG(TRC_MMI_PROV_VALIDATE_DATA_ENTER, "[PROVS]mmi_prov_validate_data(), ENTER")
TRC_MSG(TRC_MMI_PROV_VALIDATE_DATA_EXIT, "[PROVS]mmi_prov_validate_data(), EXIT")
TRC_MSG(TRC_MMI_PROV_IMSI_REQ_SIM_ID, "[PROVS]IMSI REQ SIM ID : %d")
TRC_MSG(TRC_MMI_PROV_CCA_NEW_SETTING_IND_REQ_ENTER, "[PROVS]mmi_prov_cca_new_setting_ind_req(), ENTER")
TRC_MSG(TRC_MMI_PROV_CCA_SUSPENDED_SETTING_HDLR_ENTER, "[PROVS]mmi_prov_cca_suspended_setting_hdlr(), ENTER")
TRC_MSG(TRC_MMI_PROV_CCA_SUSPENDED_SETTING_HDLR_EXIT, "[PROVS]mmi_prov_cca_suspended_setting_hdlr(), EXIT")
TRC_MSG(TRC_MMI_PROV_CCA_NEW_SETTING_RSP_HDLR_ENTER, "[PROVS]mmi_prov_cca_new_setting_rsp_hdlr(), ENTER")
TRC_MSG(TRC_MMI_PROV_NEW_SETTING_USER_ABORT, "[PROVS]mmi_prov_cca_new_setting_rsp_hdlr(), User Aborted")
TRC_MSG(TRC_MMI_PROV_CCA_NEW_SETTING_RSP_HDLR_EXIT, "[PROVS]mmi_prov_cca_new_setting_rsp_hdlr(), EXIT")
TRC_MSG(TRC_MMI_PROV_START_SETTING_PARSER_ENTER, "[PROVS]mmi_prov_start_setting_parser(), ENTER")
TRC_MSG(TRC_MMI_PROV_START_SETTING_PARSER_EXIT, "[PROVS]mmi_prov_start_setting_parser(), EXIT")
TRC_MSG(TRC_MMI_PROV_CCA_NEW_DOC_IND_REQ, "[PROVS]NEW DOC IND")
TRC_MSG(TRC_MMI_PROV_CCA_NEW_DOC_RSP, "[PROVS]NEW DOC RSP")
TRC_MSG(TRC_MMI_PROV_CCA_INVALID_SETTING_IND_REQ, "[PROVS]INVALID SETTING IND")
TRC_MSG(TRC_MMI_PROV_PARSE_HEADER_ENTER, "[PROVS]mmi_prov_parse_header(), ENTER")
TRC_MSG(TRC_MMI_PROV_SEC_VALUE, "[PROVS]SEC = %d")
TRC_MSG(TRC_MMI_PROV_PARSE_HEADER_EXIT, "[PROVS]mmi_prov_parse_header(), EXIT")
TRC_MSG(TRC_MMI_PROV_PROVISIONING_DATA_HANDLER_ENTER, "[PROVS]mmi_prov_provisioning_data_handler(), ENTER")
TRC_MSG(TRC_MMI_PROV_PROVISIONING_DATA_HANDLER_EXIT, "[PROVS]mmi_prov_provisioning_data_handler(), EXIT")
TRC_MSG(TRC_MMI_PROV_HANDLE_PROVISIONING_SETTING_ENTER, "[PROVS]mmi_prov_handle_provisioning_setting(), ENTER")
TRC_MSG(TRC_MMI_PROV_WBXML_PARSER_RETURNED, "[PROVS]WBXML parser returned : %d")
TRC_MSG(TRC_MMI_PROV_FIX_CCA_DOC_ERROR, "[PROVS] fix CCA doc error : %d")
TRC_MSG(TRC_MMI_PROV_CREATE_DEPENDENCY_ERROR, "[PROVS] create dependency error : %d")
TRC_MSG(TRC_MMI_PROV_CONFIG_DOC_CREATE_ERROR, "[PROVS] Hconfig doc create error : %d")
TRC_MSG(TRC_MMI_PROV_HANDLE_PROVISIONING_SETTING_EXIT, "[PROVS]mmi_prov_handle_provisioning_setting(), EXIT")
TRC_MSG(TRC_MMI_PROV_ROOT_END_TAG_HDLR_ENTER, "[PROVS]mmi_prov_root_end_tag_hdlr(), ENTER")
TRC_MSG(TRC_MMI_PROV_ROOT_END_TAG_HDLR_EXIT, "[PROVS]mmi_prov_root_end_tag_hdlr(), EXIT")
TRC_MSG(TRC_MMI_PROV_CHARACTERISTIC_END_TAG_HDLR_ENTER, "[PROVS]mmi_prov_characteristic_end_tag_hdlr(), ENTER")
TRC_MSG(TRC_MMI_PROV_HANDLE_UNKNOWN_CHARACTERISTIC_TAG_EXIT, "[PROVS]mmi_prov_handle_unknown_characteristic_tag(), EXIT")
TRC_MSG(TRC_MMI_PROV_ADD_CCA_CHARACTERISTIC_NODE_ENTER, "[PROVS]mmi_prov_add_cca_characteristic_node(), ENTER")
TRC_MSG(TRC_MMI_PROV_ADD_CCA_CHARACTERISTIC_NODE_EXIT, "[PROVS]mmi_prov_add_cca_characteristic_node(), EXIT")
TRC_MSG(TRC_MMI_PROV_INIT_MEMORY_ALLOC_LEFT, "[PROVS]mmi_prov_init(), Mem Allocated=%d, Tot Mem Left=%d")
TRC_MSG(TRC_MMI_PROV_DEINIT_EXIT, "[PROVS]mmi_prov_deinit(), EXIT")
TRC_MSG(TRC_MMI_PROV_MEM_ALLOC, "[PROVS]mmi_prov_mem_alloc(), Alloc Size=%d, Tot Mem Allocated=%d, Tot Mem Left=%d")
TRC_MSG(TRC_MMI_PROV_MEM_FREE, "[PROVS]mmi_prov_mem_free(), Mem Allocated=%d, Tot Mem Left=%d")
TRC_MSG(TRC_MMI_PROV_CONVERT_WBXML_PARSER_ERROR_CODE_ENTER, "[PROVS]mmi_prov_convert_wbxml_parser_error_code(), ENTER, err=%d")
TRC_MSG(TRC_MMI_PROV_HANDLE_PARAM_TAG_EXIT, "[PROVS]mmi_prov_handle_param_tag(), EXIT")
TRC_MSG(TRC_MMI_PROV_HANDLE_CHARACTERISTIC_TAG_EXIT, "[PROVS]mmi_prov_handle_characteristic_tag(), EXIT")
TRC_MSG(TRC_MMI_PROV_WBXML_END_HDLR_ERROR, "[PROVS]mmi_prov_wbxml_end_hdlr(), ERROR=%d")
TRC_MSG(TRC_MMI_PROV_NULL_ADDR, "[PROVS] Wap addr convert, NULL address")
TRC_MSG(TRC_MMI_PROV_WAP_ADDR_TYPE_NONE, "[PROVS] Wap addr convert, Address type NONE.")
TRC_MSG(TRC_MMI_PROV_PROVBOX_GET_MSG_DATA_REQ, "[PROVS] ProvBox get msg data req, msg_id = %d")
TRC_MSG(TRC_MMI_PROV_CCA_INSTALL_PROV_MSG_CNF, "[PROVS] CCA install prov msg cnf, msg_id = %d, trans_id = %d, sim_id = %d, prov_type = %d, prov_flag = %d, status = %d")
TRC_MSG(TRC_MMI_PROV_PROVBOX_SAVE_MSG_CNF, "[PROVS] ProvBox save msg cnf, source id = %d, app_data = %x, prov_data = %x, prov_file = %x")
TRC_MSG(TRC_MMI_PROV_CCA_INSTALL_PROV_MSG_REQ_HDLR, "[PROVS] CCA install prov msg req hdlr, msg_id = %d, trans_id = %d, prov_flag = %d, sim_id = %d")
TRC_MSG(TRC_MMI_PROV_DA_PUSH_SETTING_SOURCE, "[PROVS] DA push setting source = %d")
TRC_MSG(TRC_MMI_PROV_PROVBOX_GET_MSG_DATA_CNF_HDLR, "[PROVS] ProvBox get msg data cnf hdlr, source_id = %d")
TRC_MSG(TRC_MMI_PROV_WAP_ADDR_NULL, "[PROVS] Wap Addr NULL.")
TRC_MSG(TRC_MMI_PROV_PROCESS_PROV_MSG_FILE_OPEN_ERROR, "[PROVS] Processing new prov msg, file open error.")

