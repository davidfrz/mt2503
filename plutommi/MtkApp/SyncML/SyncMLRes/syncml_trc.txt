[APP NAME] = SYNCML
[SCOPE] = PLUTO
[MODULE] = MOD_MMI_CONN_APP

#starttrace

TRC_MSG(MMI_SYNCML_PRE_CHECK_GET_SIM, "[SyncML] syncml_sync_pre get prefer sim, sim id = %d")
TRC_MSG(MMI_SYNCML_OPEN_BEAR_GET_SIM, "[SyncML] syncml_open_bearer get prefer sim, sim id = %d")
TRC_MSG(MMI_SYNCML_START_SYNC_GET_SIM, "[SyncML] syncml_start_sync get prefer sim, sim id = %d")
TRC_MSG(MMI_SYNCML_ENTRY_ABORT,"[SyncML] SyncML entry abort function")
TRC_MSG(MMI_SYNCML_PHB_DATA_CHANGED, "[SyncML] Phonebook data changed, op = %d, LUID = %d")
TRC_MSG(MMI_SYNCML_TDL_DATA_CHANGED, "[SyncML] To-do-list data changed, op = %d, LUID = %d")
TRC_MSG(MMI_SYNCML_SET_RECORD, "[SyncML] Set record, LUID = %d, op = %d, db = %d...")
TRC_MSG(MMI_SYNCML_GET_RECORD, "[SyncML] Get record, LUID = %d, db = %d...")
TRC_MSG(MMI_SYNCML_GET_RECORD_FAIL, "[SyncML] Get record fail")
TRC_MSG(MMI_SYNCML_QUERY_LOG, "[SyncML] Query change log, op = %d, total %d records...")
TRC_MSG(MMI_SYNCML_PROGRESSION_INFO, "[SyncML] Progression info = %d...")
TRC_MSG(MMI_SYNCML_ALARM_EXPIRY_PHONE_STATE, "[SyncML]Sync alarm expires, alarm index = %d, the phone state is  = %d")   
TRC_MSG(MMI_SYNCML_INI_PROCESS, "[SyncML] Enter iniliazation function")
TRC_MSG(MMI_SYNCML_SYNC_READ_SYNC_LOG_FROM_NVRAM, "[SyncML][LOG VIEWER] SyncMLViewlog.c [Function]mmi_syncml_read_sync_log_from_nvram()[Value]error = %d")
TRC_MSG(MMI_SYNCML_SYNC_WRITE_SYNC_LOG_TO_NVRAM, "[SyncML][LOG VIEWER] SyncMLViewlog.c [Function]mmi_syncml_update_sync_log_to_nvram()[Value]error = %d")
TRC_MSG(MMI_SYNCML_SYNC_RESET_SYNC_LOG_TO_NVRAM, "[SyncML][LOG VIEWER] SyncMLViewlog.c [Function]mmi_syncml_reset_sync_log()[Value]error = %d")
TRC_MSG(MMI_SYNCML_ABORT_SYNC_TRACE, "[SyncML]Abort sync, line = %d, g_mmi_syncml_cntx.abort_by_other = %d")
TRC_MSG(MMI_SYNCML_APP_SYNC_FINISH_HDLR, "[SyncML] account index = %d, app_to_sync = %d, temp_app_to_sync = %d")
TRC_MSG(MMI_SYNCML_REG_SYNC_RESULT, "[SyncML] check_result = %d, acct_indx = %d")
TRC_MSG(MMI_SYNCML_REG_SYNC_TIMER_HDLR, "[SyncML] enter mmi_syncml_regular_sync_timer_hdlr")
TRC_MSG(MMI_SYNCML_IS_SYNC_ALARM_EXPIRED, "[SyncML] enter mmi_syncml_is_sync_alarm_expired")   
TRC_MSG(MMI_SYNCML_REGULARY_SYNC_HDL, "[SyncML] enter mmi_syncml_sync_alarm_hdlr") 
TRC_MSG(MMI_SYNCML_APP_SYNC_VALID_ACCT_NUM, "[SyncML]g_mmi_syncml_cntx.valid_acct_num = %d")
TRC_MSG(MMI_SYNCML_APP_SYNC_VALID_ACCT_ID, "[SyncML]account_id = %d")
TRC_MSG(MMI_SYNCML_BEAR_CALLBACK_RESULT, "[SYNCML]mmi_syncml_cbm_bear_callback,acc_id=%d, state=%d, error=%d, err_cause=%d, cbm_state=%d")
TRC_MSG(MMI_SYNCML_CHECK_NETID, "[SyncML] syncml check net id: dtcnt id is %d, net id is %d")
TRC_MSG(MMI_SYNCML_RESET_NETID, "[SyncML] syncml reset net id: cbm sim is %d, preference sim is %d")
TRC_MSG(MMI_SYNCML_SAVE_DTCNT, "[SyncML] syncml save dtcnt to nvram done")
TRC_MSG(MMI_SYNCML_WRITE_NVRAM, "[SyncML] syncml_write_nvram: sim id = %d, net id = %d")


TRC_MSG(MMI_SYNCML_DEV_REENTRY, "[SyncML][Device]reentry function: sync_flag=%d,conn_id=%d,pre_sync=%d,dev_sync=%d,dev_type=%d ")
TRC_MSG(MMI_SYNCML_DEV_CONN_ASK_IND, "[SyncML][Device] connect ask hdlr ")
TRC_MSG(MMI_SYNCML_DEV_SYNC_ASK_IND, "[SyncML][Device] sync ask hdlr ")
TRC_MSG(MMI_SYNCML_DEV_SYNC_DB_IND, "[SyncML][Device] sync db ind hdlr ")
TRC_MSG(MMI_SYNCML_DEV_CONN_IND, "[SyncML][Device] bt conn ind hdlr ")
TRC_MSG(MMI_SYNCML_DEV_DISCONN_IND, "[SyncML][Device] bt disconn ind hdlr: curr_state=%d ")
TRC_MSG(MMI_SYNCML_DEV_BT_DISCONN, "[SyncML][Device] BT disconn:l= %d,u= %d,n=%d cm_id = %d, is_sync=%d")
TRC_MSG(MMI_SYNCML_DEV_BT_DEACTIVE, "[SyncML][Device] BT deactive: is_dev_sync = %d")
TRC_MSG(MMI_SYNCML_DEV_LOCATE, "[SyncML][Device]is_new_dev = %d, selected_dev = %d, sync_role = %d")
TRC_MSG(MMI_SYNCML_DEV_NAMEMAP, "[SyncML][Device]namemap[%d]=%d, namemap[%d]=%d, namemap[%d]=%d")
TRC_MSG(MMI_SYNCML_DEV_STATE, "[SyncML][Device]state new state=%d, old state=%d")
TRC_MSG(MMI_SYNCML_DEV_CAN_SYNC, "[SyncML][Device]Synchronizable=%d, in_bt_cm=%d, is_sync=%d, in_del=%d, in_phb=%d, in_cal=%d, in_task=%d, in_alarm=%d")
TRC_MSG(MMI_SYNCML_DEV_BT_INIT, "[SyncML][Device]BT init curr_state=%d")
TRC_MSG(MMI_SYNCML_DEV_BT_DEINIT, "[SyncML][Device]BT deinit, is_sync=%d, curr_state=%d")
TRC_MSG(MMI_SYNCML_DEV_IS_SYNCHRONIZABLE, "[SyncML][Device]mmi_syncml_device_is_synchronizable return %d")


TRC_MSG(MMI_SYNCML_OTAP_PROC_CCA, "[SyncML][provisioning & DM]mmi_syncml_proc_cca_doc(), conf_id = %d , doc_hdl= %d...")
TRC_MSG(MMI_SYNCML_OTAP_NEW_OTA_CNTX, "[SyncML][provisioning & DM]mmi_syncml_new_ota_cntx()")
TRC_MSG(MMI_SYNCML_OTAP_VALID_PROF_NUM, "[SyncML][provisioning & DM]mmi_syncml_get_valid_profile_num():total_valid=%d, num_prof=%d")
TRC_MSG(MMI_SYNCML_OTAP_ENTRY_INSTALL, "[SyncML][provisioning & DM]mmi_syncml_entry_installation()  g_syncml_ota_context->iter = %d...")
TRC_MSG(MMI_SYNCML_OTAP_ENTRY_INSTALL_INFO, "[SyncML][provisioning & DM]mmi_syncml_entry_installation() info  ...")
TRC_MSG(MMI_SYNCML_OTAP_NEW_OTA_PROF, "[SyncML][provisioning & DM]mmi_syncml_new_ota_profile(), cntx->num_profiles=%d")
TRC_MSG(MMI_SYNCML_OTAP_FIND_EMPTY_PROF, "[SyncML][provisioning & DM]mmi_syncml_find_empty_profile()")
TRC_MSG(MMI_SYNCML_OTAP_NEXT_PROF, "[SyncML][provisioning & DM]mmi_syncml_next_profile()")
TRC_MSG(MMI_SYNCML_OTAP_ENTRY_REPLACE, "[SyncML][provisioning & DM]mmi_syncml_entry_replacement()")
TRC_MSG(MMI_SYNCML_OTAP_INSTALL_PROF, "[SyncML][provisioning & DM]mmi_syncml_install_profiles()")  
TRC_MSG(MMI_SYNCML_OTAP_CONSTRUCT_DOC_FOR_DM, "[SyncML][provisioning & DM]mmi_syncml_construct_cca_document_for_dm()")  
TRC_MSG(MMI_SYNCML_OTAP_INSTALL_DOC_FROM_DM, "[SyncML][provisioning & DM]mmi_syncml_install_cca_document_from_dm()")  
TRC_MSG(MMI_SYNCML_OTAP_PARSE_FROM_DM, "[SyncML][provisioning & DM]profile from dm: Addr:%s, con:%s, cal:%s")  
TRC_MSG(MMI_SYNCML_OTAP_PROFILE_FOR_DM, "[SyncML][provisioning & DM]profile for DM Get: Addr:%s, con:%s, cal:%s")  
TRC_MSG(MMI_SYNCML_OTAP_PARSE_ADDR, "[SyncML][provisioning & DM]Parse Addr: %s")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_ERROR_PROXY_IP, "[SYNCML][Provisioning & DM]Error:proxy ip=%s")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_ERROR_PROXY_PORT, "[SYNCML][Provisioning & DM]Error:proxy port=%d")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_ERROR_SERVER_IP, "[SYNCML][Provisioning & DM]Error:i=%d")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_ERROR_NO_MATCH_PX, "[SYNCML][Provisioning & DM]Error: No matched proxy")
TRC_MSG(MMI_SYNCML_OTAP_GET_VALID_PROFILE_NUM, "[SYNCML][Provisioning & DM]new_profile validation, i=%d, new_prof->account_validation=%0x")
TRC_MSG(MMI_SYNCML_OTAP_IS_UPDATE_MATCH_RETURN, "[SYNCML][Provisioning & DM]return value of mmi_syncml_is_update_match, update_prof_idx=%d")
TRC_MSG(MMI_SYNCML_OTAP_SET_PROXY_FOR_ACCOUNT, "[SYNCML][Provisioning & DM]mmi_syncml_set_proxy_for_account, i=%d, net_id=%0x")
TRC_MSG(MMI_SYNCML_OTAP_CCA_NODES, "[SyncML][provisioning & DM]mmi_syncml_proc_cca_nodes(), symbol = %0x")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_BOOTSTRAP, "[SYNCML][Provisioning & DM]mmi_syncml_parser_node_bootstrap, cntx->opr_flag=%0x, state=%d")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_PROXY, "[SYNCML][Provisioning & DM]mmi_syncml_parser_node_proxy, barer_type=%d, param->values.i[0]=%0x")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_APP_ADDR, "[SYNCML][Provisioning & DM]mmi_syncml_parser_node_app_addr, return value=%d")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_APP_ADDR_AUTH, "[SYNCML][Provisioning & DM]mmi_syncml_parser_node_app_addr_auth fail, authlevel=%d")
TRC_MSG(MMI_SYNCML_OTAP_PARSE_RESOURCE, "[SYNCML][Provisioning & DM]mmi_syncml_parser_node_resource, param->id=%0x")
TRC_MSG(MMI_SYNCML_OTAP_GET_CALENDAR_TYPE, "[SYNCML][Provisioning & DM]mmi_syncml_get_db_type = calendar")
TRC_MSG(MMI_SYNCML_OTAP_GET_TASK_TYPE, "[SYNCML][Provisioning & DM]mmi_syncml_get_db_type = task")