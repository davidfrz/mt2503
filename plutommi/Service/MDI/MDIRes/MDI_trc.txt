[APP NAME] = Mdi
[SCOPE] = PLUTO, COSMOS
[MODULE] = MOD_MMI_MEDIA_APP

#starttrace
TRC_MSG(MDI_TRC_WEBCAM_START, "[MDI_WEBCAM] mdi_webcam_start()")
TRC_MSG(MDI_TRC_WEBCAM_STOP, "[MDI_WEBCAM] mdi_webcam_stop()")
TRC_MSG(MDI_TRC_WEBCAM_PAUSE, "[MDI_WEBCAM] mdi_webcam_pause()")
TRC_MSG(MDI_TRC_WEBCAM_RESUME, "[MDI_WEBCAM] mdi_webcam_resume()")
TRC_MSG(MDI_TRC_WEBCAM_START_RESULT_HALR, "[MDI_WEBCAM] mdi_webcam_start_result_hdlr()")
TRC_MSG(MDI_TRC_WEBCAM_ABORT_IND_HALR, "[MDI_WEBCAM] mdi_webcam_abort_indication_hdlr()")
TRC_MSG(MDI_TRC_WEBCAM_PAUSE_CONNECT, "[MDI_WEBCAM] mdi_webcam_pause_connect()")
TRC_MSG(MDI_TRC_WEBCAM_RESUME_CONNECT, "[MDI_WEBCAM] mdi_webcam_resume_connect()")

TRC_MSG(MMI_TRC_CAMERA_KEY_TO_CAPTURE_TIME,"[CAMERAAPP] key event to capture duration: %dms, line: %d")
TRC_MSG(MMI_TRC_CAMERA_CAPTURE_TIME,"[CAMERAAPP] capture duration: %dms, line: %d")
TRC_MSG(MMI_TRC_CAMERA_SAVING_TIME,"[CAMERAAPP] saving to file duration: %dms, line: %d")
TRC_MSG(MMI_TRC_CAMERA_DECODE_JPEG_TIME,"[CAMERAAPP] jpeg decode duration: %dms, line: %d")

TRC_MSG(MDI_TRC_CAMERA_XENON_FLASH_STATUS,"[MDI_CAM] Xenon flash status: %d")
TRC_MSG(MDI_TRC_CAMERA_PREVIEW_LCM_PARAM,"[MDI_CAM] preview start: lsx=%d,lsy=%d,lex=%d,ley=%d,lox=%d,loy=%d,cx1=%d,cy1=%d,cx2=%d,cy2=%d")
TRC_MSG(MDI_TRC_CAMERA_PANORAMA_STITCH_RESULT,"[MDI_CAM] mdi_camera_panorama_result_ind, mdi_camera_p:state = %d :stitch_seq_num = %d")
TRC_MSG(MDI_TRC_CAMERA_ZOOM_QUERY_RESULT,"[MDI_CAM] mdi_camera_get_zoom_info, result = %d")

TRC_MSG(MDI_TRC_CAMERA_SD_EVENT,"[MDI_CAM][SD] EVENT = %d!")
TRC_MSG(MDI_TRC_CAMERA_SD_RESULT,"[MDI_CAM][SD] fd num = [%d], sd num = [%d]")
TRC_MSG(MDI_TRC_CAMERA_SD_START,"[MDI_CAM][SD] Start SD!")
TRC_MSG(MDI_TRC_CAMERA_SD_STOP,"[MDI_CAM][SD] Stop SD!")

TRC_MSG(MDI_TRC_CAMERA_MAV_CAP_RESULT,"[MDI_CAM][MAV] ind->cap_count = [%d], ind->total_count = [%d]")
TRC_MSG(MDI_TRC_CAMERA_MAV_CAP_SKIP,"[MDI_CAM][MAV] Skip!")
TRC_MSG(MDI_TRC_CAMERA_MAV_STITCH_RESULT,"[MDI_CAM][MAV] mav_result_hdlr, state = %d, mdi stitch_seq_num = %d, med seq_num = %d")

TRC_MSG(MDI_TRC_UTIL_CONVERT_COLOR_FORMAT, "[MDI_VIDEO] mdi_util_convert_color_format(), handle=0x%x, src_format=%d, dst_format=%d")

TRC_MSG(MDI_TRC_VIDEO_MEDIA_RET, "[MDI_VIDEO] media ret: %d")
TRC_MSG(MDI_TRC_VIDEO_CUR_TIME, "[MDI_VIDEO] cur_time: %d")
TRC_MSG(MDI_TRC_VIDEO_STOP_TIME, "[MDI_VIDEO] stop_time: %d")    
TRC_MSG(MDI_TRC_VIDEO_SLEEP_TIME, "[MDI_VIDEO] elapse_ticks: %d, sleep_ticks=%d")

TRC_MSG(MDI_TRC_VIDEO_REC_ZOOM_FACTOR, "[MDI_VIDEO] zoom_factor: %d")         
TRC_MSG(MDI_TRC_VIDEO_PERCENTAGE, "[MDI_VIDEO] pecentage: %d")     
TRC_MSG(MDI_TRC_VIDEO_MAX_TIME, "[MDI_VIDEO] max_time: %d") 
TRC_MSG(MDI_TRC_VIDEO_FILE_SIZE, "[MDI_VIDEO] file_size: %d") 
TRC_MSG(MDI_TRC_VIDEO_LAYER_INFO, "[MDI_VIDEO] buf_ptr=%d, layer_width: %d, layer_height=%d, image_buf_size=%d") 

TRC_MSG(MDI_TRC_VIDEO_UPDATE_INFO, "[MDI_VIDEO] is_hw_layer=%d, is_lcd_updated=%d")

TRC_MSG(MDI_TRC_VIDEO_REC_POWER_ON, "[MDI_VIDEO] mdi_video_rec_power_on()")
TRC_MSG(MDI_TRC_VIDEO_REC_POWER_OFF, "[MDI_VIDEO] mdi_video_rec_power_off()")
TRC_MSG(MDI_TRC_VIDEO_REC_PREVIEW_START, "[MDI_VIDEO] mdi_video_rec_preview_start()")
TRC_MSG(MDI_TRC_VIDEO_REC_PREVIEW_STOP, "[MDI_VIDEO] mdi_video_rec_preview_stop()")
TRC_MSG(MDI_TRC_VIDEO_REC_RECORD_START, "[MDI_VIDEO] mdi_video_rec_record_start()")
TRC_MSG(MDI_TRC_VIDEO_REC_RECORD_STOP, "[MDI_VIDEO] mdi_video_rec_record_stop()")
TRC_MSG(MDI_TRC_VIDEO_REC_RECORD_PAUSE, "[MDI_VIDEO] mdi_video_rec_record_pause()")
TRC_MSG(MDI_TRC_VIDEO_REC_RECORD_RESUME, "[MDI_VIDEO] mdi_video_rec_record_resume()")
TRC_MSG(MDI_TRC_VIDEO_REC_GET_CUR_RECORD_TIME, "[MDI_VIDEO_EX] mdi_video_rec_get_cur_record_time()")
TRC_MSG(MDI_TRC_VIDEO_REC_HAS_UNSAVED_FILE, "[MDI_VIDEO] mdi_video_rec_has_unsaved_file()")
TRC_MSG(MDI_TRC_VIDEO_REC_DELETE_UNSAVED_FILE, "[MDI_VIDEO] mdi_video_rec_delete_unsaved_file()")    
TRC_MSG(MDI_TRC_VIDEO_REC_SAVE_FILE, "[MDI_VIDEO] mdi_video_rec_save_file()")    
TRC_MSG(MDI_TRC_VIDEO_REC_STOP_SAVE, "[MDI_VIDEO] mdi_video_rec_stop_save()")        
TRC_MSG(MDI_TRC_VIDEO_REC_UPDATE_PARA_EV, "[MDI_VIDEO] mdi_video_rec_update_para_ev(%d)")      
TRC_MSG(MDI_TRC_VIDEO_REC_UPDATE_PARA_ZOOM, "[MDI_VIDEO] mdi_video_rec_update_para_zoom(%d)")
TRC_MSG(MDI_TRC_VIDEO_REC_UPDATE_PARA_EFFECT, "[MDI_VIDEO] mdi_video_rec_update_para_effect(%d)")    
TRC_MSG(MDI_TRC_VIDEO_REC_UPDATE_PARA_WB, "[MDI_VIDEO] mdi_video_rec_update_para_wb(%d)")    
TRC_MSG(MDI_TRC_VIDEO_REC_UPDATE_PARA_NIGHT, "[MDI_VIDEO] mdi_video_rec_update_para_night(%d)")        
TRC_MSG(MDI_TRC_VIDEO_REC_GET_MAX_ZOOM_FACTOR, "[MDI_VIDEO] mdi_video_rec_get_max_zoom_factor()")   
TRC_MSG(MDI_TRC_VIDEO_REC_GET_RECORD_FILE_SIZE, "[MDI_VIDEO] mdi_video_rec_get_record_file_size()")       
TRC_MSG(MDI_TRC_VIDEO_REC_SAVE_RESULT_HDLR, "[MDI_VIDEO] mdi_video_rec_save_result_hdlr()")   
TRC_MSG(MDI_TRC_VIDEO_REC_RECORD_RESULT_HDLR, "[MDI_VIDEO] mdi_video_rec_record_result_hdlr()")   
TRC_MSG(MDI_TRC_VIDEO_REC_ENABLE_PARTIAL_DISPLAY, "[MDI_VIDEO] mdi_video_rec_enable_partial_display()")    
TRC_MSG(MDI_TRC_VIDEO_PLY_OPEN_FILE, "[MDI_VIDEO] mdi_video_ply_open_file()")   

TRC_MSG(MDI_TRC_VIDEO_PLY_CLOSE, "[MDI_VIDEO] mdi_video_ply_close()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SNAPSHOT, "[MDI_VIDEO] mdi_video_ply_snapshot()")
TRC_MSG(MDI_TRC_VIDEO_PLY_PLAY, "[MDI_VIDEO] mdi_video_ply_play()")
TRC_MSG(MDI_TRC_VIDEO_PLY_STOP, "[MDI_VIDEO] mdi_video_ply_stop()")
TRC_MSG(MDI_TRC_VIDEO_PLY_UPDATE_LAYER_PAUSE, "[MDI_VIDEO] mdi_video_ply_update_layer_pause()")
TRC_MSG(MDI_TRC_VIDEO_PLY_UPDATE_LAYER_RESUME, "[MDI_VIDEO] mdi_video_ply_update_layer_resume()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SEEK, "[MDI_VIDEO] mdi_video_ply_seek()")    
TRC_MSG(MDI_TRC_VIDEO_PLY_GET_FRAME, "[MDI_VIDEO] mdi_video_ply_get_frame()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SEEK_AND_GET_FRAME, "[MDI_VIDEO] mdi_video_ply_seek_and_get_frame()") 
TRC_MSG(MDI_TRC_VIDEO_PLY_NON_BLOCK_SEEK, "[MDI_VIDEO] mdi_video_ply_non_block_seek()") 
TRC_MSG(MDI_TRC_VIDEO_PLY_NON_BLOCK_SEEK_AND_GET_FRAME, "[MDI_VIDEO] mdi_video_ply_non_block_seek_and_get_frame()")     
TRC_MSG(MDI_TRC_VIDEO_PLY_STOP_NON_BLOCK_SEEK, "[MDI_VIDEO] mdi_video_ply_stop_non_block_seek()")     
TRC_MSG(MDI_TRC_VIDEO_PLY_STOP_NON_BLOCK_SEEK_RESULT_HDLR, "[MDI_VIDEO] mdi_video_ply_non_block_seek_result_hdlr()") 
TRC_MSG(MDI_TRC_VIDEO_PLY_NON_BLOCK_GET_THUMBNAIL, "[MDI_VIDEO] mdi_video_ply_non_block_get_thumbnail()")     
TRC_MSG(MDI_TRC_VIDEO_PLY_GET_THUMBNAIL, "[MDI_VIDEO] mdi_video_ply_get_thumbnail()") 
TRC_MSG(MDI_TRC_VIDEO_PLY_STOP_NON_BLOCK_GET_THUMBNAIL, "[MDI_VIDEO] mdi_video_ply_stop_non_block_get_thumbnail()")     
TRC_MSG(MDI_TRC_VIDEO_PLY_STOP_NON_BLOCK_GET_THUMBNAIL_RESULT_HDLR, "[MDI_VIDEO] mdi_video_ply_non_block_get_thumbnail_result_hdlr()") 
TRC_MSG(MDI_TRC_VIDEO_PLY_GET_CUR_PLAY_TIME, "[MDI_VIDEO_EX] mdi_video_ply_get_cur_play_time()")
TRC_MSG(MDI_TRC_VIDEO_PLY_PLAY_FINISH_RESULT_HDLR, "[MDI_VIDEO] mdi_video_ply_play_finish_result_hdlr()")
TRC_MSG(MDI_TRC_VIDEO_PLY_OPEN_FILE_RESULT_HDLR, "[MDI_VIDEO] mdi_video_ply_open_file_result_hdlr()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_BRIGHTNESS, "[MDI_VIDEO] mdi_video_ply_set_brightness(%d)")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_CONTRAST, "[MDI_VIDEO] mdi_video_ply_set_contrast(%d)")    
TRC_MSG(MDI_TRC_VIDEO_PLY_OPEN_CLIP_FILE, "[MDI_VIDEO] mdi_video_ply_open_clip_file()")
TRC_MSG(MDI_TRC_VIDEO_PLY_OPEN_CLIP_ID, "[MDI_VIDEO] mdi_video_ply_open_clip_id()")
TRC_MSG(MDI_TRC_VIDEO_PLY_OPEN_CLIP_BUFFER, "[MDI_VIDEO] mdi_video_ply_open_clip_buffer()")
TRC_MSG(MDI_TRC_VIDEO_PLY_ENABLE_PARTIAL_DISPLAY, "[MDI_VIDEO] mdi_video_ply_enable_partial_display()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_FRAME_MODE, "[MDI_VIDEO] mdi_video_ply_set_frame_mode(), mode=%d")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_3D_MODE, "[MDI_VIDEO] mdi_video_ply_set_3d_mode(), mode=%d")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_STOP_TIME, "[MDI_VIDEO] mdi_video_ply_set_stop_time()")    
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_SLEEP_TIME, "[MDI_VIDEO] mdi_video_ply_set_sleep_time()")
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_TRACK_INDEX, "[MDI_VIDEO] mdi_video_ply_set_track_index(), idx=%d") 
TRC_MSG(MDI_TRC_VIDEO_PLY_GET_KEY_FRAME_TIME, "[MDI_VIDEO] mdi_video_ply_get_key_frame_time(), time=%d") 
TRC_MSG(MDI_TRC_VIDEO_PLY_SET_SUBTITLE_TRACK_INDEX, "[MDI_VIDEO] mdi_video_ply_set_subtitle_track_index(), idx=%d") 
TRC_MSG(MDI_TRC_VIDEO_SET_SCENARIO_TYPE, "[MDI_VIDEO] mdi_video_ply_set_scenario_type(), scenario=%d")
TRC_MSG(MDI_TRC_VIDEO_STREAM_INIT, "[MDI_VIDEO] mdi_video_stream_init()")   
TRC_MSG(MDI_TRC_VIDEO_STREAM_DEINIT, "[MDI_VIDEO] mdi_video_stream_deinit()") 
TRC_MSG(MDI_TRC_VIDEO_STREAM_CONNECT, "[MDI_VIDEO] mdi_video_stream_connect()")     
TRC_MSG(MDI_TRC_VIDEO_STREAM_DISCONNECT, "[MDI_VIDEO] mdi_video_stream_disconnect()")      
TRC_MSG(MDI_TRC_VIDEO_STREAM_IS_CONNECTED, "[MDI_VIDEO] mdi_video_stream_is_connected()")      
TRC_MSG(MDI_TRC_VIDEO_STREAM_START_BUFFERING, "[MDI_VIDEO] mdi_video_stream_start_buffering()")        
TRC_MSG(MDI_TRC_VIDEO_STREAM_STOP_BUFFERING, "[MDI_VIDEO] mdi_video_stream_stop_buffering()")        
TRC_MSG(MDI_TRC_VIDEO_STREAM_PLAY, "[MDI_VIDEO] mdi_video_stream_play()")   
TRC_MSG(MDI_TRC_VIDEO_STREAM_STOP, "[MDI_VIDEO] mdi_video_stream_stop()")           
TRC_MSG(MDI_TRC_VIDEO_STREAM_RESUME, "[MDI_VIDEO] mdi_video_stream_resume()")  
TRC_MSG(MDI_TRC_VIDEO_STREAM_PAUSE, "[MDI_VIDEO] mdi_video_stream_pause()")      
TRC_MSG(MDI_TRC_VIDEO_STREAM_CONNECT_RESULT_HDLR, "[MDI_VIDEO] mdi_video_stream_connect_result_hdlr()")           
TRC_MSG(MDI_TRC_VIDEO_STREAM_BUFFERING_RESULT_HDLR, "[MDI_VIDEO] mdi_video_stream_buffering_result_hdlr()")    
TRC_MSG(MDI_TRC_VIDEO_STREAM_PLAY_RESULT_HDLR, "[MDI_VIDEO] mdi_video_stream_play_result_hdlr()")        
TRC_MSG(MDI_TRC_VIDEO_STREAM_GET_BUF_PERCENTAGE, "[MDI_VIDEO_EX] mdi_video_stream_get_buf_percentage()") 
TRC_MSG(MDI_TRC_VIDEO_STREAM_GET_CUR_PLAY_TIME, "[MDI_VIDEO_EX] mdi_video_stream_get_cur_play_time()") 
TRC_MSG(MDI_TRC_VIDEO_STREAM_SET_BRIGHTNESS, "[MDI_VIDEO] mdi_video_stream_set_brightness(%d)")
TRC_MSG(MDI_TRC_VIDEO_STREAM_SET_CONTRAST, "[MDI_VIDEO] mdi_video_stream_set_contrast(%d)")        
TRC_MSG(MDI_TRC_VIDEO_STREAM_ENABLE_PARTIAL_DISPLAY, "[MDI_VIDEO] mdi_video_stream_enable_partial_display()")
TRC_MSG(MDI_TRC_VIDEO_STREAM_SET_STOP_TIME, "[MDI_VIDEO] mdi_video_stream_set_stop_time()")        
TRC_MSG(MDI_TRC_VIDEO_STREAM_SET_SLEEP_TIME, "[MDI_VIDEO] mdi_video_stream_set_sleep_time()")
TRC_MSG(MDI_TRC_VIDEO_PROGRESSIVE_OPEN_FILE, "[MDI_VIDEO] mdi_video_progressive_open_file()") 
TRC_MSG(MDI_TRC_VIDEO_PROGRESSIVE_CLOSE_FILE, "[MDI_VIDEO] mdi_video_progressive_close_file()")     
TRC_MSG(MDI_TRC_VIDEO_PROGRESSIVE_GET_MAX_PLAY_TIME, "[MDI_VIDEO_EX] mdi_video_progressive_get_max_play_time()") 
TRC_MSG(MDI_TRC_VIDEO_PROGRESSIVE_GET_BUF_PERCENTAGE, "[MDI_VIDEO_EX] mdi_video_progressive_get_buf_percentage()") 
TRC_MSG(MDI_TRC_VIDEO_PROGRESSIVE_IS_PDL_FORMAT, "[MDI_VIDEO] mdi_video_progressive_is_pdl_format()")     
TRC_MSG(MDI_TRC_VIDEO_EDT_OPEN_FILE, "[MDI_VIDEO] mdi_video_edt_open_file()")     
TRC_MSG(MDI_TRC_VIDEO_EDT_CLOSE_FILE, "[MDI_VIDEO] mdi_video_edt_close_file()")     
TRC_MSG(MDI_TRC_VIDEO_EDT_ACTIVE, "[MDI_VIDEO] mdi_video_edt_active(%d)")  
TRC_MSG(MDI_TRC_VIDEO_EDT_DEACTIVE, "[MDI_VIDEO] mdi_video_edt_deactive()")  
TRC_MSG(MDI_TRC_VIDEO_SEQ_NOT_MATCHED, "[MDI_VIDEO] seq num not matched!!")  
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_OPEN, "[MDI_VIDEO] mdi_video_edt_encode_open()")  
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_CLOSE, "[MDI_VIDEO] mdi_video_edt_encode_close()")  
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_APPEND_IMAGE, "[MDI_VIDEO] mdi_video_edt_encode_append_image()")  
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_APPEND_VIDEO, "[MDI_VIDEO] mdi_video_edt_encode_append_video()")  
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_MERGE, "[MDI_VIDEO] mdi_video_edt_encode_merge()")      
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_STOP_MERGE, "[MDI_VIDEO] mdi_video_edt_encode_stop_merge()")          
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_OPEN_BGM, "[MDI_VIDEO] mdi_video_edt_encode_open_bgm()")      
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_CLOSE_BGM, "[MDI_VIDEO] mdi_video_edt_encode_close_bgm()")      
TRC_MSG(MDI_TRC_VIDEO_EDT_ENCODE_MERGE_RESULT_HDLR, "[MDI_VIDEO] mdi_video_edt_encode_merge_result_hdlr()")   
TRC_MSG(MDI_TRC_VIDEO_PLY_DRM_DISABLE_CONSUME_COUNT, "[MDI_VIDEO_DRM] mdi_video_ply_drm_disable_consume_count()")   
TRC_MSG(MDI_TRC_VIDEO_PLY_DRM_DISABLE_CONSUME_TIME, "[MDI_VIDEO_DRM] mdi_video_ply_drm_disable_consume_time()")       
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_CONSUME_TIME_RIGHT, "[MDI_VIDEO_DRM] calling: DRM_consume_timed_rights_with_module(), line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_CONSUME_RIGHT, "[MDI_VIDEO_DRM] calling: DRM_consume_rights_with_module(), line: %d")       
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_DRM_OPEN_FILE, "[MDI_VIDEO_DRM] calling: DRM_open_file(), line: %d")           
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_DRM_CLOSE_FILE, "[MDI_VIDEO_DRM] calling: DRM_close_file(), line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_DRM_STOP_CONSUME, "[MDI_VIDEO_DRM] calling: DRM_stop_consume(), line: %d")       
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_DRM_PAUSE_CONSUME, "[MDI_VIDEO_DRM] calling: DRM_pause_consume(), line: %d")           
TRC_MSG(MDI_TRC_VIDEO_DRM_CALLING_DRM_RESUME_CONSUME, "[MDI_VIDEO_DRM] calling: DRM_resume_consume(), line: %d")               
TRC_MSG(MDI_TRC_VIDEO_DRM_CONSUME_CALLBACK, "[MDI_VIDEO_DRM] mdi_video_ply_drm_consume_callback(), is_playing: %d, state: %d, line: %d")           

TRC_MSG(MDI_TRC_VIDEO_DRM_CONSUME_FLAG, "[MDI_VIDEO_DRM] is_consume_drm_count: %d, is_consume_drm_time: %d, line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_ENTER_STATE_EXIT, "[MDI_VIDEO_DRM] enter_state: EXIT, line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_ENTER_STATE_PERMITTED, "[MDI_VIDEO_DRM] enter_state: PERMITTED, line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_ENTER_STATE_CONSUMING, "[MDI_VIDEO_DRM] enter_state: CONSUMING, line: %d")   
TRC_MSG(MDI_TRC_VIDEO_DRM_ENTER_STATE_PLAY_FINISHED, "[MDI_VIDEO_DRM] enter_state: PLAY_FINISHED, line: %d")       
TRC_MSG(MDI_TRC_VIDEO_DRM_ENTER_STATE_PAUSED, "[MDI_VIDEO_DRM] enter_state: PAUSESD, line: %d")           

TRC_MSG(MDI_TRC_VIDEO_STERAM_DRM_DISABLE_CONSUME_COUNT, "[MDI_VIDEO_DRM] mdi_video_stream_drm_disable_consume_count()")   
TRC_MSG(MDI_TRC_VIDEO_STERAM_DRM_DISABLE_CONSUME_TIME, "[MDI_VIDEO_DRM] mdi_video_stream_drm_disable_consume_time()")       
TRC_MSG(MDI_TRC_VIDEO_STERAM_DRM_CONNECT_RESULT, "[MDI_VIDEO_DRM] is_drm_pdcf: %d, pdcf_handle: %d, line: %d")   

TRC_MSG(MDI_TRC_VIDEO_SET_VISUAL_UPDATE_FALSE,"[MDI_VIDEO] Set is_visual_update = MMI_FALSE, line: %d")

TRC_MSG(MDI_TRC_VIDEO_TEL_UPDATE_PARA_EV, "[MDI_VIDEO] mdi_video_tel_update_para_ev(%d)")           
TRC_MSG(MDI_TRC_VIDEO_TEL_UPDATE_PARA_ZOOM, "[MDI_VIDEO] mdi_video_tel_update_para_zoom(%d)")     

TRC_MSG(MDI_TRC_VDOCLIPPER_OPEN, "[MDI][VDOCLIP] mdi_video_clip_open() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_PREPARE, "[MDI][VDOCLIP] mdi_video_clip_prepare() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_PREPARE_RESULT, "[MDI][VDOCLIP] mdi_video_clip_prepare_hdlr() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_CLIP_RESULT, "[MDI][VDOCLIP] mdi_video_clip_result_hdlr() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_START, "[MDI][VDOCLIP] mdi_video_clip_start() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_STOP, "[MDI][VDOCLIP] mdi_video_clip_stop() result = %d")
TRC_MSG(MDI_TRC_VDOCLIPPER_CLOSE, "[MDI][VDOCLIP] mdi_video_clip_close() result = %d")


/* --------------------------------------------------------------- */
/* ------------------------- MDI AUDIO BEGIN --------------------- */
/* --------------------------------------------------------------- */
/* Common */
TRC_MSG(MDI_AUDIO_TRC_INIT, "[MDI][AUD]mdi_audio_init")
TRC_MSG(MDI_AUDIO_TRC_STATE, "[MDI][AUD] state: [%d][%d][%d], line = [%d]")
TRC_MSG(MDI_AUDIO_TRC_VALUE, "[MDI][AUD] value: [%d][%d][%d], line = [%d]")

/* DRM */
TRC_MSG(MDI_AUDIO_TRC_DRM_TIMEOUT_CALLBACK, "[MDI][AUD]mdi_audio_drm_timeout_callback, result=[%d], id=[%d] drm_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_DRM_BGSND_TIMEOUT_CALLBACK, "[MDI][AUD]mdi_audio_drm_bgsnd_timeout_callback, result=[%d], id=[%d] drm_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_DRM_VALIDATE_RIGHT, "[MDI][AUD]mdi_audio_drm_validate_right, consume rule=[%Mmdi_audio_drm_consume_rule_enum]")
TRC_MSG(MDI_AUDIO_TRC_DRM_COSUME_RIGHT, "[MDI][AUD]mdi_audio_drm_consume_right, consume rule=[%Mmdi_audio_drm_consume_rule_enum]")
TRC_MSG(MDI_AUDIO_TRC_DRM_COSUME_RIGHT_RESULT, "[MDI][AUD]mdi_audio_drm_consume_right, handle=[%d], drm_id =[%d]")
TRC_MSG(MDI_AUDIO_TRC_DRM_DISABLE_CONSUME_COUNT, "[MDI][AUD]mdi_audio_drm_disable_consume_count")
TRC_MSG(MDI_AUDIO_TRC_DRM_DISABLE_CONSUME, "[MDI][AUD]mdi_audio_drm_disable_consume_all")

/* Play */    
TRC_MSG(MDI_AUDIO_TRC_PLAY_ID, "[MDI][AUD]mdi_audio_play_id, id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_ID_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_play_id_with_vol_path, id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_STRING, "[MDI][AUD]mdi_audio_play_string, format=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_STRING_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_play_string_with_vol_path, format=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_STRING_PORTION_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_play_string_portion_with_vol_path, format=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_STRING_PORTION_WITH_VOL_PATH_NON_BLOCK, "[MDI][AUD]mdi_audio_play_string_with_vol_path_non_block, format=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_FILE_CHECK_STATE, "[MDI][AUD]mdi_audio_play_file_check_state, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_FILE, "[MDI][AUD]mdi_audio_play_file, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_FILE_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_play_file_with_vol_path, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_FILE_PORTION_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_play_file_portion_with_vol_path, state=[%d],start=[%d],end=[%d],cache=[%x]")
TRC_MSG(MDI_AUDIO_TRC_IS_PURE_AUDIO, "[MDI][AUD]mdi_audio_is_pure_audio: result=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GET_DURATION, "[MDI][AUD]mdi_audio_get_duration: result=[%d], duration=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GET_DURATION_BY_STRING, "[MDI][AUD]mdi_audio_get_duration_by_string: result=[%d], duration=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GET_PROGRESS_TIME, "[MDI][AUD]mdi_audio_get_progress_time, result=[%d], progress_time=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SET_PROGRESS_TIME, "[MDI][AUD]mdi_audio_set_progress_time, result=[%d], progress_time=[%d]")   
TRC_MSG(MDI_AUDIO_TRC_START_BUILD_CACHE, "[MDI][AUD]mdi_audio_start_build_cache")   
TRC_MSG(MDI_AUDIO_TRC_STOP_BUILD_CACHE, "[MDI][AUD]mdi_audio_stop_build_cache")
TRC_MSG(MDI_AUDIO_TRC_CLOSE_BUILD_CACHE, "[MDI][AUD]mdi_audio_close_build_cache")   
TRC_MSG(MDI_AUDIO_TRC_RESET_BUILD_CACHE_VAR, "[MDI][AUD]mdi_audio_reset_build_cache_variables")   
TRC_MSG(MDI_AUDIO_TRC_PLAY_FINISH_IND, "[MDI][AUD]mdi_audio_play_finish_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_PLAY_FINISH_IND1, "[MDI][AUD]mdi_audio_play_finish_ind1, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_UPDATE_DUR_IND, "[MDI][AUD]mdi_audio_update_dur_ind1, duration=[%d], identifier([%d],[%d])")
TRC_MSG(MDI_AUDIO_TRC_STOP_ID, "[MDI][AUD]mdi_audio_stop_id, id=[%d], state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_STRING, "[MDI][AUD]mdi_audio_stop_string, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_FILE, "[MDI][AUD]mdi_audio_stop_file, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_ALL, "[MDI][AUD]mdi_audio_stop_all, state=[%d], mode=[%d]")    
TRC_MSG(MDI_AUDIO_TRC_PAUSE, "[MDI][AUD]mdi_audio_pause, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STORE_FILE, "[MDI][AUD]mdi_audio_store_file, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_RESTORE_FILE_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_restore_file_with_vol_path, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_RESUME, "[MDI][AUD]mdi_audio_resume, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_IDLE, "[MDI][AUD]mdi_audio_is_idle, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_PLAYING, "[MDI][AUD]mdi_audio_is_playing, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_RECORDING, "[MDI][AUD]mdi_audio_is_recording, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_SPEECH_MODE, "[MDI][AUD]mdi_audio_is_speech_mode, speech_on=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_RESOURCE_AVAILABLE, "[MDI][AUD]mdi_audio_is_resource_available, mode=[%d], available=[%d]")

/* Volume */
TRC_MSG(MDI_AUDIO_TRC_SET_VOLUME, "[MDI][AUD]mdi_audio_set_volume, type=[%d], volume=[%d]")
TRC_MSG(MDI_AUDIO_TRC_INCR_VOLUME, "[MDI][AUD]mdi_audio_incr_volume, volume_now=[%d], volume_incr=[%d]")
TRC_MSG(MDI_AUDIO_TRC_DECR_VOLUME, "[MDI][AUD]mdi_audio_decr_volume, volume_now=[%d], volume_decr=[%d]")

/* Audio trim */
TRC_MSG(MDI_AUDIO_TRC_TRIM_OPEN, "[MDI][AUD]mdi_audio_trim_open")
TRC_MSG(MDI_AUDIO_TRC_TRIM_CLOSE, "[MDI][AUD]mdi_audio_trim_close, handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_START, "[MDI][AUD]mdi_audio_trim_start, handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_STOP, "[MDI][AUD]mdi_audio_trim_start, handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_INTERRUPT, "[MDI][AUD]mdi_audio_trim_interrupt, handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_SET_PARAM, "[MDI][AUD]mdi_audio_trim_set_param, handle=[%d], type=[%d], data=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_GET_PARAM, "[MDI][AUD]mdi_audio_trim_get_param, handle=[%d], type=[%d], data=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TRIM_RESULT, "[MDI][AUD]mdi_audio_trim_start, handle=[%d], result=[%d]")

/* Spectrum */
TRC_MSG(MDI_AUDIO_TRC_START_CALC_SPECTRUM, "[MDI][AUD]mdi_audio_start_calc_spectrum")
TRC_MSG(MDI_AUDIO_TRC_STOP_CALC_SPECTRUM, "[MDI][AUD]mdi_audio_stop_calc_spectrum")
TRC_MSG(MDI_AUDIO_TRC_GET_SPECTRUM_TOP, "[MDI][AUD]mdi_audio_get_spectrum, tops = %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d")
TRC_MSG(MDI_AUDIO_TRC_GET_SPECTRUM_VAL, "[MDI][AUD]mdi_audio_get_spectrum, vals = %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d")

/* RECORD */
TRC_MSG(MDI_AUDIO_TRC_START_RECORD_WITH_LIMIT, "[MDI][AUD]mdi_audio_start_record_with_limit, state=[%d], size=[%d], time=[%d]")
TRC_MSG(MDI_AUDIO_TRC_RECORD_FINISH_IND, "[MDI][AUD]mdi_audio_record_finish_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_RECORD, "[MDI][AUD]mdi_audio_stop_record, state=[%d]")

/* BT */
TRC_MSG(MDI_AUDIO_TRC_BT_CLOSE_STREAM_IND, "[MDI][AUD]mdi_audio_bt_close_stream_ind: profile=[%d], state=[%d], cause=[%d], handler=[%x]")
TRC_MSG(MDI_AUDIO_TRC_BT_CLOSE_STREAM_CNF, "[MDI][AUD]mdi_audio_bt_close_stream_cnf: profile=[%d], state=[%d], result=[%d], handler=[%x]")
TRC_MSG(MDI_AUDIO_TRC_BT_OPEN_STREAM_IND, "[MDI][AUD]mdi_audio_bt_open_stream_ind: profile=[%d], state=[%d], handler=[%x]")
TRC_MSG(MDI_AUDIO_TRC_BT_OPEN_STREAM_CNF, "[MDI][AUD]mdi_audio_bt_open_stream_cnf: profile=[%d], state=[%d], result=[%d], handler=[%x]")
TRC_MSG(MDI_AUDIO_TRC_BT_OPEN_STREAM, "[MDI][AUD]mdi_audio_bt_open_stream: profile=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_OPEN_STREAM_REQ, "[MDI][AUD]mdi_audio_bt_open_stream_req: profile=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_CLOSE_STREAM, "[MDI][AUD]mdi_audio_bt_close_stream: profile=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_IS_STREAM_OPEN, "[MDI][AUD]mdi_audio_bt_is_stream_open: profile=[%d], state=[%d], result=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_HFP_TURN_ON, "[MDI][AUD]mdi_audio_bt_hfp_turn_on: state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_HFP_TURN_OFF, "[MDI][AUD]mdi_audio_bt_hfp_turn_off: state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_BT_IS_A2DP_CODEC_ON, "[MDI][AUD]mdi_audio_bt_is_a2dp_codec_open, result=[%d]")    

/* BT HFP SYNC */
TRC_MSG(MDI_AUDIO_TRC_REG_BT_VOL_SYNC_CALLBACK, "[MDI][AUD]mdi_audio_bt_register_volume_sync_callback, app_id=[%MAPPLICATION_DEPLOY], vol_lvl_type=[%d], callback=[%d]")
TRC_MSG(MDI_AUDIO_TRC_CLEAR_BT_VOL_SYNC_CALLBACK, "[MDI][AUD]mdi_audio_bt_clear_volume_sync_callback, app_id=[%MAPPLICATION_DEPLOY]")
TRC_MSG(MDI_AUDIO_TRC_SYNC_VOLUME_FROM_BT, "[MDI][AUD]mdi_audio_sync_volume_from_bt, bt_volume=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SET_VOLUME_TO_BT, "[MDI][AUD]mdi_audio_set_volume_to_bt, volume=[%d]")

/* UTILITY */    
TRC_MSG(MDI_AUDIO_TRC_BG_TIMEOUT, "[MDI][AUD]mdi_audio_background_timeout_handler, state=[%d],speech_on=[%d]")
TRC_MSG(MDI_AUDIO_TRC_RESUME_BG_PLAY, "[MDI][AUD]mdi_audio_resume_background_play, state=[%d]")    
TRC_MSG(MDI_AUDIO_TRC_SUSPEND_BG_PLAY, "[MDI][AUD]mdi_audio_suspend_background_play, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TERMINATE_BG_PLAY, "[MDI][AUD]mdi_audio_terminate_background_play, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_RESUME_BG_PLAY_APP, "[MDI][AUD]mdi_audio_resume_background_play_by_app, app_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SUSPEND_BG_PLAY_APP, "[MDI][AUD]mdi_audio_suspend_background_play_by_app, app_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SUSPEND_BG_PLAY_APP_ASYNC, "[MDI][AUD]mdi_audio_suspend_background_play_by_app_async, app_id=[%d], cb=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SUSPEND_BG_PLAY_APP_ASYNC_CB, "[MDI][AUD]mdi_audio_suspend_background_play_by_app_async_cb, app_id=[%d], cb=[%d]")
TRC_MSG(MDI_AUDIO_TRC_IS_BGPLAY_SUSPEND, "[MDI][AUD]mdi_audio_is_background_play_suspended, is_suspend=[%d], bg_enable[%d]")
TRC_MSG(MDI_AUDIO_TRC_SET_BACKGROUND_HANDLER, "[MDI][AUD]mdi_audio_set_background_handler, app_level=[%d]")
TRC_MSG(MDI_AUDIO_TRC_CLEAR_BACKGROUND_HANDLER, "[MDI][AUD]mdi_audio_clear_background_handler, app_level=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FINISH_BACKGROUND_PLAY, "[MDI][AUD]mdi_audio_finish_background_play, app_level=[%d]")    
TRC_MSG(MDI_AUDIO_TRC_BACKGROUND_HANDLER, "[MDI][AUD]background_handler, app[%d]=[%d]\n")

/* MMA */
TRC_MSG(MDI_AUDIO_TRC_MMA_MED_DIRECT_CALLBACK, "[MDI][AUD] mdi_audio_mma_med_direct_callback(): handle = [%d], result = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_CALLBACK_HDLR, "[MDI][AUD] mdi_audio_mma_callback_hdlr(): player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_CALLBACK_APP, "[MDI][AUD] mdi_audio_mma_callback_hdlr(): <Callback> ")
TRC_MSG(MDI_AUDIO_TRC_MMA_OPEN_FILE, "[MDI][AUD] mdi_audio_mma_open_file(): result = [%d], handle = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_OPEN_STRING, "[MDI][AUD] mdi_audio_mma_open_string(): format = [%d], result = [%d], handle = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_OPEN, "[MDI][AUD] mdi_audio_mma_open()")
TRC_MSG(MDI_AUDIO_TRC_MMA_OPEN_RESULT, "[MDI][AUD] mdi_audio_mma_open(): result = [%d], handle = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_SET_PARAM, "[MDI][AUD] mdi_audio_mma_set_param(): handle = [%d], player = [%d], param = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_PLAY, "[MDI][AUD] mdi_audio_mma_play(): handle = [%d], player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_PAUSE, "[MDI][AUD] mdi_audio_mma_pause(): handle = [%d], player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_RESUME, "[MDI][AUD] mdi_audio_mma_resume(): handle = [%d], player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_STOP, "[MDI][AUD] mdi_audio_mma_stop(): handle = [%d], player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_CLOSE, "[MDI][AUD] mdi_audio_mma_close(): handle = [%d], player = [%d]")
TRC_MSG(MDI_AUDIO_TRC_MMA_IS_IDLE, "[MDI][AUD] mdi_audio_mma_is_idle(): idle = [%d]")

/* FM Radio */
TRC_MSG(MDI_AUDIO_TRC_STOP_FMR, "[MDI][AUD]mdi_audio_stop_fmr, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_START_RECORD, "[MDI][AUD]mdi_fmr_start_record, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_RECORD_FINISH_IND, "[MDI][AUD]mdi_fmr_record_finish_ind, state=[%d]")

TRC_MSG(MDI_AUDIO_TRC_STOP_FMR_RECORD_ONLY, "[MDI][AUD]mdi_audio_stop_fmr_record_only, state=[%d]")    
TRC_MSG(MDI_AUDIO_TRC_FMR_PAUSE_RECORD, "[MDI][AUD]mdi_fmr_pause_record, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_RESUME_RECORD, "[MDI][AUD]mdi_frm_resume_record, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_RDS_ENABLE, "[MDI][AUD]mdi_fmr_rds_enable, state=[%d], mode = [%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_RDS_AF_TP_ENABLE, "[MDI][AUD]mdi_fmr_rds_af_tp_setting, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_FMR_RDS_DISABLE, "[MDI][AUD]mdi_fmr_rds_af_tp_setting, state=[%d], mode = [%d]")

/* VR */
TRC_MSG(MDI_AUDIO_TRC_PLAY_VOICE_TAG, "[MDI][AUD]mdi_audio_play_voice_tag, mode=[%d], lang=[%d], group_id=[%d], word_id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VR_RCG_RESULT_IND, "[MDI][AUD]mdi_audio_vr_rcg_result_ind, result=[%d],state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VR_TRN_RESULT_IND, "[MDI][AUD]mdi_audio_vr_trn_result_ind, result=[%d],state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_START_VR_VOICE_RECORD, "[MDI][AUD]mdi_audio_start_vr_voice_record, session id=[%d], seq no=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_VR_VOICE_RECORD, "[MDI][AUD]mdi_audio_stop_vr voice record, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_TRN_PROMPT_REQ_HDLR, "[MDI][AUD]mdi_audio_vrsi_trn_prompt_req_hdlr, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_TRN_RESULT_IND, "[MDI][AUD]mdi_audio_vrsi_trn_result_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_RCG_PROMPT_REQ_HDLR, "[MDI][AUD]mdi_audio_vrsi_rcg_prompt_req_hdlr, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_RCG_RESULT_IND, "[MDI][AUD]mdi_audio_vrsi_rcg_result_ind, state=%d\n")
TRC_MSG(MDI_AUDIO_TRC_VRSI_ERR_IND, "[MDI][AUD]mdi_audio_vrsi_err_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_INIT, "[MDI][AUD]mdi_audio_vrsi_init")
TRC_MSG(MDI_AUDIO_TRC_VRSI_STOP, "[MDI][AUD]mdi_audio_vrsi_stop, session_id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_CLOSE, "[MDI][AUD]mdi_audio_vrsi_close, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_PLAY_TAG_FINISH_IND, "[MDI][AUD]mdi_audio_vrsi_play_tag_finish_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_PLAY_TAG, "[MDI][AUD]mdi_audio_vrsi_play_tag, session_id=[%d], tag_id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_PLAY_TTS_FINISH_IND, "[MDI][AUD]mdi_audio_vrsi_play_tts_finish_ind, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_PLAY_TTS, "[MDI][AUD]mdi_audio_vrsi_play_TTS, session_id=[%d], state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_REGISTER_RECORD, "[MDI][AUD]mdi_audio_vrsi_register_record, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_VRSI_UNREGISTER_RECORD, "[MDI][AUD]mdi_audio_vrsi_unregister_record, state=[%d]")

/* POC */
TRC_MSG(MDI_AUDIO_TRC_POC_START_ENCODE, "[MDI][AUD]mdi_audio_poc_start_encode, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_POC_STOP_ENCODE, "[MDI][AUD]mdi_audio_poc_stop_encode, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_POC_START_DECODE, "[MDI][AUD]mdi_audio_poc_start_decode, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_POC_STOP_DECODE, "[MDI][AUD]mdi_audio_poc_stop_decode, state=[%d], mode=[%d]")

/* Audio Effect */
TRC_MSG(MDI_AUDIO_TRC_SND_PLAY_STRING_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_snd_play_string_with_vol_path, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SND_PLAY_FILE_WITH_VOL_PATH, "[MDI][AUD]mdi_audio_snd_play_file_with_vol_path, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SND_PLAY_FINISH_IND, "[MDI][AUD]mdi_audio_snd_play_finish_ind, state=[%d], identifier=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SND_STOP, "[MDI][AUD]mdi_audio_snd_stop, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STRETCH_SET_SPEED, "[MDI][AUD]mdi_audio_stretch_set_speed, speed=[%d], stretch_on=[%d]")

/* Speech */
TRC_MSG(MDI_AUDIO_TRC_SP_SESSION_START, "[MDI][AUD]mdi_audio_speech_session_start:app_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_SESSION_STOP, "[MDI][AUD]mdi_audio_speech_session_stop:app_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_GET_APP_ID, "[MDI][AUD]mdi_audio_speech_get_app_id:app_id=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_CODEC_START, "[MDI][AUD]mdi_audio_speech_codec_start: codec_on=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_CODEC_STOP, "[MDI][AUD]mdi_audio_speech_codec_stop: codec_on=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_ENCODE_START, "[MDI][AUD]mdi_audio_speech_encode_start:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_ENCODE_STOP, "[MDI][AUD]mdi_audio_speech_encode_stop:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_DECODE_START, "[MDI][AUD]mdi_audio_speech_decode_start:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_DECODE_STOP, "[MDI][AUD]mdi_audio_speech_decode_stop:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_MIXER_ADD, "[MDI][AUD]mdi_audio_speech_mixer_add:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_MIXER_REMOVE, "[MDI][AUD]mdi_audio_speech_mixer_remove:rtp_handle=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_DTMF_START, "[MDI][AUD]mdi_audio_speech_dtmf_start:rtp_handle=[%d],code=[%d],type=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SP_DTMF_STOP, "[MDI][AUD]mdi_audio_speech_dtmf_stop:rtp_handle=[%d]")

/* TTS */
TRC_MSG(MDI_AUDIO_TRC_TTS_SET_ATTR, "[MDI][AUD]mdi_audio_tts_set_attr, state=[%d], id=[%d], value=[%d]\n")
TRC_MSG(MDI_AUDIO_TRC_TTS_PLAY_UPDATE_IND, "[MDI][AUD]mdi_audio_tts_play_update_ind")
TRC_MSG(MDI_AUDIO_TRC_TTS_PLAY, "[MDI][AUD]mdi_audio_tts_play, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TTS_STOP, "[MDI][AUD]mdi_audio_tts_stop, state=[%d], mode=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TTS_PAUSE, "[MDI][AUD]mdi_audio_tts_pause, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_TTS_RESUME, "[MDI][AUD]mdi_audio_tts_resume, state=[%d]")

/* Keytone Detect */
TRC_MSG(MDI_AUDIO_TRC_KEYTONE_DETECT_IND, "[MDI][AUD]mdi_audio_keytone_detect_ind, on=[%d],key=[%d]")
TRC_MSG(MDI_AUDIO_TRC_START_KEYTONE_DETECT, "[MDI][AUD]mdi_audio_start_keytone_detect")
TRC_MSG(MDI_AUDIO_TRC_STOP_KEYTONE_DETECT, "[MDI][AUD]mdi_audio_stop_keytone_detect")

/* Register MDI audio interrupt callback */
TRC_MSG(MDI_AUDIO_TRC_START_USE_BY_OTHER_TASK, "[MDI][AUD]mdi_audio_start_use_by_other_task, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STOP_USE_BY_OTHER_TASK, "[MDI][AUD]mdi_audio_stop_use_by_other_task")
TRC_MSG(MDI_AUDIO_TRC_TERMINATE_USE_BY_OTHER_TASK, "[MDI][AUD]mdi_audio_terminate_use_by_other_task")
TRC_MSG(MDI_AUDIO_TRC_REG_INT_CALLBACK, "[MDI][AUD]mdi_audio_register_interrupt_callback, state=[%d]")
TRC_MSG(MDI_AUDIO_TRC_CLEAR_INT_CALLBACK, "[MDI][AUD]mdi_audio_clear_interrupt_callback")

/* LOCK */
TRC_MSG(MDI_AUDIO_TRC_MUTEX_LOCK, "[MDI][AUD] LOCK: cnt=[%d] line=[%d]")
TRC_MSG(MDI_AUDIO_TRC_MUTEX_LOCK_NO_WAIT, "[MDI][AUD] LOCK_NO_WAIT: cnt=[%d] line=[%d]")
TRC_MSG(MDI_AUDIO_TRC_MUTEX_UNLOCK, "[MDI][AUD] UNLOCK: cnt=[%d] line=[%d]")

/* Volume setting */
TRC_MSG(MDI_AUDIO_TRC_CRESCENDO_START, "[MDI][AUD] Start crescendo: volume=[%d], bound=[%d]")
TRC_MSG(MDI_AUDIO_TRC_CRESCENDO_STOP, "[MDI][AUD] Stop crescendo")
TRC_MSG(MDI_AUDIO_TRC_CRESCENDO_TIMEOUT, "[MDI][AUD] Crescendo timeout: volume=[%d], bound=[%d]")
TRC_MSG(MDI_AUDIO_TRC_STATE_CHANGE_IND, "[MDI][AUD] State changes: reason=[%d], data=[%d]")
TRC_MSG(MDI_AUDIO_TRC_SET_AUDIO_TYPE, "[MDI][AUD] Set audio type: type=[%d]")
TRC_MSG(MDI_AUDIO_TRC_UPDATE_VOLUME, "[MDI][AUD] Update volume: reason=[%d], param=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GET_GAIN, "[MDI][AUD] Get gain: type=[%d], volume=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GAIN_ENVIRONMENT, "[MDI][AUD] Gain environment: audio_mode=[%d], audio_path=[%d], media_type=[%d], audio_type=[%d], is_in_call=[%d], is_bt_on=[%d], is_camcorder_on=[%d], is_fm_on=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GAIN_CONDITION, "[MDI]AUD] Gain condition: tone_usage=[%d], mic_usage=[%d], mm_usage=[%d], mm_source=[%d], volume_path=[%d]")
TRC_MSG(MDI_AUDIO_TRC_GAIN_DATA, "[MDI][AUD] Gain value: table index=[%d], volume type=[%d], volume level=[%d], volume data=[0x%x], gain type=[%d], nvram data=[0x%x]")

/* --------------------------------------------------------------- */
/* ------------------------- Bitsream API  ----------------------- */
/* --------------------------------------------------------------- */
/* Common */
TRC_MSG(MDI_TRC_BITSTREAM_GET_RESULT, "[MDI][BITSTREAM] mdi_bitstream_get_result(): result=[%d]")
TRC_MSG(MDI_TRC_BITSTREAM_GET_EVENT, "[MDI][BITSTREAM] mdi_bitstream_get_event(): event=[%d]")    
TRC_MSG(MDI_TRC_BITSTREAM_CODEC_TYPE_MDI_TO_MED, "mdi_bitstream_codec_type_mdi_to_med()")

/* Record */
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_CALLBACK_HANDLER, "[MDI][BITSTREAM] mdi_bitstream_record_callback_handler()")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_OPEN, "[MDI][BITSTREAM] mdi_bitstream_record_open(): codec = %d, quality = %d")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_CLOSE, "[MDI][BITSTREAM] mdi_bitstream_record_close(): handle = %d")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_START, "[MDI][BITSTREAM] mdi_bitstream_record_start(): handle = %d")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_STOP, "[MDI][BITSTREAM] mdi_bitstream_record_stop(): handle = %d")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_SET, "[MDI][BITSTREAM] mdi_bitstream_record_set(): handle = %d, type = %d")
TRC_MSG(MDI_TRC_BITSTREAM_RECORD_GET, "[MDI][BITSTREAM] mdi_bitstream_record_get(): handle = %d, type = %d")

/* Audio */
TRC_MSG(MDI_TRC_BITSTREAM_AUD_CALLBACK_HANDLER, "[MDI][BITSTREAM] mdi_bitstream_audio_callback_handler()")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_OPEN_HANDLE, "[MDI][BITSTREAM] mdi_bitstream_audio_open_handle(): codec = [%d]")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_CLOSE, "[MDI][BITSTREAM] mdi_bitstream_audio_close(): Open_count = [%d]")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_GET_BUF_STATUS, "[MDI][BITSTREAM] mdi_bitstream_audio_get_buffer_status(): total=[%d], free=[%d]")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_PUT_DATA, "[MDI][BITSTREAM] mdi_bitstream_audio_put_data(): input_size=[%d] used_size=[%d]")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_PUT_FRAME, "[MDI][BITSTREAM] mdi_bitstream_audio_put_frame(): frame_size=[%d] time_stamp=[%d]")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_START, "[MDI][BITSTREAM] mdi_bitstream_audio_start()")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_STOP, "[MDI][BITSTREAM] mdi_bitstream_audio_stop()")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_FINISHED, "[MDI][BITSTREAM] mdi_bitstream_audio_finish()")
TRC_MSG(MDI_TRC_BITSTREAM_AUD_GET_PLAY_TIME, "[MDI][BITSTREAM] mdi_bitstream_audio_get_play_time(): current_time=[%d]")
